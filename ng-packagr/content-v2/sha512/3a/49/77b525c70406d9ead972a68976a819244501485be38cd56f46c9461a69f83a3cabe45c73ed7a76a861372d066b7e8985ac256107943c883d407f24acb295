{"hash":"a43e218ac8dd4ecb0289ecc4b0925467ecb18326","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Pipe, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, combineLatest, takeUntil } from 'rxjs';\nimport * as i1 from '@angular/forms';\nimport { Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport DOMPurify from 'dompurify';\n\nclass FormGeneratorService {\n    constructor() {\n    }\n}\nFormGeneratorService.ɵfac = function FormGeneratorService_Factory(t) { return new (t || FormGeneratorService)(); };\nFormGeneratorService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: FormGeneratorService, factory: FormGeneratorService.ɵfac, providedIn: 'root' });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGeneratorService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\nvar QuestionType;\n(function (QuestionType) {\n    QuestionType[\"RADIO\"] = \"radio\";\n    QuestionType[\"FIELDSET\"] = \"fieldset\";\n    QuestionType[\"CHECKBOX\"] = \"checkbox\";\n    QuestionType[\"TEXTAREA\"] = \"textarea\";\n    QuestionType[\"TEXTINPUT\"] = \"textinput\";\n})(QuestionType || (QuestionType = {}));\nvar FieldType;\n(function (FieldType) {\n    FieldType[\"NUMBER\"] = \"number\";\n    FieldType[\"STRING\"] = \"string\";\n    FieldType[\"EMAIL\"] = \"email\";\n    FieldType[\"DATE\"] = \"date\";\n    FieldType[\"CHECKBOX\"] = \"checkbox\";\n    FieldType[\"TEXTAREA\"] = \"textarea\";\n})(FieldType || (FieldType = {}));\n\nfunction atLeastOneCheckboxCheckedValidator(minRequired = 1) {\n    return function validate(formGroup) {\n        let checked = 0;\n        Object.keys(formGroup.controls).forEach(key => {\n            const control = formGroup.controls[key];\n            if (control.value === true) {\n                checked++;\n            }\n        });\n        if (checked < minRequired) {\n            return {\n                requireCheckboxToBeChecked: true,\n            };\n        }\n        return null;\n    };\n}\n\nclass CustomValidation {\n    static email() {\n        return (control) => {\n            const value = control.value?.trim();\n            const regex = new RegExp(/^(?!\\.)((?!.*\\.{2})[a-zA-Z0-9\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF\\.!#$%&'*+-/=?^_`{|}~\\-\\d]+)@(?!\\.)([a-zA-Z0-9\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF\\-\\.\\d]+)((\\.([a-zA-Z\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF]){2,63})+)$/i);\n            const valid = regex.test(value);\n            return valid ? null : { email: true };\n        };\n    }\n}\n\nvar success = \"Success\";\nvar successMsg = \"Aitäh, et täitsite küsimustiku! Teie andmed salvestati.\";\nvar lastSubmitted = \"Viimati esitas:\";\nvar person = \"Isik\";\nvar submitTime = \"Esitamise aeg:\";\nvar mandatoryField = \"Peab olema täidetud\";\nvar correctEmail = \"Palun sisestage korrektne e-maili aadress\";\nvar correctNumber = \"Palun sisestage korrektne number\";\nvar error = \"Error\";\nvar errorMsg = \"Andmete salvestamisel tekkis viga. Palun proovige uuesti ja kui probleem on püsiv, siis võtke palun ühendust meie kasutajatoega help@ria.ee\";\nvar close = \"Sulgen\";\nvar sendForm = \"Saadan ankeedi\";\nvar upto = \"Kuni\";\nvar characters = \"sümbolit\";\nvar et = {\n\tsuccess: success,\n\tsuccessMsg: successMsg,\n\tlastSubmitted: lastSubmitted,\n\tperson: person,\n\tsubmitTime: submitTime,\n\tmandatoryField: mandatoryField,\n\tcorrectEmail: correctEmail,\n\tcorrectNumber: correctNumber,\n\terror: error,\n\terrorMsg: errorMsg,\n\tclose: close,\n\tsendForm: sendForm,\n\tupto: upto,\n\tcharacters: characters\n};\n\nclass TranslatePipe {\n    constructor() { }\n    transform(code, params) {\n        let messages = {};\n        messages = et;\n        return this.replaceParams(messages[code], params) ?? code;\n    }\n    replaceParams(text, params) {\n        if (!text || !params || !Object.keys(params)?.length) {\n            return text;\n        }\n        const keys = Object.keys(params);\n        keys.forEach(key => {\n            text = text.replace(`{{${key}}}`, (params[key] || '').toString());\n        });\n        return text;\n    }\n}\nTranslatePipe.ɵfac = function TranslatePipe_Factory(t) { return new (t || TranslatePipe)(); };\nTranslatePipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"translate\", type: TranslatePipe, pure: false });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslatePipe, [{\n        type: Pipe,\n        args: [{\n                name: 'translate',\n                pure: false // required to update the value when the promise is resolved\n            }]\n    }], function () { return []; }, null); })();\n\nclass SanitizePipe {\n    constructor() {\n    }\n    transform(value) {\n        return DOMPurify.sanitize(value, { USE_PROFILES: { html: true }, FORBID_ATTR: ['class'] });\n    }\n}\nSanitizePipe.ɵfac = function SanitizePipe_Factory(t) { return new (t || SanitizePipe)(); };\nSanitizePipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"sanitize\", type: SanitizePipe, pure: true });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SanitizePipe, [{\n        type: Pipe,\n        args: [{\n                name: 'sanitize'\n            }]\n    }], function () { return []; }, null); })();\n\nfunction FormGeneratorComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"div\", 6)(3, \"span\", 7);\n    i0.ɵɵtext(4, \" info \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function FormGeneratorComponent_div_0_Template_button_click_5_listener() { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.closeSuccessMessage()); });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"p\", 9);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(8, 1, \"successMsg\"), \"\");\n} }\nfunction FormGeneratorComponent_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"p\", 11);\n    i0.ɵɵpipe(2, \"sanitize\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(2, 1, ctx_r1.getTextLang(ctx_r1.jsonForm == null ? null : ctx_r1.jsonForm.generalInfo == null ? null : ctx_r1.jsonForm.generalInfo.description)), i0.ɵɵsanitizeHtml);\n} }\nfunction FormGeneratorComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\")(5, \"p\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 9);\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"date\");\n    i0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 6, \"lastSubmitted\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(7, 8, \"person\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r2.formAnswers == null ? null : ctx_r2.formAnswers.name, \" (\", ctx_r2.formAnswers == null ? null : ctx_r2.formAnswers.personal_code, \")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(12, 10, \"submitTime\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 12, ctx_r2.formAnswers == null ? null : ctx_r2.formAnswers.created, \"dd.MM.yyyy HH:mm\"));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_p_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const question_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r14.getTextLang(question_r11 == null ? null : question_r11.description));\n} }\nconst _c0 = function (a0) { return { \"validation-err\": a0 }; };\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"textarea\", 40);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r25 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r27 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", extraField_r25 == null ? null : extraField_r25.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r27.getTextLang(extraField_r25 == null ? null : extraField_r25.title));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", (extraField_r25 == null ? null : extraField_r25.maxLength) ? i0.ɵɵpipeBind1(4, 8, \"upto\") + \" \" + (extraField_r25 == null ? null : extraField_r25.maxLength) + \" \" + i0.ɵɵpipeBind1(5, 10, \"characters\") : \"\");\n    i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r25 == null ? null : extraField_r25.maxLength);\n    i0.ɵɵpropertyInterpolate(\"id\", extraField_r25 == null ? null : extraField_r25.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r25 == null ? null : extraField_r25.id);\n    i0.ɵɵpropertyInterpolate(\"rows\", extraField_r25 == null ? null : extraField_r25.rows);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r27.isSubmitted && ctx_r27.getIfErrorRequiredField(extraField_r25 == null ? null : extraField_r25.id)));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctEmail\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 41);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_div_4_Template, 5, 3, \"div\", 2);\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_div_5_Template, 5, 3, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r25 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", extraField_r25 == null ? null : extraField_r25.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r28.getTextLang(extraField_r25 == null ? null : extraField_r25.title), \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", extraField_r25 == null ? null : extraField_r25.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r25 == null ? null : extraField_r25.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r25 == null ? null : extraField_r25.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r28.isSubmitted && (ctx_r28.getIfErrorRequiredField(extraField_r25 == null ? null : extraField_r25.id) || ctx_r28.getIfInvalidEmail(extraField_r25 == null ? null : extraField_r25.id))));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.isSubmitted && ctx_r28.getIfInvalidEmail(extraField_r25 == null ? null : extraField_r25.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.isSubmitted && ctx_r28.getIfErrorRequiredField(extraField_r25 == null ? null : extraField_r25.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_1_Template, 6, 14, \"div\", 2);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_Template, 6, 10, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r25 = i0.ɵɵnextContext().$implicit;\n    const ctx_r26 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (extraField_r25 == null ? null : extraField_r25.type) == ctx_r26.FieldType.TEXTAREA);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (extraField_r25 == null ? null : extraField_r25.type) == ctx_r26.FieldType.EMAIL);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_Template, 3, 2, \"div\", 37);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r25 = ctx.$implicit;\n    const field_r22 = i0.ɵɵnextContext().$implicit;\n    const question_r11 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r24 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r24.showCommentFieldRadio(question_r11 == null ? null : question_r11.id, field_r22 == null ? null : field_r22.value, extraField_r25 == null ? null : extraField_r25.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\", 34);\n    i0.ɵɵelement(2, \"input\", 35);\n    i0.ɵɵelementStart(3, \"label\", 36);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_Template, 2, 1, \"div\", 32);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r22 = ctx.$implicit;\n    const indexOfField_r23 = ctx.index;\n    const question_r11 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", field_r22 == null ? null : field_r22.value);\n    i0.ɵɵpropertyInterpolate(\"id\", (question_r11 == null ? null : question_r11.id) + indexOfField_r23);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", question_r11 == null ? null : question_r11.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r22 == null ? null : field_r22.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r19.isSubmitted && ctx_r19.getIfError(question_r11 == null ? null : question_r11.id)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", (question_r11 == null ? null : question_r11.id) + indexOfField_r23);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.getTextLang(field_r22 == null ? null : field_r22.title), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", field_r22 == null ? null : field_r22.fields);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_p_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const secondQuestion_r37 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r41 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r41.getTextLang(secondQuestion_r37 == null ? null : secondQuestion_r37.description));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"textarea\", 45);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r52 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r54 = i0.ɵɵnextContext(9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", extraField_r52 == null ? null : extraField_r52.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r54.getTextLang(extraField_r52 == null ? null : extraField_r52.title));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", extraField_r52 == null ? null : extraField_r52.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r52 == null ? null : extraField_r52.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r52 == null ? null : extraField_r52.maxLength);\n    i0.ɵɵpropertyInterpolate(\"rows\", extraField_r52 == null ? null : extraField_r52.rows);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", (extraField_r52 == null ? null : extraField_r52.maxLength) ? i0.ɵɵpipeBind1(4, 8, \"upto\") + \" \" + (extraField_r52 == null ? null : extraField_r52.maxLength) + \" \" + i0.ɵɵpipeBind1(5, 10, \"characters\") : \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r54.isSubmitted && (ctx_r54.getIfError(extraField_r52 == null ? null : extraField_r52.id) || ctx_r54.getIfFieldInvalid(extraField_r52 == null ? null : extraField_r52.id))));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctEmail\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 41);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_div_4_Template, 5, 3, \"div\", 2);\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_div_5_Template, 5, 3, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r52 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r55 = i0.ɵɵnextContext(9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", extraField_r52 == null ? null : extraField_r52.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r55.getTextLang(extraField_r52 == null ? null : extraField_r52.title), \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", extraField_r52 == null ? null : extraField_r52.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r52 == null ? null : extraField_r52.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r52 == null ? null : extraField_r52.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r55.isSubmitted && (ctx_r55.getIfErrorRequiredField(extraField_r52 == null ? null : extraField_r52.id) || ctx_r55.getIfInvalidEmail(extraField_r52 == null ? null : extraField_r52.id) || ctx_r55.getIfFieldInvalid(extraField_r52 == null ? null : extraField_r52.id))));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r55.isSubmitted && ctx_r55.getIfInvalidEmail(extraField_r52 == null ? null : extraField_r52.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r55.isSubmitted && ctx_r55.getIfErrorRequiredField(extraField_r52 == null ? null : extraField_r52.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_1_Template, 6, 14, \"div\", 2);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_Template, 6, 10, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r52 = i0.ɵɵnextContext().$implicit;\n    const ctx_r53 = i0.ɵɵnextContext(9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (extraField_r52 == null ? null : extraField_r52.type) == ctx_r53.FieldType.TEXTAREA);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (extraField_r52 == null ? null : extraField_r52.type) == ctx_r53.FieldType.EMAIL);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_Template, 3, 2, \"div\", 37);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r52 = ctx.$implicit;\n    const field_r49 = i0.ɵɵnextContext().$implicit;\n    const secondQuestion_r37 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r51 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r51.showCommentFieldRadio(secondQuestion_r37 == null ? null : secondQuestion_r37.id, field_r49 == null ? null : field_r49.value, extraField_r52 == null ? null : extraField_r52.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\", 34);\n    i0.ɵɵelement(2, \"input\", 44);\n    i0.ɵɵelementStart(3, \"label\", 36);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_Template, 2, 1, \"div\", 32);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r49 = ctx.$implicit;\n    const indexOfField_r50 = ctx.index;\n    const secondQuestion_r37 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r47 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", (secondQuestion_r37 == null ? null : secondQuestion_r37.id) + indexOfField_r50);\n    i0.ɵɵpropertyInterpolate(\"value\", field_r49 == null ? null : field_r49.value);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", secondQuestion_r37 == null ? null : secondQuestion_r37.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r49 == null ? null : field_r49.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r47.isSubmitted && ctx_r47.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", (secondQuestion_r37 == null ? null : secondQuestion_r37.id) + indexOfField_r50);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r47.getTextLang(field_r49 == null ? null : field_r49.title), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", field_r49 == null ? null : field_r49.fields);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_Template, 6, 10, \"div\", 30);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_2_Template, 5, 3, \"div\", 31);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const secondQuestion_r37 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r42 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", secondQuestion_r37 == null ? null : secondQuestion_r37.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r42.isSubmitted && ctx_r42.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelement(1, \"textarea\", 45);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r67 = ctx.$implicit;\n    const secondQuestion_r37 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r65 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", secondQuestion_r37 == null ? null : secondQuestion_r37.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", secondQuestion_r37 == null ? null : secondQuestion_r37.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r67 == null ? null : field_r67.maxLength);\n    i0.ɵɵpropertyInterpolate(\"rows\", field_r67 == null ? null : field_r67.rows);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", (field_r67 == null ? null : field_r67.maxLength) ? i0.ɵɵpipeBind1(2, 6, \"upto\") + \" \" + (field_r67 == null ? null : field_r67.maxLength) + \" \" + i0.ɵɵpipeBind1(3, 8, \"characters\") : \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx_r65.isSubmitted && (ctx_r65.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id) || ctx_r65.getIfFieldInvalid(secondQuestion_r37 == null ? null : secondQuestion_r37.id))));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_div_1_Template, 4, 12, \"div\", 30);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_div_2_Template, 5, 3, \"div\", 31);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const secondQuestion_r37 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r43 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", secondQuestion_r37 == null ? null : secondQuestion_r37.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r43.isSubmitted && ctx_r43.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 48);\n    i0.ɵɵelement(1, \"input\", 49);\n    i0.ɵɵelementStart(2, \"label\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const field_r72 = i0.ɵɵnextContext().$implicit;\n    const secondQuestion_r37 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r73 = i0.ɵɵnextContext(5);\n    i0.ɵɵpropertyInterpolate(\"formGroupName\", secondQuestion_r37 == null ? null : secondQuestion_r37.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r72 == null ? null : field_r72.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r73.isSubmitted && ctx_r73.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id, null, true)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r73.getTextLang(field_r72 == null ? null : field_r72.title), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_div_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"textarea\", 45);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r80 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r82 = i0.ɵɵnextContext(9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", extraField_r80 == null ? null : extraField_r80.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r82.getTextLang(extraField_r80 == null ? null : extraField_r80.title));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", extraField_r80 == null ? null : extraField_r80.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r80 == null ? null : extraField_r80.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r80 == null ? null : extraField_r80.maxLength);\n    i0.ɵɵpropertyInterpolate(\"rows\", extraField_r80 == null ? null : extraField_r80.rows);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", (extraField_r80 == null ? null : extraField_r80.maxLength) ? i0.ɵɵpipeBind1(4, 8, \"upto\") + \" \" + (extraField_r80 == null ? null : extraField_r80.maxLength) + \" \" + i0.ɵɵpipeBind1(5, 10, \"characters\") : \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r82.isSubmitted && (ctx_r82.getIfErrorRequiredField(extraField_r80 == null ? null : extraField_r80.id) || ctx_r82.getIfFieldInvalid(extraField_r80 == null ? null : extraField_r80.id))));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_div_1_div_1_Template, 6, 14, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r80 = i0.ɵɵnextContext().$implicit;\n    const ctx_r81 = i0.ɵɵnextContext(9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (extraField_r80 == null ? null : extraField_r80.type) == ctx_r81.FieldType.TEXTAREA);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_div_1_Template, 2, 1, \"div\", 37);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r80 = ctx.$implicit;\n    const field_r72 = i0.ɵɵnextContext().$implicit;\n    const secondQuestion_r37 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r74 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r74.showCommentField(secondQuestion_r37 == null ? null : secondQuestion_r37.id, field_r72 == null ? null : field_r72.id, extraField_r80 == null ? null : extraField_r80.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 53);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r72 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(field_r72 == null ? null : field_r72.prefix);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_div_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 50);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_span_4_Template, 2, 1, \"span\", 51);\n    i0.ɵɵelement(5, \"input\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_div_6_Template, 5, 3, \"div\", 1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r72 = i0.ɵɵnextContext().$implicit;\n    const ctx_r75 = i0.ɵɵnextContext(8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r75.getTextLang(field_r72 == null ? null : field_r72.title), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", field_r72 == null ? null : field_r72.prefix);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r72 == null ? null : field_r72.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r75.isSubmitted && (ctx_r75.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id) || ctx_r75.getIfFieldInvalid(field_r72 == null ? null : field_r72.id))));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r75.isSubmitted && ctx_r75.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 53);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r72 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(field_r72 == null ? null : field_r72.prefix);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_div_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctNumber\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 50);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_span_4_Template, 2, 1, \"span\", 51);\n    i0.ɵɵelement(5, \"input\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_div_6_Template, 5, 3, \"div\", 1);\n    i0.ɵɵtemplate(7, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_div_7_Template, 5, 3, \"div\", 1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r72 = i0.ɵɵnextContext().$implicit;\n    const ctx_r76 = i0.ɵɵnextContext(8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r76.getTextLang(field_r72 == null ? null : field_r72.title), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", field_r72 == null ? null : field_r72.prefix);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r72 == null ? null : field_r72.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx_r76.isSubmitted && (ctx_r76.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id) || ctx_r76.getIfInvalidNumber(field_r72 == null ? null : field_r72.id) || ctx_r76.getIfFieldInvalid(field_r72 == null ? null : field_r72.id))));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r76.isSubmitted && ctx_r76.getIfInvalidNumber(field_r72 == null ? null : field_r72.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r76.isSubmitted && ctx_r76.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_div_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctEmail\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 41);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_div_4_Template, 5, 3, \"div\", 1);\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_div_5_Template, 5, 3, \"div\", 1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r72 = i0.ɵɵnextContext().$implicit;\n    const ctx_r77 = i0.ɵɵnextContext(8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r77.getTextLang(field_r72 == null ? null : field_r72.title), \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", field_r72 == null ? null : field_r72.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r72 == null ? null : field_r72.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r77.isSubmitted && (ctx_r77.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id) || ctx_r77.getIfInvalidEmail(field_r72 == null ? null : field_r72.id) || ctx_r77.getIfFieldInvalid(field_r72 == null ? null : field_r72.id))));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r77.isSubmitted && ctx_r77.getIfInvalidEmail(field_r72 == null ? null : field_r72.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r77.isSubmitted && ctx_r77.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 46);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_2_Template, 4, 9, \"div\", 47);\n    i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_Template, 2, 1, \"div\", 32);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_Template, 7, 10, \"div\", 37);\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_Template, 8, 11, \"div\", 37);\n    i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_Template, 6, 10, \"div\", 37);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const field_r72 = ctx.$implicit;\n    const ctx_r70 = i0.ɵɵnextContext(8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (field_r72 == null ? null : field_r72.type) == ctx_r70.FieldType.CHECKBOX);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", field_r72 == null ? null : field_r72.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (field_r72 == null ? null : field_r72.type) == ctx_r70.FieldType.STRING);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (field_r72 == null ? null : field_r72.type) == ctx_r70.FieldType.NUMBER);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (field_r72 == null ? null : field_r72.type) == ctx_r70.FieldType.EMAIL);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_Template, 7, 5, \"div\", 32);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_2_Template, 5, 3, \"div\", 31);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const secondQuestion_r37 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r44 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", secondQuestion_r37 == null ? null : secondQuestion_r37.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r44.isSubmitted && ctx_r44.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id, null, true));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_p_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const thirdQuestion_r100 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r104 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r104.getTextLang(thirdQuestion_r100 == null ? null : thirdQuestion_r100.description));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\", 46);\n    i0.ɵɵelement(2, \"input\", 44);\n    i0.ɵɵelementStart(3, \"label\", 36);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n} if (rf & 2) {\n    const field_r111 = ctx.$implicit;\n    const indexOfField_r112 = ctx.index;\n    const thirdQuestion_r100 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r109 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", (thirdQuestion_r100 == null ? null : thirdQuestion_r100.id) + indexOfField_r112);\n    i0.ɵɵpropertyInterpolate(\"value\", field_r111 == null ? null : field_r111.value);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r111 == null ? null : field_r111.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r109.isSubmitted && ctx_r109.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", (thirdQuestion_r100 == null ? null : thirdQuestion_r100.id) + indexOfField_r112);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r109.getTextLang(field_r111 == null ? null : field_r111.title), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_div_1_Template, 5, 9, \"div\", 30);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_div_2_Template, 5, 3, \"div\", 31);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const thirdQuestion_r100 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r105 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r105.isSubmitted && ctx_r105.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelement(1, \"textarea\", 45);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r117 = ctx.$implicit;\n    const thirdQuestion_r100 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r115 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r117 == null ? null : field_r117.maxLength);\n    i0.ɵɵpropertyInterpolate(\"rows\", field_r117 == null ? null : field_r117.rows);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", (field_r117 == null ? null : field_r117.maxLength) ? i0.ɵɵpipeBind1(2, 6, \"upto\") + \" \" + (field_r117 == null ? null : field_r117.maxLength) + \" \" + i0.ɵɵpipeBind1(3, 8, \"characters\") : \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx_r115.isSubmitted && (ctx_r115.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id) || ctx_r115.getIfFieldInvalid(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id))));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_div_1_Template, 4, 12, \"div\", 30);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_div_2_Template, 5, 3, \"div\", 31);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const thirdQuestion_r100 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r106 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r106.isSubmitted && ctx_r106.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 48);\n    i0.ɵɵelement(1, \"input\", 49);\n    i0.ɵɵelementStart(2, \"label\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const field_r122 = i0.ɵɵnextContext().$implicit;\n    const thirdQuestion_r100 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r123 = i0.ɵɵnextContext(7);\n    i0.ɵɵpropertyInterpolate(\"formGroupName\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r122 == null ? null : field_r122.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r123.isSubmitted && ctx_r123.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id, null, true)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r123.getTextLang(field_r122 == null ? null : field_r122.title), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_div_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"textarea\", 45);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r130 = i0.ɵɵnextContext(2).$implicit;\n    const thirdQuestion_r100 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r132 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", extraField_r130 == null ? null : extraField_r130.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r132.getTextLang(extraField_r130 == null ? null : extraField_r130.title));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", extraField_r130 == null ? null : extraField_r130.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r130 == null ? null : extraField_r130.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r130 == null ? null : extraField_r130.maxLength);\n    i0.ɵɵpropertyInterpolate(\"rows\", extraField_r130 == null ? null : extraField_r130.rows);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", (extraField_r130 == null ? null : extraField_r130.maxLength) ? i0.ɵɵpipeBind1(4, 8, \"upto\") + \" \" + (extraField_r130 == null ? null : extraField_r130.maxLength) + \" \" + i0.ɵɵpipeBind1(5, 10, \"characters\") : \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r132.isSubmitted && (ctx_r132.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id, thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields) || ctx_r132.getIfFieldInvalid(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id))));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_div_1_div_1_Template, 6, 14, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r130 = i0.ɵɵnextContext().$implicit;\n    const ctx_r131 = i0.ɵɵnextContext(11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (extraField_r130 == null ? null : extraField_r130.type) == ctx_r131.FieldType.TEXTAREA);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_div_1_Template, 2, 1, \"div\", 37);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r130 = ctx.$implicit;\n    const field_r122 = i0.ɵɵnextContext().$implicit;\n    const thirdQuestion_r100 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r124 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r124.showCommentField(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id, field_r122 == null ? null : field_r122.id, extraField_r130 == null ? null : extraField_r130.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_3_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 53);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r122 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(field_r122 == null ? null : field_r122.prefix);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 50);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_3_span_4_Template, 2, 1, \"span\", 51);\n    i0.ɵɵelement(5, \"input\", 52);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const field_r122 = i0.ɵɵnextContext().$implicit;\n    const thirdQuestion_r100 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r125 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r125.getTextLang(field_r122 == null ? null : field_r122.title), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", field_r122 == null ? null : field_r122.prefix);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r122 == null ? null : field_r122.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r125.isSubmitted && (ctx_r125.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id, thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields) || ctx_r125.getIfFieldInvalid(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id))));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 53);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r122 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(field_r122 == null ? null : field_r122.prefix);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_div_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctNumber\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 50);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_span_4_Template, 2, 1, \"span\", 51);\n    i0.ɵɵelement(5, \"input\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_div_6_Template, 5, 3, \"div\", 1);\n    i0.ɵɵtemplate(7, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_div_7_Template, 5, 3, \"div\", 1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r122 = i0.ɵɵnextContext().$implicit;\n    const ctx_r126 = i0.ɵɵnextContext(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r126.getTextLang(field_r122 == null ? null : field_r122.title), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", field_r122 == null ? null : field_r122.prefix);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r122 == null ? null : field_r122.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx_r126.isSubmitted && (ctx_r126.getIfErrorRequiredField(field_r122 == null ? null : field_r122.id) || ctx_r126.getIfInvalidNumber(field_r122 == null ? null : field_r122.id) || ctx_r126.getIfFieldInvalid(field_r122 == null ? null : field_r122.id))));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r126.isSubmitted && ctx_r126.getIfInvalidNumber(field_r122 == null ? null : field_r122.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r126.isSubmitted && ctx_r126.getIfErrorRequiredField(field_r122 == null ? null : field_r122.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_div_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctEmail\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 41);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_div_4_Template, 5, 3, \"div\", 2);\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_div_5_Template, 5, 3, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r122 = i0.ɵɵnextContext().$implicit;\n    const ctx_r127 = i0.ɵɵnextContext(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r127.getTextLang(field_r122 == null ? null : field_r122.title), \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", field_r122 == null ? null : field_r122.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r122 == null ? null : field_r122.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r127.isSubmitted && (ctx_r127.getIfErrorRequiredField(field_r122 == null ? null : field_r122.id) || ctx_r127.getIfInvalidEmail(field_r122 == null ? null : field_r122.id) || ctx_r127.getIfFieldInvalid(field_r122 == null ? null : field_r122.id))));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r127.isSubmitted && ctx_r127.getIfInvalidEmail(field_r122 == null ? null : field_r122.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r127.isSubmitted && ctx_r127.getIfErrorRequiredField(field_r122 == null ? null : field_r122.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_1_Template, 4, 9, \"div\", 47);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_Template, 2, 1, \"div\", 32);\n    i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_3_Template, 6, 9, \"div\", 37);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_Template, 8, 11, \"div\", 37);\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_Template, 6, 10, \"div\", 37);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r122 = ctx.$implicit;\n    const ctx_r120 = i0.ɵɵnextContext(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (field_r122 == null ? null : field_r122.type) == ctx_r120.FieldType.CHECKBOX);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", field_r122 == null ? null : field_r122.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (field_r122 == null ? null : field_r122.type) == ctx_r120.FieldType.STRING);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (field_r122 == null ? null : field_r122.type) == ctx_r120.FieldType.NUMBER);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (field_r122 == null ? null : field_r122.type) == ctx_r120.FieldType.EMAIL);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_Template, 6, 5, \"div\", 32);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_2_Template, 5, 3, \"div\", 31);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const thirdQuestion_r100 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r107 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r107.isSubmitted && ctx_r107.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id, thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 24)(2, \"p\", 25);\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_span_4_Template, 2, 0, \"span\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_p_5_Template, 2, 1, \"p\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_Template, 3, 2, \"div\", 2);\n    i0.ɵɵtemplate(7, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_Template, 3, 2, \"div\", 2);\n    i0.ɵɵtemplate(8, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_Template, 3, 2, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const thirdQuestion_r100 = i0.ɵɵnextContext().$implicit;\n    const ctx_r102 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r102.getTextLang(thirdQuestion_r100 == null ? null : thirdQuestion_r100.title), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (thirdQuestion_r100 == null ? null : thirdQuestion_r100.type) == ctx_r102.QuestionType.RADIO);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (thirdQuestion_r100 == null ? null : thirdQuestion_r100.type) == ctx_r102.QuestionType.TEXTINPUT);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (thirdQuestion_r100 == null ? null : thirdQuestion_r100.type) == ctx_r102.QuestionType.FIELDSET);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_Template, 9, 7, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const thirdQuestion_r100 = ctx.$implicit;\n    const secondQuestion_r37 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r45 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r45.makeQuestionVisible(secondQuestion_r37, thirdQuestion_r100));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 24)(2, \"p\", 25);\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_span_4_Template, 2, 0, \"span\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_p_5_Template, 2, 1, \"p\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_Template, 3, 2, \"div\", 2);\n    i0.ɵɵtemplate(7, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_Template, 3, 2, \"div\", 2);\n    i0.ɵɵtemplate(8, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_Template, 3, 2, \"div\", 2);\n    i0.ɵɵtemplate(9, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_Template, 2, 1, \"div\", 32);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const secondQuestion_r37 = i0.ɵɵnextContext().$implicit;\n    const ctx_r39 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", secondQuestion_r37 == null ? null : secondQuestion_r37.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r39.getTextLang(secondQuestion_r37 == null ? null : secondQuestion_r37.title), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", secondQuestion_r37 == null ? null : secondQuestion_r37.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", secondQuestion_r37 == null ? null : secondQuestion_r37.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (secondQuestion_r37 == null ? null : secondQuestion_r37.type) == ctx_r39.QuestionType.RADIO);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", secondQuestion_r37.type == ctx_r39.QuestionType.TEXTINPUT);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (secondQuestion_r37 == null ? null : secondQuestion_r37.type) == ctx_r39.QuestionType.FIELDSET);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", secondQuestion_r37 == null ? null : secondQuestion_r37.questions);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_Template, 10, 8, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const secondQuestion_r37 = ctx.$implicit;\n    const question_r11 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r21.makeQuestionVisible(question_r11, secondQuestion_r37));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_Template, 6, 10, \"div\", 30);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_2_Template, 5, 3, \"div\", 31);\n    i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_Template, 2, 1, \"div\", 32);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const question_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r11 == null ? null : question_r11.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.isSubmitted && ctx_r15.getIfError(question_r11 == null ? null : question_r11.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r11 == null ? null : question_r11.questions);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_div_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"textarea\", 45);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r161 = i0.ɵɵnextContext(2).$implicit;\n    const field_r158 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r163 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", extraField_r161 == null ? null : extraField_r161.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r163.getTextLang(extraField_r161 == null ? null : extraField_r161.title));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", extraField_r161 == null ? null : extraField_r161.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r161 == null ? null : extraField_r161.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r161 == null ? null : extraField_r161.maxLength);\n    i0.ɵɵpropertyInterpolate(\"rows\", extraField_r161 == null ? null : extraField_r161.rows);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", (extraField_r161 == null ? null : extraField_r161.maxLength) ? i0.ɵɵpipeBind1(4, 8, \"upto\") + \" \" + (extraField_r161 == null ? null : extraField_r161.maxLength) + \" \" + i0.ɵɵpipeBind1(5, 10, \"characters\") : \"\");\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r163.isSubmitted && (ctx_r163.getIfErrorRequiredField(field_r158 == null ? null : field_r158.id) || ctx_r163.getIfFieldInvalid(field_r158 == null ? null : field_r158.id) || ctx_r163.getIfFieldInvalid(field_r158 == null ? null : field_r158.id))));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_div_1_div_1_Template, 6, 14, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r161 = i0.ɵɵnextContext().$implicit;\n    const ctx_r162 = i0.ɵɵnextContext(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (extraField_r161 == null ? null : extraField_r161.type) == ctx_r162.FieldType.TEXTAREA);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_div_1_Template, 2, 1, \"div\", 37);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const extraField_r161 = ctx.$implicit;\n    const field_r158 = i0.ɵɵnextContext(2).$implicit;\n    const question_r11 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r160 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r160.showCommentField(question_r11 == null ? null : question_r11.id, field_r158 == null ? null : field_r158.id, extraField_r161 == null ? null : extraField_r161.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 48);\n    i0.ɵɵelement(2, \"input\", 54);\n    i0.ɵɵelementStart(3, \"label\", 36);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_Template, 2, 1, \"div\", 32);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r158 = i0.ɵɵnextContext().$implicit;\n    const question_r11 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r159 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"formGroupName\", question_r11 == null ? null : question_r11.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", field_r158 == null ? null : field_r158.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", field_r158 == null ? null : field_r158.id);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r158 == null ? null : field_r158.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r159.isSubmitted && (ctx_r159.getIfError(question_r11 == null ? null : question_r11.id, null, true) || ctx_r159.getIfFieldInvalid(question_r11 == null ? null : question_r11.id))));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", field_r158 == null ? null : field_r158.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r159.getTextLang(field_r158 == null ? null : field_r158.title), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", field_r158 == null ? null : field_r158.fields);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_Template, 6, 10, \"div\", 31);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r158 = ctx.$implicit;\n    const ctx_r156 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (field_r158 == null ? null : field_r158.type) == ctx_r156.FieldType.CHECKBOX);\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_Template, 2, 1, \"div\", 32);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_2_Template, 5, 3, \"div\", 31);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const question_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r11 == null ? null : question_r11.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.isSubmitted && ctx_r16.getIfError(question_r11 == null ? null : question_r11.id, null, true));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_8_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelement(1, \"textarea\", 55);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const field_r174 = ctx.$implicit;\n    const question_r11 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r172 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", (field_r174 == null ? null : field_r174.maxLength) ? i0.ɵɵpipeBind1(2, 6, \"upto\") + \" \" + (field_r174 == null ? null : field_r174.maxLength) + \" \" + i0.ɵɵpipeBind1(3, 8, \"characters\") : \"\");\n    i0.ɵɵpropertyInterpolate(\"id\", question_r11 == null ? null : question_r11.id);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", question_r11 == null ? null : question_r11.id);\n    i0.ɵɵpropertyInterpolate(\"rows\", field_r174 == null ? null : field_r174.rows);\n    i0.ɵɵpropertyInterpolate(\"maxlength\", field_r174 == null ? null : field_r174.maxLength);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx_r172.isSubmitted && (ctx_r172.getIfError(question_r11 == null ? null : question_r11.id) || ctx_r172.getIfFieldInvalid(question_r11 == null ? null : question_r11.id))));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_8_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"div\", 42);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_8_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_8_div_1_Template, 4, 12, \"div\", 30);\n    i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_8_div_2_Template, 5, 3, \"div\", 31);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const question_r11 = i0.ɵɵnextContext().$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r11 == null ? null : question_r11.fields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.isSubmitted && ctx_r17.getIfError(question_r11 == null ? null : question_r11.id));\n} }\nfunction FormGeneratorComponent_form_3_div_1_div_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 24)(2, \"p\", 25);\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_span_4_Template, 2, 0, \"span\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_p_5_Template, 2, 1, \"p\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_Template, 4, 3, \"div\", 2);\n    i0.ɵɵtemplate(7, FormGeneratorComponent_form_3_div_1_div_3_div_7_Template, 3, 2, \"div\", 2);\n    i0.ɵɵtemplate(8, FormGeneratorComponent_form_3_div_1_div_3_div_8_Template, 3, 2, \"div\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const question_r11 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", question_r11 == null ? null : question_r11.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r10.getTextLang(question_r11 == null ? null : question_r11.title), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r11 == null ? null : question_r11.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", question_r11 == null ? null : question_r11.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (question_r11 == null ? null : question_r11.type) == ctx_r10.QuestionType.RADIO);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (question_r11 == null ? null : question_r11.type) == ctx_r10.QuestionType.FIELDSET);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (question_r11 == null ? null : question_r11.type) == ctx_r10.QuestionType.TEXTINPUT);\n} }\nfunction FormGeneratorComponent_form_3_div_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"h2\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_div_1_div_3_Template, 9, 7, \"div\", 22);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const section_r8 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.getTextLang(section_r8 == null ? null : section_r8.title));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", section_r8 == null ? null : section_r8.questions);\n} }\nfunction FormGeneratorComponent_form_3_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r178 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 56)(1, \"div\", 5)(2, \"div\", 6)(3, \"span\", 7);\n    i0.ɵɵtext(4, \" info \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function FormGeneratorComponent_form_3_div_3_Template_button_click_5_listener() { i0.ɵɵrestoreView(_r178); const ctx_r177 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r177.closeErrorMessage()); });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"p\", 9);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 1, \"errorMsg\"));\n} }\nfunction FormGeneratorComponent_form_3_Template(rf, ctx) { if (rf & 1) {\n    const _r180 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 12);\n    i0.ɵɵlistener(\"ngSubmit\", function FormGeneratorComponent_form_3_Template_form_ngSubmit_0_listener() { i0.ɵɵrestoreView(_r180); const ctx_r179 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r179.onFormSubmit()); });\n    i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_Template, 4, 2, \"div\", 13);\n    i0.ɵɵelement(2, \"hr\", 14);\n    i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_div_3_Template, 9, 3, \"div\", 15);\n    i0.ɵɵelementStart(4, \"div\", 16)(5, \"div\", 17)(6, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function FormGeneratorComponent_form_3_Template_button_click_6_listener() { i0.ɵɵrestoreView(_r180); const ctx_r181 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r181.openModal()); });\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 17)(10, \"button\", 19);\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"translate\");\n    i0.ɵɵelementEnd()()()();\n} if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r3.formGroup);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.jsonForm == null ? null : ctx_r3.jsonForm.sections);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showErrorMessage);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 5, \"close\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 7, \"sendForm\"));\n} }\nclass FormGeneratorComponent {\n    constructor(fb) {\n        this.fb = fb;\n        this.formGroup = this.fb.group({});\n        this.toggleCancel = new EventEmitter();\n        this.answersForm = new EventEmitter();\n        this.currentLang = 'et';\n        this.componentDestroyed$ = new Subject();\n        this.showError$ = new BehaviorSubject(false);\n        this.showSuccess$ = new BehaviorSubject(false);\n        this.lang$ = new BehaviorSubject('et');\n        this.jsonForm$ = new BehaviorSubject({});\n        this.formAnswers$ = new BehaviorSubject({});\n        this.invalid = [];\n        this.QuestionType = QuestionType;\n        this.FieldType = FieldType;\n        this.isSubmitted = false;\n        this.showSuccessMessage = false;\n        this.showErrorMessage = false;\n    }\n    set form(jsonForm) {\n        this.jsonForm$.next(jsonForm);\n    }\n    set answers(answer) {\n        this.formAnswers$.next(answer);\n    }\n    set language(lang) {\n        this.lang$.next(lang);\n    }\n    set error(error) {\n        this.showError$.next(error);\n    }\n    set success(success) {\n        this.showSuccess$.next(success);\n    }\n    ngOnDestroy() {\n        this.componentDestroyed$.next(null);\n        this.componentDestroyed$.complete();\n    }\n    ngOnInit() {\n        this.setFeedbackAlerts();\n        combineLatest([\n            this.jsonForm$,\n            this.formAnswers$,\n            this.lang$\n        ]).pipe(takeUntil(this.componentDestroyed$)).subscribe(([jsonForm, formAnswers, lang]) => {\n            this.currentLang = lang;\n            this.formAnswers = formAnswers;\n            if (this.jsonForm != jsonForm) {\n                this.jsonForm = jsonForm;\n                this.jsonForm?.sections.forEach(section => this.createFormRecursive(section?.questions));\n            }\n        });\n    }\n    setFeedbackAlerts() {\n        this.showError$.pipe(takeUntil(this.componentDestroyed$)).subscribe(value => this.showErrorMessage = value);\n        this.showSuccess$.pipe(takeUntil(this.componentDestroyed$)).subscribe(value => this.showSuccessMessage = value);\n    }\n    getTextLang(text) {\n        if (text) {\n            switch (this.currentLang) {\n                case 'en':\n                    return text.en ? text.en : text.et;\n                    break;\n                case 'ru':\n                    return text.ru ? text.ru : text.et;\n                    break;\n                default:\n                    return text.et ? text.et : '';\n                    break;\n            }\n        }\n        return '';\n    }\n    createFormRecursive(questions) {\n        for (const question of questions) {\n            if (question.type == QuestionType.FIELDSET) {\n                this.createForFieldSet(question?.fields, question?.required, question?.id);\n            }\n            else {\n                const validatorsToAdd = [];\n                if (question.required) {\n                    validatorsToAdd.push(Validators.required);\n                }\n                question.enteredValue = this.findFromAnswers(question.id);\n                this.formGroup.addControl(question.id, this.fb.control(question.enteredValue, validatorsToAdd));\n                for (const field of question.fields) {\n                    if (field?.fields) {\n                        this.createForFieldSet(field.fields, false);\n                    }\n                }\n            }\n            if (question?.questions) {\n                this.createFormRecursive(question.questions);\n            }\n        }\n    }\n    createForFieldSet(fields, parentRequired, parentId) {\n        const checkBoxFields = fields.filter(field => field.type == FieldType.CHECKBOX);\n        const nonCheckBoxFields = fields.filter(field => field.type != FieldType.CHECKBOX);\n        if (checkBoxFields.length > 0) {\n            this.formGroup.addControl(parentId, this.buildCategoryFormGroup(parentRequired, checkBoxFields));\n        }\n        this.createNonCheckBoxFields(nonCheckBoxFields);\n        for (const field of fields) {\n            if (field?.fields) {\n                this.createForFieldSet(field.fields, false);\n            }\n        }\n    }\n    createNonCheckBoxFields(nonCheckBoxFields) {\n        for (const field of nonCheckBoxFields) {\n            const validatorsToAdd = [];\n            if (field.type != FieldType.CHECKBOX && field.required) {\n                validatorsToAdd.push(Validators.required);\n            }\n            if (field.type == FieldType.NUMBER) {\n                validatorsToAdd.push(Validators.pattern('^[0-9]*$'));\n            }\n            if (field.maxLength) {\n                validatorsToAdd.push(Validators.maxLength(field.maxLength));\n            }\n            if (field.type == FieldType.EMAIL) {\n                validatorsToAdd.push(CustomValidation.email());\n            }\n            field.enteredValue = this.findFromAnswers(field.id);\n            if (field.enteredValue == null)\n                field.enteredValue = undefined;\n            this.formGroup.addControl(field.id, this.fb.control(field.enteredValue, validatorsToAdd));\n        }\n    }\n    findFromAnswers(id) {\n        const found = this.formAnswers?.answer_data.find((obj) => {\n            return obj.id === id;\n        });\n        if (found?.value) {\n            return found.value;\n        }\n    }\n    buildCategoryFormGroup(parentRequired, fields) {\n        let group = this.fb.group({}, {\n            validators: atLeastOneCheckboxCheckedValidator()\n        });\n        fields.forEach(field => {\n            field.enteredValue = this.setCheckBoxField(field);\n            group.addControl(field.id, this.fb.control(field.enteredValue));\n        });\n        return group;\n    }\n    setCheckBoxField(field) {\n        let value;\n        field.enteredValue = this.findFromAnswers(field.id);\n        if (field.enteredValue === null || field.enteredValue == 'false') {\n            value = false;\n        }\n        else if (field.enteredValue == 'true') {\n            value = true;\n        }\n        return value;\n    }\n    findInvalidControls() {\n        this.invalid = [];\n        const controls = this.formGroup.controls;\n        for (const name in controls) {\n            if (controls[name].invalid) {\n                this.invalid.push(name);\n            }\n        }\n        return this.invalid;\n    }\n    onFormSubmit() {\n        this.isSubmitted = true;\n        this.findInvalidControls();\n        let shownAndInvalid = this.createShownAndInvalidList();\n        if (shownAndInvalid.length > 0) {\n            this.scrollToFirstElementWithErr(shownAndInvalid[0]);\n        }\n        else {\n            this.answersForm.emit(this.formGroup.getRawValue());\n        }\n    }\n    createShownAndInvalidList() {\n        let arr = [];\n        this.invalid.forEach(value => {\n            if (document.getElementById(value)) {\n                arr.push(value);\n            }\n            ;\n        });\n        return arr;\n    }\n    scrollToFirstElementWithErr(id) {\n        const el = document.getElementById(id);\n        if (el) {\n            const parentElement = el.parentElement;\n            if (parentElement) {\n                const scrollTop = parentElement.offsetTop - 50;\n                window.scroll({\n                    top: scrollTop,\n                    behavior: 'smooth'\n                });\n            }\n        }\n    }\n    gotoTop() {\n        window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n    getIfError(id, fields, checkbox) {\n        const controls = this.formGroup.controls;\n        let invalidContains = false;\n        if (fields?.length > 0) {\n            let counter = 0;\n            for (const f of fields) {\n                if (controls[f?.id]?.invalid) {\n                    counter++;\n                }\n            }\n            if (counter < fields?.length) {\n                invalidContains = false;\n            }\n            else {\n                invalidContains = true;\n            }\n        }\n        else {\n            if (!checkbox) {\n                invalidContains = this.getIfErrorRequiredField(id);\n            }\n            else {\n                invalidContains = this.getIfCheckboxRequiredInvalid(id);\n            }\n        }\n        return invalidContains;\n    }\n    makeQuestionVisible(question, innerQuestion) {\n        let makeVisible = false;\n        question.fields.filter(field => (field.value == this.formGroup.get(question.id).value)).forEach(foundField => {\n            if (foundField?.makeVisible && foundField?.makeVisible.indexOf(innerQuestion?.id) > -1) {\n                makeVisible = true;\n            }\n        });\n        if (!makeVisible) {\n            this.resetValues(innerQuestion);\n        }\n        return makeVisible;\n    }\n    resetValues(innerQuestion) {\n        const controls = this.formGroup.controls;\n        if (innerQuestion?.type == QuestionType.FIELDSET) {\n            for (const f of innerQuestion?.fields) {\n                if (f.type == FieldType.STRING || f.type == FieldType.NUMBER || f?.type == FieldType.EMAIL) {\n                    controls[f?.id].reset();\n                }\n                else if (f.type == FieldType.CHECKBOX) {\n                    controls[innerQuestion?.id].get(f?.id).reset();\n                }\n            }\n        }\n        else if (innerQuestion?.type == QuestionType.TEXTINPUT || innerQuestion?.type == QuestionType.RADIO) {\n            controls[innerQuestion?.id].reset();\n        }\n    }\n    showCommentField(parentId, id, fieldId) {\n        let showComment = false;\n        const controls = this.formGroup.controls;\n        if (controls[parentId].value[id] == true) {\n            showComment = true;\n        }\n        else {\n            controls[fieldId].reset();\n        }\n        return showComment;\n    }\n    showCommentFieldRadio(id, value, fieldId) {\n        let showComment = false;\n        if (this.formGroup?.get(id)?.value === value) {\n            showComment = true;\n        }\n        else {\n            this.formGroup?.get(fieldId).reset();\n        }\n        return showComment;\n    }\n    openModal() {\n        this.toggleCancel.emit(true);\n    }\n    getIfErrorRequiredField(id) {\n        return this.formGroup?.controls[id]?.invalid && this.formGroup?.controls[id]?.getError('required') == true;\n    }\n    getIfInvalidEmail(id) {\n        return this.formGroup?.controls[id]?.invalid && this.formGroup?.controls[id]?.getError('email') == true;\n    }\n    getIfFieldInvalid(id) {\n        return this.formGroup?.controls[id]?.invalid;\n    }\n    getIfCheckboxRequiredInvalid(id) {\n        return this.formGroup?.controls[id]?.invalid && this.formGroup?.controls[id]?.getError('requireCheckboxToBeChecked') == true;\n    }\n    getIfInvalidNumber(id) {\n        let pattern = {\n            requiredPattern: ''\n        };\n        pattern = this.formGroup?.controls[id]?.getError('pattern');\n        return this.formGroup?.controls[id]?.invalid && pattern?.requiredPattern == '^[0-9]*$' == true;\n    }\n    closeSuccessMessage() {\n        this.showSuccessMessage = false;\n    }\n    closeErrorMessage() {\n        this.showErrorMessage = false;\n    }\n}\nFormGeneratorComponent.ɵfac = function FormGeneratorComponent_Factory(t) { return new (t || FormGeneratorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder)); };\nFormGeneratorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FormGeneratorComponent, selectors: [[\"lib-form-generator\"]], inputs: { form: \"form\", answers: \"answers\", language: \"language\", error: \"error\", success: \"success\" }, outputs: { toggleCancel: \"toggleCancel\", answersForm: \"answersForm\" }, decls: 4, vars: 4, consts: [[\"class\", \"alert alert-success py-3\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"py-3\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"d-flex\", \"pb-1\"], [1, \"material-icons-outlined\"], [\"type\", \"button\", \"data-bs-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"btn\", \"btn-close\", \"d-flex\", 3, \"click\"], [1, \"my-0\"], [1, \"\"], [3, \"innerHTML\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"form-sections\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-separator\"], [\"class\", \"alert alert-danger py-3\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-md-row\", \"flex-column-reverse\", \"justify-content-between\"], [1, \"py-1\"], [\"type\", \"button\", 1, \"form-cancel-button\", \"w-100\", 3, \"click\"], [\"type\", \"submit\", 1, \"form-submit-button\", \"w-100\"], [1, \"form-sections\"], [1, \"my-4\"], [\"class\", \"px-lg-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"px-lg-4\"], [1, \"my-3\"], [1, \"my-0\", \"question-text\", 3, \"id\"], [\"class\", \"question-required\", 4, \"ngIf\"], [\"class\", \"my-0 px-lg-4 question-description\", 4, \"ngIf\"], [1, \"question-required\"], [1, \"my-0\", \"px-lg-4\", \"question-description\"], [\"class\", \"form-check\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"px-lg-4\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-check\"], [1, \"my-2\", \"px-lg-4\"], [\"type\", \"radio\", 1, \"form-check-input\", 3, \"ngClass\", \"value\", \"id\", \"formControlName\", \"maxlength\"], [1, \"form-check-label\", 3, \"for\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"form-group\"], [3, \"for\"], [1, \"form-control\", 3, \"placeholder\", \"maxlength\", \"ngClass\", \"id\", \"formControlName\", \"rows\"], [\"type\", \"email\", \"placeholder\", \"email@email.com\", 1, \"form-control\", 3, \"ngClass\", \"id\", \"formControlName\", \"maxlength\"], [1, \"valid-polygon\"], [1, \"p-3\", \"form-validation-msg\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [\"type\", \"radio\", 1, \"form-check-input\", 3, \"ngClass\", \"id\", \"value\", \"formControlName\", \"maxlength\"], [1, \"form-control\", 3, \"ngClass\", \"id\", \"formControlName\", \"maxlength\", \"rows\", \"placeholder\"], [1, \"px-lg-4\", \"my-2\"], [\"class\", \"form-check\", 3, \"formGroupName\", 4, \"ngIf\"], [1, \"form-check\", 3, \"formGroupName\"], [\"type\", \"checkbox\", \"value\", \"checked\", 1, \"form-check-input\", 3, \"ngClass\", \"id\", \"formControlName\", \"maxlength\"], [1, \"input-group\"], [\"class\", \"input-group-text\", 4, \"ngIf\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"id\", \"formControlName\", \"maxlength\"], [1, \"input-group-text\"], [\"type\", \"checkbox\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"ngClass\", \"id\", \"formControlName\", \"maxlength\"], [1, \"form-control\", 3, \"placeholder\", \"ngClass\", \"id\", \"formControlName\", \"rows\", \"maxlength\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"py-3\"]], template: function FormGeneratorComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, FormGeneratorComponent_div_0_Template, 9, 3, \"div\", 0);\n        i0.ɵɵtemplate(1, FormGeneratorComponent_div_1_Template, 3, 3, \"div\", 1);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_div_2_Template, 16, 15, \"div\", 2);\n        i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_Template, 13, 9, \"form\", 3);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showSuccessMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.jsonForm == null ? null : ctx.jsonForm.generalInfo) && !ctx.showSuccessMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showSuccessMessage && (ctx.formAnswers == null ? null : ctx.formAnswers.name) && (ctx.formAnswers == null ? null : ctx.formAnswers.created) && (ctx.formAnswers == null ? null : ctx.formAnswers.personal_code));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showSuccessMessage);\n    } }, dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i2.DatePipe, TranslatePipe, SanitizePipe], styles: [\".question-text[_ngcontent-%COMP%]{font-weight:600;font-size:16px;line-height:24px;color:#09090b}.question-description[_ngcontent-%COMP%]{color:#9799a4;font-size:14px}.question-required[_ngcontent-%COMP%]{color:#d73e3e}.form-sections[_ngcontent-%COMP%]{font-family:Roboto}.form-separator[_ngcontent-%COMP%]{border:1px solid #8bb4d5}.form-cancel-button[_ngcontent-%COMP%]{border-radius:22px;background:#ffffff;padding:0 32px;gap:8px;width:113px;height:40px}.form-submit-button[_ngcontent-%COMP%]{background:#005aa3;border-radius:22px;border:none;padding:0 32px;gap:8px;color:#fff;width:113px;height:40px}.form-validation-msg[_ngcontent-%COMP%]{background:#d73e3e;border-radius:4px;min-width:183px;max-width:-moz-fit-content;max-width:fit-content;height:40px;color:#fff}.valid-polygon[_ngcontent-%COMP%]{width:0;height:0;border:5px solid transparent;border-top:0;border-bottom:6px solid #d73e3e;margin-left:10px}.validation-err[_ngcontent-%COMP%]{border-color:#d73e3e}\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGeneratorComponent, [{\n        type: Component,\n        args: [{ selector: 'lib-form-generator', template: \"<div class=\\\"alert alert-success py-3\\\" role=\\\"alert\\\"\\n     *ngIf=\\\"showSuccessMessage\\\">\\n  <div class=\\\"d-flex justify-content-between\\\">\\n    <div class=\\\"d-flex pb-1\\\">\\n      <span class=\\\"material-icons-outlined\\\">\\n        info\\n      </span>\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-close d-flex\\\" data-bs-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"\\n            (click)=\\\"closeSuccessMessage()\\\"></button>\\n  </div>\\n  <p class=\\\"my-0\\\"> {{'successMsg' | translate}}</p>\\n</div>\\n\\n\\n<div class=\\\"\\\" *ngIf=\\\"jsonForm?.generalInfo && !showSuccessMessage\\\">\\n  <p [innerHTML]=\\\"getTextLang(jsonForm?.generalInfo?.description) | sanitize\\\"></p>\\n</div>\\n\\n<div *ngIf=\\\"!showSuccessMessage && formAnswers?.name && formAnswers?.created && formAnswers?.personal_code\\\">\\n  <h2>{{'lastSubmitted' | translate}}</h2>\\n  <div>\\n    <p class=\\\"my-0\\\">\\n      {{'person' | translate}}\\n    </p>\\n    <p>{{formAnswers?.name}} ({{formAnswers?.personal_code}})</p>\\n\\n    <p class=\\\"my-0\\\">\\n      {{'submitTime' | translate}}\\n    </p>\\n    <p>{{formAnswers?.created | date:'dd.MM.yyyy HH:mm'}}</p>\\n  </div>\\n</div>\\n\\n\\n<form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onFormSubmit()\\\" *ngIf=\\\"!showSuccessMessage\\\">\\n  <div *ngFor=\\\"let section of jsonForm?.sections; let indexOfSection=index\\\" class=\\\"form-sections\\\">\\n    <h2 class=\\\"my-4\\\">{{getTextLang(section?.title)}}</h2>\\n    <div class=\\\"px-lg-4\\\" *ngFor=\\\"let question of section?.questions; let indexOfQuestion=index\\\">\\n\\n      <div class=\\\"my-3\\\">\\n        <p class=\\\"my-0 question-text\\\" id=\\\"{{question?.id}}\\\">{{getTextLang(question?.title)}} <span *ngIf=\\\"question?.required\\\"\\n                                                                                                   class=\\\"question-required\\\">*</span></p>\\n        <p *ngIf=\\\"question?.description\\\"\\n           class=\\\"my-0 px-lg-4 question-description\\\">{{getTextLang(question?.description)}}</p>\\n      </div>\\n\\n      <div *ngIf=\\\"question?.type == QuestionType.RADIO\\\">\\n        <div class=\\\"form-check\\\" *ngFor=\\\"let field of question?.fields;let indexOfField=index\\\">\\n          <div class=\\\"my-2 px-lg-4\\\">\\n            <input [ngClass]='{\\\"validation-err\\\": isSubmitted && getIfError(question?.id)}' class=\\\"form-check-input\\\"\\n                   type=\\\"radio\\\" value=\\\"{{field?.value}}\\\" id=\\\"{{question?.id+indexOfField}}\\\"\\n                   formControlName=\\\"{{question?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"{{question?.id+indexOfField}}\\\">\\n              {{getTextLang(field?.title)}}\\n            </label>\\n          </div>\\n          <div *ngFor=\\\"let extraField of field?.fields\\\">\\n            <div class=\\\"form-group\\\" *ngIf=\\\"showCommentFieldRadio(question?.id, field?.value, extraField?.id)\\\">\\n              <div *ngIf=\\\"extraField?.type == FieldType.TEXTAREA\\\">\\n                <label for=\\\"{{extraField?.id}}\\\">{{getTextLang(extraField?.title)}}</label>\\n                <textarea class=\\\"form-control\\\"\\n                          placeholder=\\\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"\\n                          maxlength=\\\"{{extraField?.maxLength}}\\\"\\n                          [ngClass]='{\\\"validation-err\\\": isSubmitted && getIfErrorRequiredField(extraField?.id)}'\\n                          id=\\\"{{extraField?.id}}\\\" formControlName=\\\"{{extraField?.id}}\\\"\\n                          rows=\\\"{{extraField?.rows}}\\\"></textarea>\\n              </div>\\n\\n              <div *ngIf=\\\"extraField?.type == FieldType.EMAIL\\\">\\n                <label for=\\\"{{extraField?.id}}\\\"> {{getTextLang(extraField?.title)}}</label>\\n                <input\\n                  [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(extraField?.id) || getIfInvalidEmail(extraField?.id))}'\\n                  type=\\\"email\\\" placeholder=\\\"email@email.com\\\" class=\\\"form-control\\\" id=\\\"{{extraField?.id}}\\\"\\n                  formControlName=\\\"{{extraField?.id}}\\\"\\n                  maxlength=\\\"{{extraField?.maxLength}}\\\">\\n\\n                <div *ngIf=\\\"isSubmitted && getIfInvalidEmail(extraField?.id)\\\">\\n                  <div class=\\\"valid-polygon\\\"></div>\\n                  <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                    {{'correctEmail' | translate}}\\n                  </div>\\n\\n                </div>\\n                <div *ngIf=\\\"isSubmitted && getIfErrorRequiredField(extraField?.id)\\\">\\n                  <div class=\\\"valid-polygon\\\"></div>\\n                  <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                    {{'mandatoryField' | translate}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(question?.id)\\\">\\n          <div class=\\\"valid-polygon\\\"></div>\\n          <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n            {{'mandatoryField' | translate}}\\n          </div>\\n\\n        </div>\\n\\n        <div *ngFor=\\\"let secondQuestion of question?.questions; let indexOfInnerQuestion=index\\\">\\n          <div *ngIf=\\\"makeQuestionVisible(question, secondQuestion)\\\">\\n            <div class=\\\"my-3\\\">\\n              <p class=\\\"my-0 question-text\\\" id=\\\"{{secondQuestion?.id}}\\\">{{getTextLang(secondQuestion?.title)}} <span\\n                *ngIf=\\\"secondQuestion?.required\\\" class=\\\"question-required\\\">*</span></p>\\n              <p *ngIf=\\\"secondQuestion?.description\\\"\\n                 class=\\\"my-0 px-lg-4 question-description\\\">{{getTextLang(secondQuestion?.description)}}</p>\\n            </div>\\n\\n            <div *ngIf=\\\"secondQuestion?.type == QuestionType.RADIO\\\">\\n              <div class=\\\"form-check\\\" *ngFor=\\\"let field of secondQuestion?.fields;let indexOfField=index\\\">\\n                <div class=\\\"my-2 px-lg-4\\\">\\n                  <input [ngClass]='{\\\"validation-err\\\": isSubmitted && getIfError(secondQuestion?.id)}'\\n                         class=\\\"form-check-input\\\" type=\\\"radio\\\" id=\\\"{{secondQuestion?.id+indexOfField}}\\\"\\n                         value=\\\"{{field?.value}}\\\" formControlName=\\\"{{secondQuestion?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"{{secondQuestion?.id+indexOfField}}\\\">\\n                    {{getTextLang(field?.title)}}\\n                  </label>\\n                </div>\\n                <div *ngFor=\\\"let extraField of field?.fields\\\">\\n                  <div class=\\\"form-group\\\"\\n                       *ngIf=\\\"showCommentFieldRadio(secondQuestion?.id, field?.value, extraField?.id)\\\">\\n                    <div *ngIf=\\\"extraField?.type == FieldType.TEXTAREA\\\">\\n                      <label for=\\\"{{extraField?.id}}\\\">{{getTextLang(extraField?.title)}}</label>\\n                      <textarea [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\\n                                class=\\\"form-control\\\" id=\\\"{{extraField?.id}}\\\" formControlName=\\\"{{extraField?.id}}\\\"\\n                                maxlength=\\\"{{extraField?.maxLength}}\\\"\\n                                rows=\\\"{{extraField?.rows}}\\\"\\n                                placeholder=\\\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n                    </div>\\n\\n                    <div *ngIf=\\\"extraField?.type == FieldType.EMAIL\\\">\\n                      <label for=\\\"{{extraField?.id}}\\\"> {{getTextLang(extraField?.title)}}</label>\\n                      <input\\n                        [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(extraField?.id) || getIfInvalidEmail(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\\n                        type=\\\"email\\\"\\n                        class=\\\"form-control\\\" placeholder=\\\"email@email.com\\\" id=\\\"{{extraField?.id}}\\\"\\n                        formControlName=\\\"{{extraField?.id}}\\\" maxlength=\\\"{{extraField?.maxLength}}\\\">\\n\\n                      <div *ngIf=\\\"isSubmitted && getIfInvalidEmail(extraField?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'correctEmail' | translate}}\\n                        </div>\\n                      </div>\\n                      <div *ngIf=\\\"isSubmitted && getIfErrorRequiredField(extraField?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'mandatoryField' | translate}}\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n              </div>\\n              <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(secondQuestion?.id)\\\">\\n                <div class=\\\"valid-polygon\\\"></div>\\n                <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                  {{'mandatoryField' | translate}}\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"secondQuestion.type == QuestionType.TEXTINPUT\\\">\\n              <div class=\\\"form-check\\\" *ngFor=\\\"let field of secondQuestion?.fields\\\">\\n                <textarea [ngClass]='{\\\"validation-err\\\": isSubmitted &&  (getIfError(secondQuestion?.id) || getIfFieldInvalid(secondQuestion?.id))}'\\n                          class=\\\"form-control\\\" id=\\\"{{secondQuestion?.id}}\\\" formControlName=\\\"{{secondQuestion?.id}}\\\"\\n                          maxlength=\\\"{{field?.maxLength}}\\\"\\n                          rows=\\\"{{field?.rows}}\\\"\\n                          placeholder=\\\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n              </div>\\n              <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted &&  getIfError(secondQuestion?.id)\\\">\\n                <div class=\\\"valid-polygon\\\"></div>\\n                <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                  {{'mandatoryField' | translate}}\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"secondQuestion?.type == QuestionType.FIELDSET\\\">\\n              <div *ngFor=\\\"let field of secondQuestion?.fields\\\">\\n                <div class=\\\"px-lg-4 my-2\\\">\\n                  <div class=\\\"form-check\\\" *ngIf=\\\"field?.type == FieldType.CHECKBOX\\\"\\n                       formGroupName=\\\"{{secondQuestion?.id}}\\\">\\n                    <input [ngClass]='{\\\"validation-err\\\": isSubmitted &&  getIfError(secondQuestion?.id, null, true)}'\\n                           class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"{{field?.id}}\\\" value=\\\"checked\\\"\\n                           formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"{{field?.id}}\\\">\\n                      {{getTextLang(field?.title)}}\\n                    </label>\\n                  </div>\\n                  <div *ngFor=\\\"let extraField of field?.fields\\\">\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"showCommentField(secondQuestion?.id, field?.id, extraField?.id)\\\">\\n                      <div *ngIf=\\\"extraField?.type == FieldType.TEXTAREA\\\">\\n                        <label for=\\\"{{extraField?.id}}\\\">{{getTextLang(extraField?.title)}}</label>\\n                        <textarea [ngClass]='{\\\"validation-err\\\": isSubmitted &&  (getIfErrorRequiredField(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\\n                                  class=\\\"form-control\\\" id=\\\"{{extraField?.id}}\\\" formControlName=\\\"{{extraField?.id}}\\\"\\n                                  maxlength=\\\"{{extraField?.maxLength}}\\\"\\n                                  rows=\\\"{{extraField?.rows}}\\\"\\n                                  placeholder=\\\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.STRING\\\">\\n                    <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n                    <div class=\\\"input-group\\\">\\n                      <span *ngIf=\\\"field?.prefix\\\" class=\\\"input-group-text\\\">{{field?.prefix}}</span>\\n                      <input [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfFieldInvalid(field?.id))}' type=\\\"text\\\"\\n                             class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                    </div>\\n                    <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfErrorRequiredField(field?.id)\\\">\\n                      <div class=\\\"valid-polygon\\\"></div>\\n                      <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                        {{'mandatoryField' | translate}}\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.NUMBER\\\">\\n                    <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n                    <div class=\\\"input-group\\\">\\n                      <span *ngIf=\\\"field?.prefix\\\" class=\\\"input-group-text\\\">{{field?.prefix}}</span>\\n                      <input\\n                        [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidNumber(field?.id) || getIfFieldInvalid(field?.id))}'\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                    </div>\\n                    <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfInvalidNumber(field?.id)\\\">\\n                      <div class=\\\"valid-polygon\\\"></div>\\n                      <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                        {{'correctNumber' | translate}}\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfErrorRequiredField(field?.id)\\\">\\n                      <div class=\\\"valid-polygon\\\"></div>\\n                      <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                        {{'mandatoryField' | translate}}\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.EMAIL\\\">\\n                    <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n                    <input\\n                      [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidEmail(field?.id) || getIfFieldInvalid(field?.id))}'\\n                      type=\\\"email\\\"\\n                      class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\"\\n                      placeholder=\\\"email@email.com\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n\\n                    <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfInvalidEmail(field?.id)\\\">\\n                      <div class=\\\"valid-polygon\\\"></div>\\n                      <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                        {{'correctEmail' | translate}}\\n                      </div>\\n\\n                    </div>\\n                    <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfErrorRequiredField(field?.id)\\\">\\n                      <div class=\\\"valid-polygon\\\"></div>\\n                      <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                        {{'mandatoryField' | translate}}\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(secondQuestion?.id, null, true)\\\">\\n                <div class=\\\"valid-polygon\\\"></div>\\n                <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                  {{'mandatoryField' | translate}}\\n                </div>\\n              </div>\\n            </div>\\n\\n\\n            <div *ngFor=\\\"let thirdQuestion of secondQuestion?.questions; let indexOfThirdInnerQuestion=index\\\">\\n              <div *ngIf=\\\"makeQuestionVisible(secondQuestion, thirdQuestion)\\\">\\n\\n                <div class=\\\"my-3\\\">\\n                  <p class=\\\"my-0 question-text\\\" id=\\\"{{thirdQuestion?.id}}\\\">{{getTextLang(thirdQuestion?.title)}} <span\\n                    *ngIf=\\\"thirdQuestion?.required\\\" class=\\\"question-required\\\">*</span></p>\\n                  <p *ngIf=\\\"thirdQuestion?.description\\\"\\n                     class=\\\"my-0 px-lg-4 question-description\\\">{{getTextLang(thirdQuestion?.description)}}</p>\\n                </div>\\n\\n\\n                <div *ngIf=\\\"thirdQuestion?.type == QuestionType.RADIO\\\">\\n                  <div class=\\\"form-check\\\" *ngFor=\\\"let field of thirdQuestion?.fields;let indexOfField=index\\\">\\n                    <div class=\\\"px-lg-4 my-2\\\">\\n                      <input [ngClass]='{\\\"validation-err\\\": isSubmitted && getIfError(thirdQuestion?.id)}'\\n                             class=\\\"form-check-input\\\" type=\\\"radio\\\" id=\\\"{{thirdQuestion?.id+indexOfField}}\\\"\\n                             value=\\\"{{field?.value}}\\\" formControlName=\\\"{{thirdQuestion?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"{{thirdQuestion?.id+indexOfField}}\\\">\\n                        {{getTextLang(field?.title)}}\\n                      </label>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(thirdQuestion?.id)\\\">\\n                    <div class=\\\"valid-polygon\\\"></div>\\n                    <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                      {{'mandatoryField' | translate}}\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"thirdQuestion?.type == QuestionType.TEXTINPUT\\\">\\n                  <div class=\\\"form-check\\\" *ngFor=\\\"let field of thirdQuestion?.fields\\\">\\n                    <textarea [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(thirdQuestion?.id) || getIfFieldInvalid(thirdQuestion?.id))}'\\n                              class=\\\"form-control\\\" id=\\\"{{thirdQuestion?.id}}\\\" formControlName=\\\"{{thirdQuestion?.id}}\\\"\\n                              maxlength=\\\"{{field?.maxLength}}\\\"\\n                              rows=\\\"{{field?.rows}}\\\"\\n                              placeholder=\\\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n                  </div>\\n                  <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(thirdQuestion?.id)\\\">\\n                    <div class=\\\"valid-polygon\\\"></div>\\n                    <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                      {{'mandatoryField' | translate}}\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"thirdQuestion?.type == QuestionType.FIELDSET\\\">\\n                  <div *ngFor=\\\"let field of thirdQuestion?.fields\\\">\\n                    <div class=\\\"form-check\\\" *ngIf=\\\"field?.type == FieldType.CHECKBOX\\\"\\n                         formGroupName=\\\"{{thirdQuestion?.id}}\\\">\\n                      <input [ngClass]='{\\\"validation-err\\\": isSubmitted && getIfError(thirdQuestion?.id, null, true)}'\\n                             class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"{{field?.id}}\\\" value=\\\"checked\\\"\\n                             formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"{{field?.id}}\\\">\\n                        {{getTextLang(field?.title)}}\\n                      </label>\\n                    </div>\\n                    <div *ngFor=\\\"let extraField of field?.fields\\\">\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"showCommentField(thirdQuestion?.id, field?.id, extraField?.id)\\\">\\n                        <div *ngIf=\\\"extraField?.type == FieldType.TEXTAREA\\\">\\n                          <label for=\\\"{{extraField?.id}}\\\">{{getTextLang(extraField?.title)}}</label>\\n                          <textarea\\n                            [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(thirdQuestion?.id, thirdQuestion?.fields) || getIfFieldInvalid(thirdQuestion?.id))}'\\n                            class=\\\"form-control\\\" id=\\\"{{extraField?.id}}\\\" formControlName=\\\"{{extraField?.id}}\\\" maxlength=\\\"{{extraField?.maxLength}}\\\"\\n                            rows=\\\"{{extraField?.rows}}\\\"\\n                            placeholder=\\\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.STRING\\\">\\n                      <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n\\n                      <div class=\\\"input-group\\\">\\n                        <span *ngIf=\\\"field?.prefix\\\" class=\\\"input-group-text\\\">{{field?.prefix}}</span>\\n                        <input\\n                          [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(thirdQuestion?.id, thirdQuestion?.fields) || getIfFieldInvalid(thirdQuestion?.id))}'\\n                          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.NUMBER\\\">\\n                      <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n                      <div class=\\\"input-group\\\">\\n                        <span *ngIf=\\\"field?.prefix\\\" class=\\\"input-group-text\\\">{{field?.prefix}}</span>\\n                        <input\\n                          [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidNumber(field?.id) || getIfFieldInvalid(field?.id))}'\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                      </div>\\n                      <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfInvalidNumber(field?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'correctNumber' | translate}}\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfErrorRequiredField(field?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'mandatoryField' | translate}}\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.EMAIL\\\">\\n                      <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n                      <input\\n                        [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidEmail(field?.id) || getIfFieldInvalid(field?.id))}'\\n                        type=\\\"email\\\" placeholder=\\\"email@email.com\\\" class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\"\\n                        formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n\\n\\n                      <div *ngIf=\\\"isSubmitted && getIfInvalidEmail(field?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'correctEmail' | translate}}\\n                        </div>\\n\\n                      </div>\\n                      <div *ngIf=\\\"isSubmitted && getIfErrorRequiredField(field?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'mandatoryField' | translate}}\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                  <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(thirdQuestion?.id, thirdQuestion?.fields)\\\">\\n                    <div class=\\\"valid-polygon\\\"></div>\\n                    <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                      {{'mandatoryField' | translate}}\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"question?.type == QuestionType.FIELDSET\\\">\\n        <div *ngFor=\\\"let field of question?.fields\\\">\\n          <div class=\\\"px-lg-4\\\" *ngIf=\\\"field?.type == FieldType.CHECKBOX\\\">\\n            <div class=\\\"form-check\\\" formGroupName=\\\"{{question?.id}}\\\">\\n              <input class=\\\"form-check-input\\\" [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(question?.id, null, true) || getIfFieldInvalid(question?.id))}'\\n                     type=\\\"checkbox\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\" id=\\\"flexCheckDefault\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"{{field?.id}}\\\">\\n                {{getTextLang(field?.title)}}\\n              </label>\\n            </div>\\n            <div *ngFor=\\\"let extraField of field?.fields\\\">\\n              <div class=\\\"form-group\\\" *ngIf=\\\"showCommentField(question?.id, field?.id, extraField?.id)\\\">\\n                <div *ngIf=\\\"extraField?.type == FieldType.TEXTAREA\\\">\\n                  <label for=\\\"{{extraField?.id}}\\\">{{getTextLang(extraField?.title)}}</label>\\n                  <textarea [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfFieldInvalid(field?.id) || getIfFieldInvalid(field?.id))}'\\n                            class=\\\"form-control\\\" id=\\\"{{extraField?.id}}\\\" formControlName=\\\"{{extraField?.id}}\\\"\\n                            maxlength=\\\"{{extraField?.maxLength}}\\\"\\n                            rows=\\\"{{extraField?.rows}}\\\"\\n                            placeholder=\\\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(question?.id, null, true)\\\">\\n          <div class=\\\"valid-polygon\\\"></div>\\n          <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n            {{'mandatoryField' | translate}}\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n\\n      <div *ngIf=\\\"question?.type == QuestionType.TEXTINPUT\\\">\\n        <div class=\\\"form-check\\\" *ngFor=\\\"let field of question?.fields\\\">\\n          <textarea placeholder=\\\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\" [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(question?.id) || getIfFieldInvalid(question?.id))}' class=\\\"form-control\\\"\\n                    id=\\\"{{question?.id}}\\\" formControlName=\\\"{{question?.id}}\\\" rows=\\\"{{field?.rows}}\\\" maxlength=\\\"{{field?.maxLength}}\\\"></textarea>\\n        </div>\\n        <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(question?.id)\\\">\\n          <div class=\\\"valid-polygon\\\"></div>\\n          <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n            {{'mandatoryField' | translate}}\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <hr class=\\\"form-separator\\\">\\n\\n  <div class=\\\"alert alert-danger py-3\\\" role=\\\"alert\\\"\\n       *ngIf=\\\"showErrorMessage\\\">\\n    <div class=\\\"d-flex justify-content-between\\\">\\n      <div class=\\\"d-flex pb-1\\\">\\n      <span class=\\\"material-icons-outlined\\\">\\n        info\\n      </span>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-close d-flex\\\" data-bs-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"\\n              (click)=\\\"closeErrorMessage()\\\"></button>\\n    </div>\\n    <p class=\\\"my-0\\\">{{'errorMsg' | translate}}</p>\\n  </div>\\n\\n  <div class=\\\"d-flex flex-md-row flex-column-reverse justify-content-between\\\">\\n    <div class=\\\"py-1\\\">\\n      <button class=\\\"form-cancel-button w-100\\\" type=\\\"button\\\" (click)=\\\"openModal()\\\">{{'close' | translate}}</button>\\n    </div>\\n    <div class=\\\"py-1\\\">\\n      <button class=\\\"form-submit-button w-100\\\" type=\\\"submit\\\">{{'sendForm' | translate}}</button>\\n    </div>\\n  </div>\\n</form>\\n\\n\\n\\n\", styles: [\".question-text{font-weight:600;font-size:16px;line-height:24px;color:#09090b}.question-description{color:#9799a4;font-size:14px}.question-required{color:#d73e3e}.form-sections{font-family:Roboto}.form-separator{border:1px solid #8bb4d5}.form-cancel-button{border-radius:22px;background:#ffffff;padding:0 32px;gap:8px;width:113px;height:40px}.form-submit-button{background:#005aa3;border-radius:22px;border:none;padding:0 32px;gap:8px;color:#fff;width:113px;height:40px}.form-validation-msg{background:#d73e3e;border-radius:4px;min-width:183px;max-width:-moz-fit-content;max-width:fit-content;height:40px;color:#fff}.valid-polygon{width:0;height:0;border:5px solid transparent;border-top:0;border-bottom:6px solid #d73e3e;margin-left:10px}.validation-err{border-color:#d73e3e}\\n\"] }]\n    }], function () { return [{ type: i1.FormBuilder }]; }, { form: [{\n            type: Input\n        }], answers: [{\n            type: Input\n        }], language: [{\n            type: Input\n        }], error: [{\n            type: Input\n        }], success: [{\n            type: Input\n        }], toggleCancel: [{\n            type: Output\n        }], answersForm: [{\n            type: Output\n        }] }); })();\n\nclass FormGeneratorModule {\n}\nFormGeneratorModule.ɵfac = function FormGeneratorModule_Factory(t) { return new (t || FormGeneratorModule)(); };\nFormGeneratorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FormGeneratorModule });\nFormGeneratorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [TranslatePipe], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGeneratorModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    FormGeneratorComponent,\n                    TranslatePipe,\n                    SanitizePipe\n                ],\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                providers: [TranslatePipe],\n                exports: [\n                    FormGeneratorComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FormGeneratorModule, { declarations: [FormGeneratorComponent,\n        TranslatePipe,\n        SanitizePipe], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule], exports: [FormGeneratorComponent] }); })();\n\n/*\n * Public API Surface of form-generator\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormGeneratorComponent, FormGeneratorModule, FormGeneratorService };\n//# sourceMappingURL=ria-stateportal-form-generator.mjs.map\n","map":{"version":3,"file":"ria-stateportal-form-generator.mjs","sources":["../../../../projects/ria/form-generator/src/lib/form-generator.service.ts","../../../../projects/ria/form-generator/src/lib/jsonform.model.ts","../../../../projects/ria/form-generator/src/lib/atLeastOneCheckboxCheckedValidator.ts","../../../../projects/ria/form-generator/src/lib/common/validation.util.ts","../../../../projects/ria/form-generator/src/lib/common/translate.pipe.ts","../../../../projects/ria/form-generator/src/lib/common/sanitize.pipe.ts","../../../../projects/ria/form-generator/src/lib/form-generator.component.html","../../../../projects/ria/form-generator/src/lib/form-generator.component.ts","../../../../projects/ria/form-generator/src/lib/form-generator.module.ts","../../../../projects/ria/form-generator/src/public-api.ts","../../../../projects/ria/form-generator/src/ria-stateportal-form-generator.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGeneratorService {\n\n  constructor() {\n  }\n}\n","export interface JsonForm {\n  id: string;\n  title: Text;\n  generalInfo: GeneralInfo;\n\n  version?: number;\n\n  sections: Section[];\n  createdBy: string;\n  createdAt: string;\n  updatedBy: string;\n  updatedAt: string;\n  deletedBy: string;\n  deletedAt: string;\n\n}\n\nexport interface GeneralInfo {\n  title: Text;\n  description: Text;\n}\n\n\nexport interface Section {\n  id: string;\n  title: Text;\n  description?: Text;\n  questions: Question[];\n}\n\nexport interface Question {\n  id: string;\n  title: Text;\n  description?: Text;\n  type?: string;\n  required?: boolean;\n  enteredValue?: any;\n  fields?: Field[];\n  questions?: Question [];\n}\n\nexport interface Field {\n  id?: string;\n  title?: Text;\n  description?: Text;\n  prefix?: string;\n  suffix?: string;\n  type?: string;\n  required?: boolean;\n  enteredValue?: any;\n  value?: string;\n  fields?: Field[];\n  rows?: number;\n  maxLength?: number;\n  makeVisible?: string [];\n}\n\nexport interface Text {\n  et?: string;\n  en?: string;\n  ru?: string;\n}\n\nexport enum QuestionType {\n  RADIO = 'radio',\n  FIELDSET = 'fieldset',\n  CHECKBOX = 'checkbox',\n  TEXTAREA = 'textarea',\n  TEXTINPUT = 'textinput'\n}\n\nexport enum FieldType {\n  NUMBER = 'number',\n  STRING = 'string',\n  EMAIL = 'email',\n  DATE = 'date',\n  CHECKBOX = 'checkbox',\n  TEXTAREA = 'textarea'\n}\n","import { FormGroup, ValidatorFn } from \"@angular/forms\";\n\nexport function atLeastOneCheckboxCheckedValidator(minRequired = 1): ValidatorFn {\n  return function validate(formGroup: FormGroup) {\n    let checked = 0;\n\n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.controls[key];\n\n      if (control.value === true) {\n        checked++;\n      }\n    });\n\n    if (checked < minRequired) {\n      return {\n        requireCheckboxToBeChecked: true,\n      };\n    }\n\n    return null;\n  };\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class CustomValidation {\n\n  static email(): ValidatorFn {\n    return (control: AbstractControl): { [p: string]: any } | null => {\n      const value = control.value?.trim();\n      const regex = new RegExp(/^(?!\\.)((?!.*\\.{2})[a-zA-Z0-9\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF\\.!#$%&'*+-/=?^_`{|}~\\-\\d]+)@(?!\\.)([a-zA-Z0-9\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF\\-\\.\\d]+)((\\.([a-zA-Z\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF]){2,63})+)$/i);\n      const valid = regex.test(value);\n      return valid ? null : { email: true };\n    };\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport et from '../assets/et.json'\n\n@Pipe({\n  name: 'translate',\n  pure: false // required to update the value when the promise is resolved\n})\nexport class TranslatePipe implements PipeTransform {\n\n  constructor() {}\n\n  transform(code: string, params?: { [key: string]: string | number | undefined }): string {\n    let messages: { [key: string]: string } = {};\n    messages = et as { [key: string]: string };\n    return this.replaceParams(messages[code], params) ?? code;\n  }\n\n  replaceParams(text: string, params?: { [key: string]: string | number | undefined }): string | undefined {\n    if (!text || !params || !Object.keys(params)?.length) {\n      return text;\n    }\n\n    const keys = Object.keys(params);\n    keys.forEach(key => {\n      text = text.replace(`{{${key}}}`, (params[key] || '').toString());\n    });\n\n    return text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport DOMPurify from 'dompurify';\n@Pipe({\n  name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n\n  constructor() {\n  }\n\n  transform(value: string): string {\n    return DOMPurify.sanitize(value, {USE_PROFILES: {html: true}, FORBID_ATTR: ['class']})\n  }\n}\n","<div class=\"alert alert-success py-3\" role=\"alert\"\n     *ngIf=\"showSuccessMessage\">\n  <div class=\"d-flex justify-content-between\">\n    <div class=\"d-flex pb-1\">\n      <span class=\"material-icons-outlined\">\n        info\n      </span>\n    </div>\n    <button type=\"button\" class=\"btn btn-close d-flex\" data-bs-dismiss=\"alert\" aria-label=\"Close\"\n            (click)=\"closeSuccessMessage()\"></button>\n  </div>\n  <p class=\"my-0\"> {{'successMsg' | translate}}</p>\n</div>\n\n\n<div class=\"\" *ngIf=\"jsonForm?.generalInfo && !showSuccessMessage\">\n  <p [innerHTML]=\"getTextLang(jsonForm?.generalInfo?.description) | sanitize\"></p>\n</div>\n\n<div *ngIf=\"!showSuccessMessage && formAnswers?.name && formAnswers?.created && formAnswers?.personal_code\">\n  <h2>{{'lastSubmitted' | translate}}</h2>\n  <div>\n    <p class=\"my-0\">\n      {{'person' | translate}}\n    </p>\n    <p>{{formAnswers?.name}} ({{formAnswers?.personal_code}})</p>\n\n    <p class=\"my-0\">\n      {{'submitTime' | translate}}\n    </p>\n    <p>{{formAnswers?.created | date:'dd.MM.yyyy HH:mm'}}</p>\n  </div>\n</div>\n\n\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"onFormSubmit()\" *ngIf=\"!showSuccessMessage\">\n  <div *ngFor=\"let section of jsonForm?.sections; let indexOfSection=index\" class=\"form-sections\">\n    <h2 class=\"my-4\">{{getTextLang(section?.title)}}</h2>\n    <div class=\"px-lg-4\" *ngFor=\"let question of section?.questions; let indexOfQuestion=index\">\n\n      <div class=\"my-3\">\n        <p class=\"my-0 question-text\" id=\"{{question?.id}}\">{{getTextLang(question?.title)}} <span *ngIf=\"question?.required\"\n                                                                                                   class=\"question-required\">*</span></p>\n        <p *ngIf=\"question?.description\"\n           class=\"my-0 px-lg-4 question-description\">{{getTextLang(question?.description)}}</p>\n      </div>\n\n      <div *ngIf=\"question?.type == QuestionType.RADIO\">\n        <div class=\"form-check\" *ngFor=\"let field of question?.fields;let indexOfField=index\">\n          <div class=\"my-2 px-lg-4\">\n            <input [ngClass]='{\"validation-err\": isSubmitted && getIfError(question?.id)}' class=\"form-check-input\"\n                   type=\"radio\" value=\"{{field?.value}}\" id=\"{{question?.id+indexOfField}}\"\n                   formControlName=\"{{question?.id}}\" maxlength=\"{{field?.maxLength}}\">\n            <label class=\"form-check-label\" for=\"{{question?.id+indexOfField}}\">\n              {{getTextLang(field?.title)}}\n            </label>\n          </div>\n          <div *ngFor=\"let extraField of field?.fields\">\n            <div class=\"form-group\" *ngIf=\"showCommentFieldRadio(question?.id, field?.value, extraField?.id)\">\n              <div *ngIf=\"extraField?.type == FieldType.TEXTAREA\">\n                <label for=\"{{extraField?.id}}\">{{getTextLang(extraField?.title)}}</label>\n                <textarea class=\"form-control\"\n                          placeholder=\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\"\n                          maxlength=\"{{extraField?.maxLength}}\"\n                          [ngClass]='{\"validation-err\": isSubmitted && getIfErrorRequiredField(extraField?.id)}'\n                          id=\"{{extraField?.id}}\" formControlName=\"{{extraField?.id}}\"\n                          rows=\"{{extraField?.rows}}\"></textarea>\n              </div>\n\n              <div *ngIf=\"extraField?.type == FieldType.EMAIL\">\n                <label for=\"{{extraField?.id}}\"> {{getTextLang(extraField?.title)}}</label>\n                <input\n                  [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(extraField?.id) || getIfInvalidEmail(extraField?.id))}'\n                  type=\"email\" placeholder=\"email@email.com\" class=\"form-control\" id=\"{{extraField?.id}}\"\n                  formControlName=\"{{extraField?.id}}\"\n                  maxlength=\"{{extraField?.maxLength}}\">\n\n                <div *ngIf=\"isSubmitted && getIfInvalidEmail(extraField?.id)\">\n                  <div class=\"valid-polygon\"></div>\n                  <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                    {{'correctEmail' | translate}}\n                  </div>\n\n                </div>\n                <div *ngIf=\"isSubmitted && getIfErrorRequiredField(extraField?.id)\">\n                  <div class=\"valid-polygon\"></div>\n                  <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                    {{'mandatoryField' | translate}}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(question?.id)\">\n          <div class=\"valid-polygon\"></div>\n          <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n            {{'mandatoryField' | translate}}\n          </div>\n\n        </div>\n\n        <div *ngFor=\"let secondQuestion of question?.questions; let indexOfInnerQuestion=index\">\n          <div *ngIf=\"makeQuestionVisible(question, secondQuestion)\">\n            <div class=\"my-3\">\n              <p class=\"my-0 question-text\" id=\"{{secondQuestion?.id}}\">{{getTextLang(secondQuestion?.title)}} <span\n                *ngIf=\"secondQuestion?.required\" class=\"question-required\">*</span></p>\n              <p *ngIf=\"secondQuestion?.description\"\n                 class=\"my-0 px-lg-4 question-description\">{{getTextLang(secondQuestion?.description)}}</p>\n            </div>\n\n            <div *ngIf=\"secondQuestion?.type == QuestionType.RADIO\">\n              <div class=\"form-check\" *ngFor=\"let field of secondQuestion?.fields;let indexOfField=index\">\n                <div class=\"my-2 px-lg-4\">\n                  <input [ngClass]='{\"validation-err\": isSubmitted && getIfError(secondQuestion?.id)}'\n                         class=\"form-check-input\" type=\"radio\" id=\"{{secondQuestion?.id+indexOfField}}\"\n                         value=\"{{field?.value}}\" formControlName=\"{{secondQuestion?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                  <label class=\"form-check-label\" for=\"{{secondQuestion?.id+indexOfField}}\">\n                    {{getTextLang(field?.title)}}\n                  </label>\n                </div>\n                <div *ngFor=\"let extraField of field?.fields\">\n                  <div class=\"form-group\"\n                       *ngIf=\"showCommentFieldRadio(secondQuestion?.id, field?.value, extraField?.id)\">\n                    <div *ngIf=\"extraField?.type == FieldType.TEXTAREA\">\n                      <label for=\"{{extraField?.id}}\">{{getTextLang(extraField?.title)}}</label>\n                      <textarea [ngClass]='{\"validation-err\": isSubmitted && (getIfError(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\n                                class=\"form-control\" id=\"{{extraField?.id}}\" formControlName=\"{{extraField?.id}}\"\n                                maxlength=\"{{extraField?.maxLength}}\"\n                                rows=\"{{extraField?.rows}}\"\n                                placeholder=\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n                    </div>\n\n                    <div *ngIf=\"extraField?.type == FieldType.EMAIL\">\n                      <label for=\"{{extraField?.id}}\"> {{getTextLang(extraField?.title)}}</label>\n                      <input\n                        [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(extraField?.id) || getIfInvalidEmail(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\n                        type=\"email\"\n                        class=\"form-control\" placeholder=\"email@email.com\" id=\"{{extraField?.id}}\"\n                        formControlName=\"{{extraField?.id}}\" maxlength=\"{{extraField?.maxLength}}\">\n\n                      <div *ngIf=\"isSubmitted && getIfInvalidEmail(extraField?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'correctEmail' | translate}}\n                        </div>\n                      </div>\n                      <div *ngIf=\"isSubmitted && getIfErrorRequiredField(extraField?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'mandatoryField' | translate}}\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n              <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(secondQuestion?.id)\">\n                <div class=\"valid-polygon\"></div>\n                <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                  {{'mandatoryField' | translate}}\n                </div>\n\n              </div>\n            </div>\n\n            <div *ngIf=\"secondQuestion.type == QuestionType.TEXTINPUT\">\n              <div class=\"form-check\" *ngFor=\"let field of secondQuestion?.fields\">\n                <textarea [ngClass]='{\"validation-err\": isSubmitted &&  (getIfError(secondQuestion?.id) || getIfFieldInvalid(secondQuestion?.id))}'\n                          class=\"form-control\" id=\"{{secondQuestion?.id}}\" formControlName=\"{{secondQuestion?.id}}\"\n                          maxlength=\"{{field?.maxLength}}\"\n                          rows=\"{{field?.rows}}\"\n                          placeholder=\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n              </div>\n              <div class=\"px-lg-4\" *ngIf=\"isSubmitted &&  getIfError(secondQuestion?.id)\">\n                <div class=\"valid-polygon\"></div>\n                <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                  {{'mandatoryField' | translate}}\n                </div>\n\n              </div>\n            </div>\n\n            <div *ngIf=\"secondQuestion?.type == QuestionType.FIELDSET\">\n              <div *ngFor=\"let field of secondQuestion?.fields\">\n                <div class=\"px-lg-4 my-2\">\n                  <div class=\"form-check\" *ngIf=\"field?.type == FieldType.CHECKBOX\"\n                       formGroupName=\"{{secondQuestion?.id}}\">\n                    <input [ngClass]='{\"validation-err\": isSubmitted &&  getIfError(secondQuestion?.id, null, true)}'\n                           class=\"form-check-input\" type=\"checkbox\" id=\"{{field?.id}}\" value=\"checked\"\n                           formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                    <label class=\"form-check-label\" for=\"{{field?.id}}\">\n                      {{getTextLang(field?.title)}}\n                    </label>\n                  </div>\n                  <div *ngFor=\"let extraField of field?.fields\">\n                    <div class=\"form-group\" *ngIf=\"showCommentField(secondQuestion?.id, field?.id, extraField?.id)\">\n                      <div *ngIf=\"extraField?.type == FieldType.TEXTAREA\">\n                        <label for=\"{{extraField?.id}}\">{{getTextLang(extraField?.title)}}</label>\n                        <textarea [ngClass]='{\"validation-err\": isSubmitted &&  (getIfErrorRequiredField(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\n                                  class=\"form-control\" id=\"{{extraField?.id}}\" formControlName=\"{{extraField?.id}}\"\n                                  maxlength=\"{{extraField?.maxLength}}\"\n                                  rows=\"{{extraField?.rows}}\"\n                                  placeholder=\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n                      </div>\n\n                    </div>\n                  </div>\n\n                  <div class=\"form-group\" *ngIf=\"field?.type == FieldType.STRING\">\n                    <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n                    <div class=\"input-group\">\n                      <span *ngIf=\"field?.prefix\" class=\"input-group-text\">{{field?.prefix}}</span>\n                      <input [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfFieldInvalid(field?.id))}' type=\"text\"\n                             class=\"form-control\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                    </div>\n                    <div class=\"\" *ngIf=\"isSubmitted && getIfErrorRequiredField(field?.id)\">\n                      <div class=\"valid-polygon\"></div>\n                      <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                        {{'mandatoryField' | translate}}\n                      </div>\n\n                    </div>\n                  </div>\n\n                  <div class=\"form-group\" *ngIf=\"field?.type == FieldType.NUMBER\">\n                    <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n                    <div class=\"input-group\">\n                      <span *ngIf=\"field?.prefix\" class=\"input-group-text\">{{field?.prefix}}</span>\n                      <input\n                        [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidNumber(field?.id) || getIfFieldInvalid(field?.id))}'\n                        type=\"text\"\n                        class=\"form-control\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                    </div>\n                    <div class=\"\" *ngIf=\"isSubmitted && getIfInvalidNumber(field?.id)\">\n                      <div class=\"valid-polygon\"></div>\n                      <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                        {{'correctNumber' | translate}}\n                      </div>\n                    </div>\n\n                    <div class=\"\" *ngIf=\"isSubmitted && getIfErrorRequiredField(field?.id)\">\n                      <div class=\"valid-polygon\"></div>\n                      <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                        {{'mandatoryField' | translate}}\n                      </div>\n\n                    </div>\n                  </div>\n\n                  <div class=\"form-group\" *ngIf=\"field?.type == FieldType.EMAIL\">\n                    <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n                    <input\n                      [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidEmail(field?.id) || getIfFieldInvalid(field?.id))}'\n                      type=\"email\"\n                      class=\"form-control\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\"\n                      placeholder=\"email@email.com\" maxlength=\"{{field?.maxLength}}\">\n\n                    <div class=\"\" *ngIf=\"isSubmitted && getIfInvalidEmail(field?.id)\">\n                      <div class=\"valid-polygon\"></div>\n                      <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                        {{'correctEmail' | translate}}\n                      </div>\n\n                    </div>\n                    <div class=\"\" *ngIf=\"isSubmitted && getIfErrorRequiredField(field?.id)\">\n                      <div class=\"valid-polygon\"></div>\n                      <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                        {{'mandatoryField' | translate}}\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(secondQuestion?.id, null, true)\">\n                <div class=\"valid-polygon\"></div>\n                <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                  {{'mandatoryField' | translate}}\n                </div>\n              </div>\n            </div>\n\n\n            <div *ngFor=\"let thirdQuestion of secondQuestion?.questions; let indexOfThirdInnerQuestion=index\">\n              <div *ngIf=\"makeQuestionVisible(secondQuestion, thirdQuestion)\">\n\n                <div class=\"my-3\">\n                  <p class=\"my-0 question-text\" id=\"{{thirdQuestion?.id}}\">{{getTextLang(thirdQuestion?.title)}} <span\n                    *ngIf=\"thirdQuestion?.required\" class=\"question-required\">*</span></p>\n                  <p *ngIf=\"thirdQuestion?.description\"\n                     class=\"my-0 px-lg-4 question-description\">{{getTextLang(thirdQuestion?.description)}}</p>\n                </div>\n\n\n                <div *ngIf=\"thirdQuestion?.type == QuestionType.RADIO\">\n                  <div class=\"form-check\" *ngFor=\"let field of thirdQuestion?.fields;let indexOfField=index\">\n                    <div class=\"px-lg-4 my-2\">\n                      <input [ngClass]='{\"validation-err\": isSubmitted && getIfError(thirdQuestion?.id)}'\n                             class=\"form-check-input\" type=\"radio\" id=\"{{thirdQuestion?.id+indexOfField}}\"\n                             value=\"{{field?.value}}\" formControlName=\"{{thirdQuestion?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                      <label class=\"form-check-label\" for=\"{{thirdQuestion?.id+indexOfField}}\">\n                        {{getTextLang(field?.title)}}\n                      </label>\n                    </div>\n                  </div>\n                  <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(thirdQuestion?.id)\">\n                    <div class=\"valid-polygon\"></div>\n                    <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                      {{'mandatoryField' | translate}}\n                    </div>\n\n                  </div>\n                </div>\n\n                <div *ngIf=\"thirdQuestion?.type == QuestionType.TEXTINPUT\">\n                  <div class=\"form-check\" *ngFor=\"let field of thirdQuestion?.fields\">\n                    <textarea [ngClass]='{\"validation-err\": isSubmitted && (getIfError(thirdQuestion?.id) || getIfFieldInvalid(thirdQuestion?.id))}'\n                              class=\"form-control\" id=\"{{thirdQuestion?.id}}\" formControlName=\"{{thirdQuestion?.id}}\"\n                              maxlength=\"{{field?.maxLength}}\"\n                              rows=\"{{field?.rows}}\"\n                              placeholder=\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n                  </div>\n                  <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(thirdQuestion?.id)\">\n                    <div class=\"valid-polygon\"></div>\n                    <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                      {{'mandatoryField' | translate}}\n                    </div>\n\n                  </div>\n                </div>\n\n                <div *ngIf=\"thirdQuestion?.type == QuestionType.FIELDSET\">\n                  <div *ngFor=\"let field of thirdQuestion?.fields\">\n                    <div class=\"form-check\" *ngIf=\"field?.type == FieldType.CHECKBOX\"\n                         formGroupName=\"{{thirdQuestion?.id}}\">\n                      <input [ngClass]='{\"validation-err\": isSubmitted && getIfError(thirdQuestion?.id, null, true)}'\n                             class=\"form-check-input\" type=\"checkbox\" id=\"{{field?.id}}\" value=\"checked\"\n                             formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                      <label class=\"form-check-label\" for=\"{{field?.id}}\">\n                        {{getTextLang(field?.title)}}\n                      </label>\n                    </div>\n                    <div *ngFor=\"let extraField of field?.fields\">\n                      <div class=\"form-group\" *ngIf=\"showCommentField(thirdQuestion?.id, field?.id, extraField?.id)\">\n                        <div *ngIf=\"extraField?.type == FieldType.TEXTAREA\">\n                          <label for=\"{{extraField?.id}}\">{{getTextLang(extraField?.title)}}</label>\n                          <textarea\n                            [ngClass]='{\"validation-err\": isSubmitted && (getIfError(thirdQuestion?.id, thirdQuestion?.fields) || getIfFieldInvalid(thirdQuestion?.id))}'\n                            class=\"form-control\" id=\"{{extraField?.id}}\" formControlName=\"{{extraField?.id}}\" maxlength=\"{{extraField?.maxLength}}\"\n                            rows=\"{{extraField?.rows}}\"\n                            placeholder=\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n                        </div>\n\n                      </div>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"field?.type == FieldType.STRING\">\n                      <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n\n                      <div class=\"input-group\">\n                        <span *ngIf=\"field?.prefix\" class=\"input-group-text\">{{field?.prefix}}</span>\n                        <input\n                          [ngClass]='{\"validation-err\": isSubmitted && (getIfError(thirdQuestion?.id, thirdQuestion?.fields) || getIfFieldInvalid(thirdQuestion?.id))}'\n                          type=\"text\" class=\"form-control\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                      </div>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"field?.type == FieldType.NUMBER\">\n                      <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n                      <div class=\"input-group\">\n                        <span *ngIf=\"field?.prefix\" class=\"input-group-text\">{{field?.prefix}}</span>\n                        <input\n                          [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidNumber(field?.id) || getIfFieldInvalid(field?.id))}'\n                          type=\"text\"\n                          class=\"form-control\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                      </div>\n                      <div class=\"\" *ngIf=\"isSubmitted && getIfInvalidNumber(field?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'correctNumber' | translate}}\n                        </div>\n                      </div>\n\n                      <div class=\"\" *ngIf=\"isSubmitted && getIfErrorRequiredField(field?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'mandatoryField' | translate}}\n                        </div>\n\n                      </div>\n                    </div>\n\n\n                    <div class=\"form-group\" *ngIf=\"field?.type == FieldType.EMAIL\">\n                      <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n                      <input\n                        [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidEmail(field?.id) || getIfFieldInvalid(field?.id))}'\n                        type=\"email\" placeholder=\"email@email.com\" class=\"form-control\" id=\"{{field?.id}}\"\n                        formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n\n\n                      <div *ngIf=\"isSubmitted && getIfInvalidEmail(field?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'correctEmail' | translate}}\n                        </div>\n\n                      </div>\n                      <div *ngIf=\"isSubmitted && getIfErrorRequiredField(field?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'mandatoryField' | translate}}\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n                  <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(thirdQuestion?.id, thirdQuestion?.fields)\">\n                    <div class=\"valid-polygon\"></div>\n                    <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                      {{'mandatoryField' | translate}}\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n\n          </div>\n        </div>\n\n      </div>\n\n      <div *ngIf=\"question?.type == QuestionType.FIELDSET\">\n        <div *ngFor=\"let field of question?.fields\">\n          <div class=\"px-lg-4\" *ngIf=\"field?.type == FieldType.CHECKBOX\">\n            <div class=\"form-check\" formGroupName=\"{{question?.id}}\">\n              <input class=\"form-check-input\" [ngClass]='{\"validation-err\": isSubmitted && (getIfError(question?.id, null, true) || getIfFieldInvalid(question?.id))}'\n                     type=\"checkbox\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\" id=\"flexCheckDefault\" maxlength=\"{{field?.maxLength}}\">\n              <label class=\"form-check-label\" for=\"{{field?.id}}\">\n                {{getTextLang(field?.title)}}\n              </label>\n            </div>\n            <div *ngFor=\"let extraField of field?.fields\">\n              <div class=\"form-group\" *ngIf=\"showCommentField(question?.id, field?.id, extraField?.id)\">\n                <div *ngIf=\"extraField?.type == FieldType.TEXTAREA\">\n                  <label for=\"{{extraField?.id}}\">{{getTextLang(extraField?.title)}}</label>\n                  <textarea [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfFieldInvalid(field?.id) || getIfFieldInvalid(field?.id))}'\n                            class=\"form-control\" id=\"{{extraField?.id}}\" formControlName=\"{{extraField?.id}}\"\n                            maxlength=\"{{extraField?.maxLength}}\"\n                            rows=\"{{extraField?.rows}}\"\n                            placeholder=\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(question?.id, null, true)\">\n          <div class=\"valid-polygon\"></div>\n          <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n            {{'mandatoryField' | translate}}\n          </div>\n\n        </div>\n      </div>\n\n\n      <div *ngIf=\"question?.type == QuestionType.TEXTINPUT\">\n        <div class=\"form-check\" *ngFor=\"let field of question?.fields\">\n          <textarea placeholder=\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\" [ngClass]='{\"validation-err\": isSubmitted && (getIfError(question?.id) || getIfFieldInvalid(question?.id))}' class=\"form-control\"\n                    id=\"{{question?.id}}\" formControlName=\"{{question?.id}}\" rows=\"{{field?.rows}}\" maxlength=\"{{field?.maxLength}}\"></textarea>\n        </div>\n        <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(question?.id)\">\n          <div class=\"valid-polygon\"></div>\n          <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n            {{'mandatoryField' | translate}}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"form-separator\">\n\n  <div class=\"alert alert-danger py-3\" role=\"alert\"\n       *ngIf=\"showErrorMessage\">\n    <div class=\"d-flex justify-content-between\">\n      <div class=\"d-flex pb-1\">\n      <span class=\"material-icons-outlined\">\n        info\n      </span>\n      </div>\n      <button type=\"button\" class=\"btn btn-close d-flex\" data-bs-dismiss=\"alert\" aria-label=\"Close\"\n              (click)=\"closeErrorMessage()\"></button>\n    </div>\n    <p class=\"my-0\">{{'errorMsg' | translate}}</p>\n  </div>\n\n  <div class=\"d-flex flex-md-row flex-column-reverse justify-content-between\">\n    <div class=\"py-1\">\n      <button class=\"form-cancel-button w-100\" type=\"button\" (click)=\"openModal()\">{{'close' | translate}}</button>\n    </div>\n    <div class=\"py-1\">\n      <button class=\"form-submit-button w-100\" type=\"submit\">{{'sendForm' | translate}}</button>\n    </div>\n  </div>\n</form>\n\n\n\n","import { Field, FieldType, JsonForm, Question, QuestionType, Text } from './jsonform.model';\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Subject, takeUntil } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { atLeastOneCheckboxCheckedValidator } from './atLeastOneCheckboxCheckedValidator';\nimport { JsonAnswer } from './jsonanswers.model';\nimport { CustomValidation } from './common/validation.util';\n\n@Component({\n  selector: 'lib-form-generator',\n  styleUrls: ['./form-generator.component.scss'],\n  templateUrl: './form-generator.component.html'\n})\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\n  public formGroup: FormGroup = this.fb.group({});\n\n  @Input()\n  set form(jsonForm: JsonForm) {\n    this.jsonForm$.next(jsonForm);\n  }\n\n  @Input()\n  set answers(answer: JsonAnswer) {\n    this.formAnswers$.next(answer);\n  }\n\n  @Input()\n  set language(lang: string) {\n    this.lang$.next(lang);\n  }\n\n  @Input() set error(error: boolean) {\n    this.showError$.next(error);\n  }\n\n  @Input() set success(success: boolean) {\n    this.showSuccess$.next(success);\n  }\n\n  @Output() toggleCancel = new EventEmitter<boolean>();\n  @Output() answersForm = new EventEmitter<any>();\n\n\n  private currentLang: string = 'et';\n  private componentDestroyed$ = new Subject();\n  private showError$ = new BehaviorSubject<boolean>(false);\n  private showSuccess$ = new BehaviorSubject<boolean>(false);\n  private lang$ = new BehaviorSubject<string>('et');\n  private jsonForm$ = new BehaviorSubject<any>({});\n  private formAnswers$ = new BehaviorSubject<any>({});\n  private invalid = [];\n  jsonForm: JsonForm;\n  formAnswers: JsonAnswer;\n  QuestionType = QuestionType;\n  FieldType = FieldType;\n  isSubmitted: boolean = false;\n  showSuccessMessage: boolean = false;\n  showErrorMessage: boolean = false;\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnDestroy(): void {\n    this.componentDestroyed$.next(null);\n    this.componentDestroyed$.complete();\n  }\n\n  ngOnInit(): void {\n    this.setFeedbackAlerts();\n\n    combineLatest([\n      this.jsonForm$,\n      this.formAnswers$,\n      this.lang$\n    ]).pipe(\n      takeUntil(this.componentDestroyed$)\n    ).subscribe(([jsonForm, formAnswers, lang]) => {\n      this.currentLang = lang;\n      this.formAnswers = formAnswers\n      if (this.jsonForm != jsonForm) {\n        this.jsonForm = jsonForm;\n        this.jsonForm?.sections.forEach(section => this.createFormRecursive(section?.questions))\n      }\n    });\n  }\n\n  private setFeedbackAlerts() {\n    this.showError$.pipe(\n      takeUntil(this.componentDestroyed$)\n    ).subscribe(value => this.showErrorMessage = value);\n\n    this.showSuccess$.pipe(\n      takeUntil(this.componentDestroyed$)\n    ).subscribe(value => this.showSuccessMessage = value);\n  }\n\n  getTextLang(text: Text): string {\n    if (text) {\n      switch (this.currentLang) {\n        case 'en':\n          return text.en ? text.en : text.et;\n          break;\n        case 'ru':\n          return text.ru ? text.ru : text.et;\n          break;\n        default:\n          return text.et ? text.et : '';\n          break;\n      }\n    }\n    return '';\n  }\n\n  createFormRecursive(questions: Question[]) {\n    for (const question of questions) {\n      if (question.type == QuestionType.FIELDSET) {\n        this.createForFieldSet(question?.fields, question?.required, question?.id)\n      } else {\n        const validatorsToAdd = [];\n        if (question.required) {\n          validatorsToAdd.push(Validators.required);\n        }\n\n        question.enteredValue = this.findFromAnswers(question.id);\n\n        this.formGroup.addControl(\n          question.id,\n          this.fb.control(question.enteredValue, validatorsToAdd)\n        );\n        for (const field of question.fields) {\n          if (field?.fields) {\n            this.createForFieldSet(field.fields, false);\n          }\n        }\n      }\n      if (question?.questions) {\n        this.createFormRecursive(question.questions)\n      }\n    }\n  }\n\n  createForFieldSet(fields: Field[], parentRequired: boolean, parentId?: string) {\n    const checkBoxFields = fields.filter(field => field.type == FieldType.CHECKBOX);\n    const nonCheckBoxFields = fields.filter(field => field.type != FieldType.CHECKBOX);\n\n    if (checkBoxFields.length > 0) {\n      this.formGroup.addControl(\n        parentId,\n        this.buildCategoryFormGroup(parentRequired, checkBoxFields)\n      )\n    }\n    this.createNonCheckBoxFields(nonCheckBoxFields);\n\n    for (const field of fields) {\n      if (field?.fields) {\n        this.createForFieldSet(field.fields, false);\n      }\n    }\n  }\n\n\n  private createNonCheckBoxFields(nonCheckBoxFields: Field[]) {\n    for (const field of nonCheckBoxFields) {\n      const validatorsToAdd = [];\n\n      if (field.type != FieldType.CHECKBOX && field.required) {\n        validatorsToAdd.push(Validators.required);\n      }\n      if (field.type == FieldType.NUMBER) {\n        validatorsToAdd.push(Validators.pattern('^[0-9]*$'))\n      }\n\n      if (field.maxLength) {\n        validatorsToAdd.push(Validators.maxLength(field.maxLength))\n      }\n      if (field.type == FieldType.EMAIL) {\n        validatorsToAdd.push(CustomValidation.email());\n      }\n\n      field.enteredValue = this.findFromAnswers(field.id);\n\n      if (field.enteredValue == null) field.enteredValue = undefined;\n      this.formGroup.addControl(\n        field.id,\n        this.fb.control(field.enteredValue, validatorsToAdd)\n      );\n    }\n  }\n\n  private findFromAnswers(id: string): any {\n    const found = this.formAnswers?.answer_data.find((obj) => {\n      return obj.id === id;\n    });\n    if (found?.value) {\n      return found.value;\n    }\n  }\n\n  private buildCategoryFormGroup(parentRequired: boolean, fields: Field[]): FormGroup {\n    let group = this.fb.group({}, {\n      validators: atLeastOneCheckboxCheckedValidator()\n    });\n    fields.forEach(field => {\n      field.enteredValue = this.setCheckBoxField(field);\n\n      group.addControl(field.id, this.fb.control(field.enteredValue));\n    })\n    return group;\n  }\n\n\n  private setCheckBoxField(field: Field): boolean {\n    let value;\n    field.enteredValue = this.findFromAnswers(field.id);\n    if (field.enteredValue === null || field.enteredValue == 'false') {\n      value = false\n    } else if (field.enteredValue == 'true') {\n      value = true;\n    }\n    return value;\n  }\n\n  private findInvalidControls() {\n    this.invalid = [];\n    const controls = this.formGroup.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        this.invalid.push(name);\n      }\n    }\n    return this.invalid;\n  }\n\n  onFormSubmit() {\n    this.isSubmitted = true;\n    this.findInvalidControls();\n    let shownAndInvalid = this.createShownAndInvalidList();\n    if (shownAndInvalid.length > 0) {\n      this.scrollToFirstElementWithErr(shownAndInvalid[0]);\n    } else {\n      this.answersForm.emit(this.formGroup.getRawValue())\n    }\n  }\n\n  private createShownAndInvalidList(): any[] {\n    let arr = [];\n    this.invalid.forEach(value => {\n      if (document.getElementById(value)) {\n        arr.push(value);\n      };\n    })\n    return arr;\n  }\n\n  private scrollToFirstElementWithErr(id: string) {\n    const el = document.getElementById(id) as HTMLElement;\n    if (el) {\n      const parentElement = el.parentElement;\n      if (parentElement) {\n        const scrollTop = parentElement.offsetTop - 50;\n        window.scroll({\n          top: scrollTop,\n          behavior: 'smooth'\n        });\n      }\n    }\n\n  }\n\n  private gotoTop() {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  }\n\n  getIfError(id: string, fields?: Field[], checkbox?: boolean): boolean {\n    const controls = this.formGroup.controls;\n\n    let invalidContains = false;\n    if (fields?.length > 0) {\n      let counter = 0;\n      for (const f of fields) {\n        if (controls[f?.id]?.invalid) {\n          counter++;\n        }\n      }\n\n      if (counter < fields?.length) {\n        invalidContains = false;\n      } else {\n        invalidContains = true;\n      }\n\n    } else {\n      if(!checkbox){\n        invalidContains = this.getIfErrorRequiredField(id)\n      } else {\n        invalidContains = this.getIfCheckboxRequiredInvalid(id);\n      }\n    }\n    return invalidContains;\n  }\n\n\n  makeQuestionVisible(question: Question, innerQuestion: Question): boolean {\n    let makeVisible: boolean = false;\n    question.fields.filter(field => (field.value == this.formGroup.get(question.id).value)).forEach(\n      foundField => {\n        if (foundField?.makeVisible && foundField?.makeVisible.indexOf(innerQuestion?.id) > -1) {\n          makeVisible = true;\n        }\n      }\n    )\n    if(!makeVisible){\n      this.resetValues(innerQuestion);\n    }\n    return makeVisible;\n  }\n\n  private resetValues(innerQuestion: Question) {\n    const controls = this.formGroup.controls;\n\n    if (innerQuestion?.type == QuestionType.FIELDSET) {\n      for (const f of innerQuestion?.fields) {\n        if (f.type == FieldType.STRING || f.type == FieldType.NUMBER || f?.type == FieldType.EMAIL) {\n          controls[f?.id].reset();\n        } else if (f.type == FieldType.CHECKBOX) {\n          controls[innerQuestion?.id].get(f?.id).reset();\n        }\n\n      }\n    } else if (innerQuestion?.type == QuestionType.TEXTINPUT || innerQuestion?.type == QuestionType.RADIO) {\n      controls[innerQuestion?.id].reset();\n    }\n  }\n\n  showCommentField(parentId: string, id: string, fieldId: string): boolean {\n    let showComment = false;\n    const controls = this.formGroup.controls;\n    if (controls[parentId].value[id] == true) {\n      showComment = true;\n    } else {\n      controls[fieldId].reset();\n    }\n    return showComment;\n\n  }\n\n  showCommentFieldRadio(id: string, value: string | undefined, fieldId: string): boolean {\n    let showComment = false;\n    if (this.formGroup?.get(id)?.value === value) {\n      showComment = true;\n    }  else {\n      this.formGroup?.get(fieldId).reset();\n    }\n    return showComment;\n  }\n\n  openModal() {\n    this.toggleCancel.emit(true);\n  }\n\n  getIfErrorRequiredField(id: string) {\n    return this.formGroup?.controls[id]?.invalid && this.formGroup?.controls[id]?.getError('required') == true;\n  }\n\n  getIfInvalidEmail(id: string) {\n    return this.formGroup?.controls[id]?.invalid && this.formGroup?.controls[id]?.getError('email') == true;\n  }\n\n  getIfFieldInvalid(id: string) {\n    return this.formGroup?.controls[id]?.invalid;\n  }\n\n  getIfCheckboxRequiredInvalid(id: string) {\n    return this.formGroup?.controls[id]?.invalid  && this.formGroup?.controls[id]?.getError('requireCheckboxToBeChecked') == true;\n  }\n\n  getIfInvalidNumber(id: string) {\n    let pattern = {\n      requiredPattern: ''\n    }\n    pattern = this.formGroup?.controls[id]?.getError('pattern');\n    return this.formGroup?.controls[id]?.invalid && pattern?.requiredPattern == '^[0-9]*$' == true;\n  }\n\n  closeSuccessMessage() {\n    this.showSuccessMessage = false;\n  }\n\n  closeErrorMessage() {\n    this.showErrorMessage = false;\n  }\n}\n\n\n","import { FormGeneratorComponent } from './form-generator.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslatePipe } from './common/translate.pipe';\nimport { SanitizePipe } from './common/sanitize.pipe';\n\n\n@NgModule({\n  declarations: [\n    FormGeneratorComponent,\n    TranslatePipe,\n    SanitizePipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [TranslatePipe],\n  exports: [\n    FormGeneratorComponent\n  ]\n})\nexport class FormGeneratorModule {\n}\n","/*\n * Public API Surface of form-generator\n */\n\nexport * from './lib/form-generator.service';\nexport * from './lib/form-generator.component';\nexport * from './lib/form-generator.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Pipe, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, combineLatest, takeUntil } from 'rxjs';\nimport * as i1 from '@angular/forms';\nimport { Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport DOMPurify from 'dompurify';\n\nclass FormGeneratorService {\n    constructor() {\n    }\n}\nFormGeneratorService.ɵfac = function FormGeneratorService_Factory(t) { return new (t || FormGeneratorService)(); };\nFormGeneratorService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: FormGeneratorService, factory: FormGeneratorService.ɵfac, providedIn: 'root' });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGeneratorService, [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], function () { return []; }, null);\n})();\n\nvar QuestionType;\n(function (QuestionType) {\n    QuestionType[\"RADIO\"] = \"radio\";\n    QuestionType[\"FIELDSET\"] = \"fieldset\";\n    QuestionType[\"CHECKBOX\"] = \"checkbox\";\n    QuestionType[\"TEXTAREA\"] = \"textarea\";\n    QuestionType[\"TEXTINPUT\"] = \"textinput\";\n})(QuestionType || (QuestionType = {}));\nvar FieldType;\n(function (FieldType) {\n    FieldType[\"NUMBER\"] = \"number\";\n    FieldType[\"STRING\"] = \"string\";\n    FieldType[\"EMAIL\"] = \"email\";\n    FieldType[\"DATE\"] = \"date\";\n    FieldType[\"CHECKBOX\"] = \"checkbox\";\n    FieldType[\"TEXTAREA\"] = \"textarea\";\n})(FieldType || (FieldType = {}));\n\nfunction atLeastOneCheckboxCheckedValidator(minRequired = 1) {\n    return function validate(formGroup) {\n        let checked = 0;\n        Object.keys(formGroup.controls).forEach(key => {\n            const control = formGroup.controls[key];\n            if (control.value === true) {\n                checked++;\n            }\n        });\n        if (checked < minRequired) {\n            return {\n                requireCheckboxToBeChecked: true,\n            };\n        }\n        return null;\n    };\n}\n\nclass CustomValidation {\n    static email() {\n        return (control) => {\n            var _a;\n            const value = (_a = control.value) === null || _a === void 0 ? void 0 : _a.trim();\n            const regex = new RegExp(/^(?!\\.)((?!.*\\.{2})[a-zA-Z0-9\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF\\.!#$%&'*+-/=?^_`{|}~\\-\\d]+)@(?!\\.)([a-zA-Z0-9\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF\\-\\.\\d]+)((\\.([a-zA-Z\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF]){2,63})+)$/i);\n            const valid = regex.test(value);\n            return valid ? null : { email: true };\n        };\n    }\n}\n\nvar success = \"Success\";\nvar successMsg = \"Aitäh, et täitsite küsimustiku! Teie andmed salvestati.\";\nvar lastSubmitted = \"Viimati esitas:\";\nvar person = \"Isik\";\nvar submitTime = \"Esitamise aeg:\";\nvar mandatoryField = \"Peab olema täidetud\";\nvar correctEmail = \"Palun sisestage korrektne e-maili aadress\";\nvar correctNumber = \"Palun sisestage korrektne number\";\nvar error = \"Error\";\nvar errorMsg = \"Andmete salvestamisel tekkis viga. Palun proovige uuesti ja kui probleem on püsiv, siis võtke palun ühendust meie kasutajatoega help@ria.ee\";\nvar close = \"Sulgen\";\nvar sendForm = \"Saadan ankeedi\";\nvar upto = \"Kuni\";\nvar characters = \"sümbolit\";\nvar et = {\n    success: success,\n    successMsg: successMsg,\n    lastSubmitted: lastSubmitted,\n    person: person,\n    submitTime: submitTime,\n    mandatoryField: mandatoryField,\n    correctEmail: correctEmail,\n    correctNumber: correctNumber,\n    error: error,\n    errorMsg: errorMsg,\n    close: close,\n    sendForm: sendForm,\n    upto: upto,\n    characters: characters\n};\n\nclass TranslatePipe {\n    constructor() { }\n    transform(code, params) {\n        var _a;\n        let messages = {};\n        messages = et;\n        return (_a = this.replaceParams(messages[code], params)) !== null && _a !== void 0 ? _a : code;\n    }\n    replaceParams(text, params) {\n        var _a;\n        if (!text || !params || !((_a = Object.keys(params)) === null || _a === void 0 ? void 0 : _a.length)) {\n            return text;\n        }\n        const keys = Object.keys(params);\n        keys.forEach(key => {\n            text = text.replace(`{{${key}}}`, (params[key] || '').toString());\n        });\n        return text;\n    }\n}\nTranslatePipe.ɵfac = function TranslatePipe_Factory(t) { return new (t || TranslatePipe)(); };\nTranslatePipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"translate\", type: TranslatePipe, pure: false });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TranslatePipe, [{\n            type: Pipe,\n            args: [{\n                    name: 'translate',\n                    pure: false // required to update the value when the promise is resolved\n                }]\n        }], function () { return []; }, null);\n})();\n\nclass SanitizePipe {\n    constructor() {\n    }\n    transform(value) {\n        return DOMPurify.sanitize(value, { USE_PROFILES: { html: true }, FORBID_ATTR: ['class'] });\n    }\n}\nSanitizePipe.ɵfac = function SanitizePipe_Factory(t) { return new (t || SanitizePipe)(); };\nSanitizePipe.ɵpipe = /*@__PURE__*/ i0.ɵɵdefinePipe({ name: \"sanitize\", type: SanitizePipe, pure: true });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SanitizePipe, [{\n            type: Pipe,\n            args: [{\n                    name: 'sanitize'\n                }]\n        }], function () { return []; }, null);\n})();\n\nfunction FormGeneratorComponent_div_0_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"div\", 6)(3, \"span\", 7);\n        i0.ɵɵtext(4, \" info \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function FormGeneratorComponent_div_0_Template_button_click_5_listener() { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r4.closeSuccessMessage()); });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"p\", 9);\n        i0.ɵɵtext(7);\n        i0.ɵɵpipe(8, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(8, 1, \"successMsg\"), \"\");\n    }\n}\nfunction FormGeneratorComponent_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 10);\n        i0.ɵɵelement(1, \"p\", 11);\n        i0.ɵɵpipe(2, \"sanitize\");\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const ctx_r1 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(2, 1, ctx_r1.getTextLang(ctx_r1.jsonForm == null ? null : ctx_r1.jsonForm.generalInfo == null ? null : ctx_r1.jsonForm.generalInfo.description)), i0.ɵɵsanitizeHtml);\n    }\n}\nfunction FormGeneratorComponent_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\")(5, \"p\", 9);\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\", 9);\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14);\n        i0.ɵɵpipe(15, \"date\");\n        i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n        const ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 6, \"lastSubmitted\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(7, 8, \"person\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", ctx_r2.formAnswers == null ? null : ctx_r2.formAnswers.name, \" (\", ctx_r2.formAnswers == null ? null : ctx_r2.formAnswers.personal_code, \")\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(12, 10, \"submitTime\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 12, ctx_r2.formAnswers == null ? null : ctx_r2.formAnswers.created, \"dd.MM.yyyy HH:mm\"));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_span_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 28);\n        i0.ɵɵtext(1, \"*\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_p_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 29);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const question_r11 = i0.ɵɵnextContext().$implicit;\n        const ctx_r14 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r14.getTextLang(question_r11 == null ? null : question_r11.description));\n    }\n}\nconst _c0 = function (a0) { return { \"validation-err\": a0 }; };\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"textarea\", 40);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r25 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r27 = i0.ɵɵnextContext(6);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", extraField_r25 == null ? null : extraField_r25.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r27.getTextLang(extraField_r25 == null ? null : extraField_r25.title));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", (extraField_r25 == null ? null : extraField_r25.maxLength) ? i0.ɵɵpipeBind1(4, 8, \"upto\") + \" \" + (extraField_r25 == null ? null : extraField_r25.maxLength) + \" \" + i0.ɵɵpipeBind1(5, 10, \"characters\") : \"\");\n        i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r25 == null ? null : extraField_r25.maxLength);\n        i0.ɵɵpropertyInterpolate(\"id\", extraField_r25 == null ? null : extraField_r25.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r25 == null ? null : extraField_r25.id);\n        i0.ɵɵpropertyInterpolate(\"rows\", extraField_r25 == null ? null : extraField_r25.rows);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r27.isSubmitted && ctx_r27.getIfErrorRequiredField(extraField_r25 == null ? null : extraField_r25.id)));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_div_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctEmail\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_div_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 41);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_div_4_Template, 5, 3, \"div\", 2);\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_div_5_Template, 5, 3, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r25 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r28 = i0.ɵɵnextContext(6);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", extraField_r25 == null ? null : extraField_r25.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r28.getTextLang(extraField_r25 == null ? null : extraField_r25.title), \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", extraField_r25 == null ? null : extraField_r25.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r25 == null ? null : extraField_r25.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r25 == null ? null : extraField_r25.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r28.isSubmitted && (ctx_r28.getIfErrorRequiredField(extraField_r25 == null ? null : extraField_r25.id) || ctx_r28.getIfInvalidEmail(extraField_r25 == null ? null : extraField_r25.id))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r28.isSubmitted && ctx_r28.getIfInvalidEmail(extraField_r25 == null ? null : extraField_r25.id));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r28.isSubmitted && ctx_r28.getIfErrorRequiredField(extraField_r25 == null ? null : extraField_r25.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38);\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_1_Template, 6, 14, \"div\", 2);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_div_2_Template, 6, 10, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r25 = i0.ɵɵnextContext().$implicit;\n        const ctx_r26 = i0.ɵɵnextContext(6);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (extraField_r25 == null ? null : extraField_r25.type) == ctx_r26.FieldType.TEXTAREA);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (extraField_r25 == null ? null : extraField_r25.type) == ctx_r26.FieldType.EMAIL);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_div_1_Template, 3, 2, \"div\", 37);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r25 = ctx.$implicit;\n        const field_r22 = i0.ɵɵnextContext().$implicit;\n        const question_r11 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r24 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r24.showCommentFieldRadio(question_r11 == null ? null : question_r11.id, field_r22 == null ? null : field_r22.value, extraField_r25 == null ? null : extraField_r25.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\", 34);\n        i0.ɵɵelement(2, \"input\", 35);\n        i0.ɵɵelementStart(3, \"label\", 36);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_div_5_Template, 2, 1, \"div\", 32);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r22 = ctx.$implicit;\n        const indexOfField_r23 = ctx.index;\n        const question_r11 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r19 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"value\", field_r22 == null ? null : field_r22.value);\n        i0.ɵɵpropertyInterpolate(\"id\", (question_r11 == null ? null : question_r11.id) + indexOfField_r23);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", question_r11 == null ? null : question_r11.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r22 == null ? null : field_r22.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r19.isSubmitted && ctx_r19.getIfError(question_r11 == null ? null : question_r11.id)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", (question_r11 == null ? null : question_r11.id) + indexOfField_r23);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r19.getTextLang(field_r22 == null ? null : field_r22.title), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", field_r22 == null ? null : field_r22.fields);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_span_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 28);\n        i0.ɵɵtext(1, \"*\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_p_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 29);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const secondQuestion_r37 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r41 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r41.getTextLang(secondQuestion_r37 == null ? null : secondQuestion_r37.description));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"textarea\", 45);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r52 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r54 = i0.ɵɵnextContext(9);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", extraField_r52 == null ? null : extraField_r52.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r54.getTextLang(extraField_r52 == null ? null : extraField_r52.title));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", extraField_r52 == null ? null : extraField_r52.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r52 == null ? null : extraField_r52.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r52 == null ? null : extraField_r52.maxLength);\n        i0.ɵɵpropertyInterpolate(\"rows\", extraField_r52 == null ? null : extraField_r52.rows);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", (extraField_r52 == null ? null : extraField_r52.maxLength) ? i0.ɵɵpipeBind1(4, 8, \"upto\") + \" \" + (extraField_r52 == null ? null : extraField_r52.maxLength) + \" \" + i0.ɵɵpipeBind1(5, 10, \"characters\") : \"\");\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r54.isSubmitted && (ctx_r54.getIfError(extraField_r52 == null ? null : extraField_r52.id) || ctx_r54.getIfFieldInvalid(extraField_r52 == null ? null : extraField_r52.id))));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_div_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctEmail\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_div_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 41);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_div_4_Template, 5, 3, \"div\", 2);\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_div_5_Template, 5, 3, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r52 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r55 = i0.ɵɵnextContext(9);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", extraField_r52 == null ? null : extraField_r52.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r55.getTextLang(extraField_r52 == null ? null : extraField_r52.title), \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", extraField_r52 == null ? null : extraField_r52.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r52 == null ? null : extraField_r52.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r52 == null ? null : extraField_r52.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r55.isSubmitted && (ctx_r55.getIfErrorRequiredField(extraField_r52 == null ? null : extraField_r52.id) || ctx_r55.getIfInvalidEmail(extraField_r52 == null ? null : extraField_r52.id) || ctx_r55.getIfFieldInvalid(extraField_r52 == null ? null : extraField_r52.id))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r55.isSubmitted && ctx_r55.getIfInvalidEmail(extraField_r52 == null ? null : extraField_r52.id));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r55.isSubmitted && ctx_r55.getIfErrorRequiredField(extraField_r52 == null ? null : extraField_r52.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38);\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_1_Template, 6, 14, \"div\", 2);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_div_2_Template, 6, 10, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r52 = i0.ɵɵnextContext().$implicit;\n        const ctx_r53 = i0.ɵɵnextContext(9);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (extraField_r52 == null ? null : extraField_r52.type) == ctx_r53.FieldType.TEXTAREA);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (extraField_r52 == null ? null : extraField_r52.type) == ctx_r53.FieldType.EMAIL);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_div_1_Template, 3, 2, \"div\", 37);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r52 = ctx.$implicit;\n        const field_r49 = i0.ɵɵnextContext().$implicit;\n        const secondQuestion_r37 = i0.ɵɵnextContext(3).$implicit;\n        const ctx_r51 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r51.showCommentFieldRadio(secondQuestion_r37 == null ? null : secondQuestion_r37.id, field_r49 == null ? null : field_r49.value, extraField_r52 == null ? null : extraField_r52.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\", 34);\n        i0.ɵɵelement(2, \"input\", 44);\n        i0.ɵɵelementStart(3, \"label\", 36);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_div_5_Template, 2, 1, \"div\", 32);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r49 = ctx.$implicit;\n        const indexOfField_r50 = ctx.index;\n        const secondQuestion_r37 = i0.ɵɵnextContext(3).$implicit;\n        const ctx_r47 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"id\", (secondQuestion_r37 == null ? null : secondQuestion_r37.id) + indexOfField_r50);\n        i0.ɵɵpropertyInterpolate(\"value\", field_r49 == null ? null : field_r49.value);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", secondQuestion_r37 == null ? null : secondQuestion_r37.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r49 == null ? null : field_r49.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r47.isSubmitted && ctx_r47.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", (secondQuestion_r37 == null ? null : secondQuestion_r37.id) + indexOfField_r50);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r47.getTextLang(field_r49 == null ? null : field_r49.title), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", field_r49 == null ? null : field_r49.fields);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_1_Template, 6, 10, \"div\", 30);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_div_2_Template, 5, 3, \"div\", 31);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const secondQuestion_r37 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r42 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", secondQuestion_r37 == null ? null : secondQuestion_r37.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r42.isSubmitted && ctx_r42.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 33);\n        i0.ɵɵelement(1, \"textarea\", 45);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵpipe(3, \"translate\");\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r67 = ctx.$implicit;\n        const secondQuestion_r37 = i0.ɵɵnextContext(3).$implicit;\n        const ctx_r65 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", secondQuestion_r37 == null ? null : secondQuestion_r37.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", secondQuestion_r37 == null ? null : secondQuestion_r37.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r67 == null ? null : field_r67.maxLength);\n        i0.ɵɵpropertyInterpolate(\"rows\", field_r67 == null ? null : field_r67.rows);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", (field_r67 == null ? null : field_r67.maxLength) ? i0.ɵɵpipeBind1(2, 6, \"upto\") + \" \" + (field_r67 == null ? null : field_r67.maxLength) + \" \" + i0.ɵɵpipeBind1(3, 8, \"characters\") : \"\");\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx_r65.isSubmitted && (ctx_r65.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id) || ctx_r65.getIfFieldInvalid(secondQuestion_r37 == null ? null : secondQuestion_r37.id))));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_div_1_Template, 4, 12, \"div\", 30);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_div_2_Template, 5, 3, \"div\", 31);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const secondQuestion_r37 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r43 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", secondQuestion_r37 == null ? null : secondQuestion_r37.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r43.isSubmitted && ctx_r43.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 48);\n        i0.ɵɵelement(1, \"input\", 49);\n        i0.ɵɵelementStart(2, \"label\", 36);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const field_r72 = i0.ɵɵnextContext().$implicit;\n        const secondQuestion_r37 = i0.ɵɵnextContext(3).$implicit;\n        const ctx_r73 = i0.ɵɵnextContext(5);\n        i0.ɵɵpropertyInterpolate(\"formGroupName\", secondQuestion_r37 == null ? null : secondQuestion_r37.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r72 == null ? null : field_r72.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r73.isSubmitted && ctx_r73.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id, null, true)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r73.getTextLang(field_r72 == null ? null : field_r72.title), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_div_1_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"textarea\", 45);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r80 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r82 = i0.ɵɵnextContext(9);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", extraField_r80 == null ? null : extraField_r80.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r82.getTextLang(extraField_r80 == null ? null : extraField_r80.title));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", extraField_r80 == null ? null : extraField_r80.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r80 == null ? null : extraField_r80.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r80 == null ? null : extraField_r80.maxLength);\n        i0.ɵɵpropertyInterpolate(\"rows\", extraField_r80 == null ? null : extraField_r80.rows);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", (extraField_r80 == null ? null : extraField_r80.maxLength) ? i0.ɵɵpipeBind1(4, 8, \"upto\") + \" \" + (extraField_r80 == null ? null : extraField_r80.maxLength) + \" \" + i0.ɵɵpipeBind1(5, 10, \"characters\") : \"\");\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r82.isSubmitted && (ctx_r82.getIfErrorRequiredField(extraField_r80 == null ? null : extraField_r80.id) || ctx_r82.getIfFieldInvalid(extraField_r80 == null ? null : extraField_r80.id))));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38);\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_div_1_div_1_Template, 6, 14, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r80 = i0.ɵɵnextContext().$implicit;\n        const ctx_r81 = i0.ɵɵnextContext(9);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (extraField_r80 == null ? null : extraField_r80.type) == ctx_r81.FieldType.TEXTAREA);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_div_1_Template, 2, 1, \"div\", 37);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r80 = ctx.$implicit;\n        const field_r72 = i0.ɵɵnextContext().$implicit;\n        const secondQuestion_r37 = i0.ɵɵnextContext(3).$implicit;\n        const ctx_r74 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r74.showCommentField(secondQuestion_r37 == null ? null : secondQuestion_r37.id, field_r72 == null ? null : field_r72.id, extraField_r80 == null ? null : extraField_r80.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_span_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 53);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r72 = i0.ɵɵnextContext(2).$implicit;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(field_r72 == null ? null : field_r72.prefix);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_div_6_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 10);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 50);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_span_4_Template, 2, 1, \"span\", 51);\n        i0.ɵɵelement(5, \"input\", 52);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_div_6_Template, 5, 3, \"div\", 1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r72 = i0.ɵɵnextContext().$implicit;\n        const ctx_r75 = i0.ɵɵnextContext(8);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r75.getTextLang(field_r72 == null ? null : field_r72.title), \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", field_r72 == null ? null : field_r72.prefix);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r72 == null ? null : field_r72.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r75.isSubmitted && (ctx_r75.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id) || ctx_r75.getIfFieldInvalid(field_r72 == null ? null : field_r72.id))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r75.isSubmitted && ctx_r75.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_span_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 53);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r72 = i0.ɵɵnextContext(2).$implicit;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(field_r72 == null ? null : field_r72.prefix);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_div_6_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 10);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctNumber\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_div_7_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 10);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 50);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_span_4_Template, 2, 1, \"span\", 51);\n        i0.ɵɵelement(5, \"input\", 52);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_div_6_Template, 5, 3, \"div\", 1);\n        i0.ɵɵtemplate(7, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_div_7_Template, 5, 3, \"div\", 1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r72 = i0.ɵɵnextContext().$implicit;\n        const ctx_r76 = i0.ɵɵnextContext(8);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r76.getTextLang(field_r72 == null ? null : field_r72.title), \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", field_r72 == null ? null : field_r72.prefix);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r72 == null ? null : field_r72.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx_r76.isSubmitted && (ctx_r76.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id) || ctx_r76.getIfInvalidNumber(field_r72 == null ? null : field_r72.id) || ctx_r76.getIfFieldInvalid(field_r72 == null ? null : field_r72.id))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r76.isSubmitted && ctx_r76.getIfInvalidNumber(field_r72 == null ? null : field_r72.id));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r76.isSubmitted && ctx_r76.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_div_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 10);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctEmail\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_div_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 10);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 41);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_div_4_Template, 5, 3, \"div\", 1);\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_div_5_Template, 5, 3, \"div\", 1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r72 = i0.ɵɵnextContext().$implicit;\n        const ctx_r77 = i0.ɵɵnextContext(8);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r77.getTextLang(field_r72 == null ? null : field_r72.title), \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", field_r72 == null ? null : field_r72.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r72 == null ? null : field_r72.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r77.isSubmitted && (ctx_r77.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id) || ctx_r77.getIfInvalidEmail(field_r72 == null ? null : field_r72.id) || ctx_r77.getIfFieldInvalid(field_r72 == null ? null : field_r72.id))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r77.isSubmitted && ctx_r77.getIfInvalidEmail(field_r72 == null ? null : field_r72.id));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r77.isSubmitted && ctx_r77.getIfErrorRequiredField(field_r72 == null ? null : field_r72.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 46);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_2_Template, 4, 9, \"div\", 47);\n        i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_3_Template, 2, 1, \"div\", 32);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_4_Template, 7, 10, \"div\", 37);\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_5_Template, 8, 11, \"div\", 37);\n        i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_div_6_Template, 6, 10, \"div\", 37);\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const field_r72 = ctx.$implicit;\n        const ctx_r70 = i0.ɵɵnextContext(8);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (field_r72 == null ? null : field_r72.type) == ctx_r70.FieldType.CHECKBOX);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", field_r72 == null ? null : field_r72.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (field_r72 == null ? null : field_r72.type) == ctx_r70.FieldType.STRING);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (field_r72 == null ? null : field_r72.type) == ctx_r70.FieldType.NUMBER);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (field_r72 == null ? null : field_r72.type) == ctx_r70.FieldType.EMAIL);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_1_Template, 7, 5, \"div\", 32);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_div_2_Template, 5, 3, \"div\", 31);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const secondQuestion_r37 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r44 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", secondQuestion_r37 == null ? null : secondQuestion_r37.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r44.isSubmitted && ctx_r44.getIfError(secondQuestion_r37 == null ? null : secondQuestion_r37.id, null, true));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_span_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 28);\n        i0.ɵɵtext(1, \"*\");\n        i0.ɵɵelementEnd();\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_p_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 29);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const thirdQuestion_r100 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r104 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r104.getTextLang(thirdQuestion_r100 == null ? null : thirdQuestion_r100.description));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\", 46);\n        i0.ɵɵelement(2, \"input\", 44);\n        i0.ɵɵelementStart(3, \"label\", 36);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n        const field_r111 = ctx.$implicit;\n        const indexOfField_r112 = ctx.index;\n        const thirdQuestion_r100 = i0.ɵɵnextContext(3).$implicit;\n        const ctx_r109 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"id\", (thirdQuestion_r100 == null ? null : thirdQuestion_r100.id) + indexOfField_r112);\n        i0.ɵɵpropertyInterpolate(\"value\", field_r111 == null ? null : field_r111.value);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r111 == null ? null : field_r111.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r109.isSubmitted && ctx_r109.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", (thirdQuestion_r100 == null ? null : thirdQuestion_r100.id) + indexOfField_r112);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r109.getTextLang(field_r111 == null ? null : field_r111.title), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_div_1_Template, 5, 9, \"div\", 30);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_div_2_Template, 5, 3, \"div\", 31);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const thirdQuestion_r100 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r105 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r105.isSubmitted && ctx_r105.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 33);\n        i0.ɵɵelement(1, \"textarea\", 45);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵpipe(3, \"translate\");\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r117 = ctx.$implicit;\n        const thirdQuestion_r100 = i0.ɵɵnextContext(3).$implicit;\n        const ctx_r115 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r117 == null ? null : field_r117.maxLength);\n        i0.ɵɵpropertyInterpolate(\"rows\", field_r117 == null ? null : field_r117.rows);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", (field_r117 == null ? null : field_r117.maxLength) ? i0.ɵɵpipeBind1(2, 6, \"upto\") + \" \" + (field_r117 == null ? null : field_r117.maxLength) + \" \" + i0.ɵɵpipeBind1(3, 8, \"characters\") : \"\");\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx_r115.isSubmitted && (ctx_r115.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id) || ctx_r115.getIfFieldInvalid(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id))));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_div_1_Template, 4, 12, \"div\", 30);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_div_2_Template, 5, 3, \"div\", 31);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const thirdQuestion_r100 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r106 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r106.isSubmitted && ctx_r106.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 48);\n        i0.ɵɵelement(1, \"input\", 49);\n        i0.ɵɵelementStart(2, \"label\", 36);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const field_r122 = i0.ɵɵnextContext().$implicit;\n        const thirdQuestion_r100 = i0.ɵɵnextContext(3).$implicit;\n        const ctx_r123 = i0.ɵɵnextContext(7);\n        i0.ɵɵpropertyInterpolate(\"formGroupName\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r122 == null ? null : field_r122.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r123.isSubmitted && ctx_r123.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id, null, true)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r123.getTextLang(field_r122 == null ? null : field_r122.title), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_div_1_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"textarea\", 45);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r130 = i0.ɵɵnextContext(2).$implicit;\n        const thirdQuestion_r100 = i0.ɵɵnextContext(4).$implicit;\n        const ctx_r132 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", extraField_r130 == null ? null : extraField_r130.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r132.getTextLang(extraField_r130 == null ? null : extraField_r130.title));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", extraField_r130 == null ? null : extraField_r130.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r130 == null ? null : extraField_r130.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r130 == null ? null : extraField_r130.maxLength);\n        i0.ɵɵpropertyInterpolate(\"rows\", extraField_r130 == null ? null : extraField_r130.rows);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", (extraField_r130 == null ? null : extraField_r130.maxLength) ? i0.ɵɵpipeBind1(4, 8, \"upto\") + \" \" + (extraField_r130 == null ? null : extraField_r130.maxLength) + \" \" + i0.ɵɵpipeBind1(5, 10, \"characters\") : \"\");\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r132.isSubmitted && (ctx_r132.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id, thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields) || ctx_r132.getIfFieldInvalid(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id))));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38);\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_div_1_div_1_Template, 6, 14, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r130 = i0.ɵɵnextContext().$implicit;\n        const ctx_r131 = i0.ɵɵnextContext(11);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (extraField_r130 == null ? null : extraField_r130.type) == ctx_r131.FieldType.TEXTAREA);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_div_1_Template, 2, 1, \"div\", 37);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r130 = ctx.$implicit;\n        const field_r122 = i0.ɵɵnextContext().$implicit;\n        const thirdQuestion_r100 = i0.ɵɵnextContext(3).$implicit;\n        const ctx_r124 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r124.showCommentField(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id, field_r122 == null ? null : field_r122.id, extraField_r130 == null ? null : extraField_r130.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_3_span_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 53);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r122 = i0.ɵɵnextContext(2).$implicit;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(field_r122 == null ? null : field_r122.prefix);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 50);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_3_span_4_Template, 2, 1, \"span\", 51);\n        i0.ɵɵelement(5, \"input\", 52);\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        const field_r122 = i0.ɵɵnextContext().$implicit;\n        const thirdQuestion_r100 = i0.ɵɵnextContext(3).$implicit;\n        const ctx_r125 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r125.getTextLang(field_r122 == null ? null : field_r122.title), \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", field_r122 == null ? null : field_r122.prefix);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r122 == null ? null : field_r122.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r125.isSubmitted && (ctx_r125.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id, thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields) || ctx_r125.getIfFieldInvalid(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id))));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_span_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 53);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r122 = i0.ɵɵnextContext(2).$implicit;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(field_r122 == null ? null : field_r122.prefix);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_div_6_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 10);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctNumber\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_div_7_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 10);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 50);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_span_4_Template, 2, 1, \"span\", 51);\n        i0.ɵɵelement(5, \"input\", 52);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_div_6_Template, 5, 3, \"div\", 1);\n        i0.ɵɵtemplate(7, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_div_7_Template, 5, 3, \"div\", 1);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r122 = i0.ɵɵnextContext().$implicit;\n        const ctx_r126 = i0.ɵɵnextContext(10);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r126.getTextLang(field_r122 == null ? null : field_r122.title), \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", field_r122 == null ? null : field_r122.prefix);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r122 == null ? null : field_r122.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx_r126.isSubmitted && (ctx_r126.getIfErrorRequiredField(field_r122 == null ? null : field_r122.id) || ctx_r126.getIfInvalidNumber(field_r122 == null ? null : field_r122.id) || ctx_r126.getIfFieldInvalid(field_r122 == null ? null : field_r122.id))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r126.isSubmitted && ctx_r126.getIfInvalidNumber(field_r122 == null ? null : field_r122.id));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r126.isSubmitted && ctx_r126.getIfErrorRequiredField(field_r122 == null ? null : field_r122.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_div_4_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"correctEmail\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_div_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38)(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 41);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_div_4_Template, 5, 3, \"div\", 2);\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_div_5_Template, 5, 3, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r122 = i0.ɵɵnextContext().$implicit;\n        const ctx_r127 = i0.ɵɵnextContext(10);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r127.getTextLang(field_r122 == null ? null : field_r122.title), \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", field_r122 == null ? null : field_r122.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r122 == null ? null : field_r122.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r127.isSubmitted && (ctx_r127.getIfErrorRequiredField(field_r122 == null ? null : field_r122.id) || ctx_r127.getIfInvalidEmail(field_r122 == null ? null : field_r122.id) || ctx_r127.getIfFieldInvalid(field_r122 == null ? null : field_r122.id))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r127.isSubmitted && ctx_r127.getIfInvalidEmail(field_r122 == null ? null : field_r122.id));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r127.isSubmitted && ctx_r127.getIfErrorRequiredField(field_r122 == null ? null : field_r122.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_1_Template, 4, 9, \"div\", 47);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_2_Template, 2, 1, \"div\", 32);\n        i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_3_Template, 6, 9, \"div\", 37);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_4_Template, 8, 11, \"div\", 37);\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_div_5_Template, 6, 10, \"div\", 37);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r122 = ctx.$implicit;\n        const ctx_r120 = i0.ɵɵnextContext(10);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (field_r122 == null ? null : field_r122.type) == ctx_r120.FieldType.CHECKBOX);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", field_r122 == null ? null : field_r122.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (field_r122 == null ? null : field_r122.type) == ctx_r120.FieldType.STRING);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (field_r122 == null ? null : field_r122.type) == ctx_r120.FieldType.NUMBER);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (field_r122 == null ? null : field_r122.type) == ctx_r120.FieldType.EMAIL);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_1_Template, 6, 5, \"div\", 32);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_div_2_Template, 5, 3, \"div\", 31);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const thirdQuestion_r100 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r107 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r107.isSubmitted && ctx_r107.getIfError(thirdQuestion_r100 == null ? null : thirdQuestion_r100.id, thirdQuestion_r100 == null ? null : thirdQuestion_r100.fields));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 24)(2, \"p\", 25);\n        i0.ɵɵtext(3);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_span_4_Template, 2, 0, \"span\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_p_5_Template, 2, 1, \"p\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_6_Template, 3, 2, \"div\", 2);\n        i0.ɵɵtemplate(7, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_7_Template, 3, 2, \"div\", 2);\n        i0.ɵɵtemplate(8, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_div_8_Template, 3, 2, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const thirdQuestion_r100 = i0.ɵɵnextContext().$implicit;\n        const ctx_r102 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"id\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx_r102.getTextLang(thirdQuestion_r100 == null ? null : thirdQuestion_r100.title), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", thirdQuestion_r100 == null ? null : thirdQuestion_r100.description);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (thirdQuestion_r100 == null ? null : thirdQuestion_r100.type) == ctx_r102.QuestionType.RADIO);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (thirdQuestion_r100 == null ? null : thirdQuestion_r100.type) == ctx_r102.QuestionType.TEXTINPUT);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (thirdQuestion_r100 == null ? null : thirdQuestion_r100.type) == ctx_r102.QuestionType.FIELDSET);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_div_1_Template, 9, 7, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const thirdQuestion_r100 = ctx.$implicit;\n        const secondQuestion_r37 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r45 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r45.makeQuestionVisible(secondQuestion_r37, thirdQuestion_r100));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 24)(2, \"p\", 25);\n        i0.ɵɵtext(3);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_span_4_Template, 2, 0, \"span\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_p_5_Template, 2, 1, \"p\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_6_Template, 3, 2, \"div\", 2);\n        i0.ɵɵtemplate(7, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_7_Template, 3, 2, \"div\", 2);\n        i0.ɵɵtemplate(8, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_8_Template, 3, 2, \"div\", 2);\n        i0.ɵɵtemplate(9, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_div_9_Template, 2, 1, \"div\", 32);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const secondQuestion_r37 = i0.ɵɵnextContext().$implicit;\n        const ctx_r39 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"id\", secondQuestion_r37 == null ? null : secondQuestion_r37.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx_r39.getTextLang(secondQuestion_r37 == null ? null : secondQuestion_r37.title), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", secondQuestion_r37 == null ? null : secondQuestion_r37.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", secondQuestion_r37 == null ? null : secondQuestion_r37.description);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (secondQuestion_r37 == null ? null : secondQuestion_r37.type) == ctx_r39.QuestionType.RADIO);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", secondQuestion_r37.type == ctx_r39.QuestionType.TEXTINPUT);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (secondQuestion_r37 == null ? null : secondQuestion_r37.type) == ctx_r39.QuestionType.FIELDSET);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", secondQuestion_r37 == null ? null : secondQuestion_r37.questions);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_div_1_Template, 10, 8, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const secondQuestion_r37 = ctx.$implicit;\n        const question_r11 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r21 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r21.makeQuestionVisible(question_r11, secondQuestion_r37));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_6_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_1_Template, 6, 10, \"div\", 30);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_2_Template, 5, 3, \"div\", 31);\n        i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_div_1_div_3_div_6_div_3_Template, 2, 1, \"div\", 32);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const question_r11 = i0.ɵɵnextContext().$implicit;\n        const ctx_r15 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", question_r11 == null ? null : question_r11.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r15.isSubmitted && ctx_r15.getIfError(question_r11 == null ? null : question_r11.id));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", question_r11 == null ? null : question_r11.questions);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_div_1_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"label\", 39);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"textarea\", 45);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r161 = i0.ɵɵnextContext(2).$implicit;\n        const field_r158 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r163 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", extraField_r161 == null ? null : extraField_r161.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx_r163.getTextLang(extraField_r161 == null ? null : extraField_r161.title));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", extraField_r161 == null ? null : extraField_r161.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", extraField_r161 == null ? null : extraField_r161.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", extraField_r161 == null ? null : extraField_r161.maxLength);\n        i0.ɵɵpropertyInterpolate(\"rows\", extraField_r161 == null ? null : extraField_r161.rows);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", (extraField_r161 == null ? null : extraField_r161.maxLength) ? i0.ɵɵpipeBind1(4, 8, \"upto\") + \" \" + (extraField_r161 == null ? null : extraField_r161.maxLength) + \" \" + i0.ɵɵpipeBind1(5, 10, \"characters\") : \"\");\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx_r163.isSubmitted && (ctx_r163.getIfErrorRequiredField(field_r158 == null ? null : field_r158.id) || ctx_r163.getIfFieldInvalid(field_r158 == null ? null : field_r158.id) || ctx_r163.getIfFieldInvalid(field_r158 == null ? null : field_r158.id))));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 38);\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_div_1_div_1_Template, 6, 14, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r161 = i0.ɵɵnextContext().$implicit;\n        const ctx_r162 = i0.ɵɵnextContext(7);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (extraField_r161 == null ? null : extraField_r161.type) == ctx_r162.FieldType.TEXTAREA);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_div_1_Template, 2, 1, \"div\", 37);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const extraField_r161 = ctx.$implicit;\n        const field_r158 = i0.ɵɵnextContext(2).$implicit;\n        const question_r11 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r160 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r160.showCommentField(question_r11 == null ? null : question_r11.id, field_r158 == null ? null : field_r158.id, extraField_r161 == null ? null : extraField_r161.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 48);\n        i0.ɵɵelement(2, \"input\", 54);\n        i0.ɵɵelementStart(3, \"label\", 36);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_div_5_Template, 2, 1, \"div\", 32);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r158 = i0.ɵɵnextContext().$implicit;\n        const question_r11 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r159 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"formGroupName\", question_r11 == null ? null : question_r11.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", field_r158 == null ? null : field_r158.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", field_r158 == null ? null : field_r158.id);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r158 == null ? null : field_r158.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r159.isSubmitted && (ctx_r159.getIfError(question_r11 == null ? null : question_r11.id, null, true) || ctx_r159.getIfFieldInvalid(question_r11 == null ? null : question_r11.id))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", field_r158 == null ? null : field_r158.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r159.getTextLang(field_r158 == null ? null : field_r158.title), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", field_r158 == null ? null : field_r158.fields);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_div_1_Template, 6, 10, \"div\", 31);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r158 = ctx.$implicit;\n        const ctx_r156 = i0.ɵɵnextContext(5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (field_r158 == null ? null : field_r158.type) == ctx_r156.FieldType.CHECKBOX);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_7_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_1_Template, 2, 1, \"div\", 32);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_7_div_2_Template, 5, 3, \"div\", 31);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const question_r11 = i0.ɵɵnextContext().$implicit;\n        const ctx_r16 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", question_r11 == null ? null : question_r11.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r16.isSubmitted && ctx_r16.getIfError(question_r11 == null ? null : question_r11.id, null, true));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_8_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 33);\n        i0.ɵɵelement(1, \"textarea\", 55);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵpipe(3, \"translate\");\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const field_r174 = ctx.$implicit;\n        const question_r11 = i0.ɵɵnextContext(2).$implicit;\n        const ctx_r172 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", (field_r174 == null ? null : field_r174.maxLength) ? i0.ɵɵpipeBind1(2, 6, \"upto\") + \" \" + (field_r174 == null ? null : field_r174.maxLength) + \" \" + i0.ɵɵpipeBind1(3, 8, \"characters\") : \"\");\n        i0.ɵɵpropertyInterpolate(\"id\", question_r11 == null ? null : question_r11.id);\n        i0.ɵɵpropertyInterpolate(\"formControlName\", question_r11 == null ? null : question_r11.id);\n        i0.ɵɵpropertyInterpolate(\"rows\", field_r174 == null ? null : field_r174.rows);\n        i0.ɵɵpropertyInterpolate(\"maxlength\", field_r174 == null ? null : field_r174.maxLength);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx_r172.isSubmitted && (ctx_r172.getIfError(question_r11 == null ? null : question_r11.id) || ctx_r172.getIfFieldInvalid(question_r11 == null ? null : question_r11.id))));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_8_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23);\n        i0.ɵɵelement(1, \"div\", 42);\n        i0.ɵɵelementStart(2, \"div\", 43);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, \"mandatoryField\"), \" \");\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_div_8_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_div_3_div_8_div_1_Template, 4, 12, \"div\", 30);\n        i0.ɵɵtemplate(2, FormGeneratorComponent_form_3_div_1_div_3_div_8_div_2_Template, 5, 3, \"div\", 31);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const question_r11 = i0.ɵɵnextContext().$implicit;\n        const ctx_r17 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", question_r11 == null ? null : question_r11.fields);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx_r17.isSubmitted && ctx_r17.getIfError(question_r11 == null ? null : question_r11.id));\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 24)(2, \"p\", 25);\n        i0.ɵɵtext(3);\n        i0.ɵɵtemplate(4, FormGeneratorComponent_form_3_div_1_div_3_span_4_Template, 2, 0, \"span\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, FormGeneratorComponent_form_3_div_1_div_3_p_5_Template, 2, 1, \"p\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, FormGeneratorComponent_form_3_div_1_div_3_div_6_Template, 4, 3, \"div\", 2);\n        i0.ɵɵtemplate(7, FormGeneratorComponent_form_3_div_1_div_3_div_7_Template, 3, 2, \"div\", 2);\n        i0.ɵɵtemplate(8, FormGeneratorComponent_form_3_div_1_div_3_div_8_Template, 3, 2, \"div\", 2);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const question_r11 = ctx.$implicit;\n        const ctx_r10 = i0.ɵɵnextContext(3);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"id\", question_r11 == null ? null : question_r11.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx_r10.getTextLang(question_r11 == null ? null : question_r11.title), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", question_r11 == null ? null : question_r11.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", question_r11 == null ? null : question_r11.description);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (question_r11 == null ? null : question_r11.type) == ctx_r10.QuestionType.RADIO);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (question_r11 == null ? null : question_r11.type) == ctx_r10.QuestionType.FIELDSET);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (question_r11 == null ? null : question_r11.type) == ctx_r10.QuestionType.TEXTINPUT);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 20)(1, \"h2\", 21);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_div_1_div_3_Template, 9, 7, \"div\", 22);\n        i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n        const section_r8 = ctx.$implicit;\n        const ctx_r6 = i0.ɵɵnextContext(2);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx_r6.getTextLang(section_r8 == null ? null : section_r8.title));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", section_r8 == null ? null : section_r8.questions);\n    }\n}\nfunction FormGeneratorComponent_form_3_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r178 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 56)(1, \"div\", 5)(2, \"div\", 6)(3, \"span\", 7);\n        i0.ɵɵtext(4, \" info \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function FormGeneratorComponent_form_3_div_3_Template_button_click_5_listener() { i0.ɵɵrestoreView(_r178); const ctx_r177 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r177.closeErrorMessage()); });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"p\", 9);\n        i0.ɵɵtext(7);\n        i0.ɵɵpipe(8, \"translate\");\n        i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 1, \"errorMsg\"));\n    }\n}\nfunction FormGeneratorComponent_form_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r180 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 12);\n        i0.ɵɵlistener(\"ngSubmit\", function FormGeneratorComponent_form_3_Template_form_ngSubmit_0_listener() { i0.ɵɵrestoreView(_r180); const ctx_r179 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r179.onFormSubmit()); });\n        i0.ɵɵtemplate(1, FormGeneratorComponent_form_3_div_1_Template, 4, 2, \"div\", 13);\n        i0.ɵɵelement(2, \"hr\", 14);\n        i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_div_3_Template, 9, 3, \"div\", 15);\n        i0.ɵɵelementStart(4, \"div\", 16)(5, \"div\", 17)(6, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function FormGeneratorComponent_form_3_Template_button_click_6_listener() { i0.ɵɵrestoreView(_r180); const ctx_r181 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r181.openModal()); });\n        i0.ɵɵtext(7);\n        i0.ɵɵpipe(8, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 17)(10, \"button\", 19);\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n        const ctx_r3 = i0.ɵɵnextContext();\n        i0.ɵɵproperty(\"formGroup\", ctx_r3.formGroup);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx_r3.jsonForm == null ? null : ctx_r3.jsonForm.sections);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx_r3.showErrorMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 5, \"close\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 7, \"sendForm\"));\n    }\n}\nclass FormGeneratorComponent {\n    constructor(fb) {\n        this.fb = fb;\n        this.formGroup = this.fb.group({});\n        this.toggleCancel = new EventEmitter();\n        this.answersForm = new EventEmitter();\n        this.currentLang = 'et';\n        this.componentDestroyed$ = new Subject();\n        this.showError$ = new BehaviorSubject(false);\n        this.showSuccess$ = new BehaviorSubject(false);\n        this.lang$ = new BehaviorSubject('et');\n        this.jsonForm$ = new BehaviorSubject({});\n        this.formAnswers$ = new BehaviorSubject({});\n        this.invalid = [];\n        this.QuestionType = QuestionType;\n        this.FieldType = FieldType;\n        this.isSubmitted = false;\n        this.showSuccessMessage = false;\n        this.showErrorMessage = false;\n    }\n    set form(jsonForm) {\n        this.jsonForm$.next(jsonForm);\n    }\n    set answers(answer) {\n        this.formAnswers$.next(answer);\n    }\n    set language(lang) {\n        this.lang$.next(lang);\n    }\n    set error(error) {\n        this.showError$.next(error);\n    }\n    set success(success) {\n        this.showSuccess$.next(success);\n    }\n    ngOnDestroy() {\n        this.componentDestroyed$.next(null);\n        this.componentDestroyed$.complete();\n    }\n    ngOnInit() {\n        this.setFeedbackAlerts();\n        combineLatest([\n            this.jsonForm$,\n            this.formAnswers$,\n            this.lang$\n        ]).pipe(takeUntil(this.componentDestroyed$)).subscribe(([jsonForm, formAnswers, lang]) => {\n            var _a;\n            this.currentLang = lang;\n            this.formAnswers = formAnswers;\n            if (this.jsonForm != jsonForm) {\n                this.jsonForm = jsonForm;\n                (_a = this.jsonForm) === null || _a === void 0 ? void 0 : _a.sections.forEach(section => this.createFormRecursive(section === null || section === void 0 ? void 0 : section.questions));\n            }\n        });\n    }\n    setFeedbackAlerts() {\n        this.showError$.pipe(takeUntil(this.componentDestroyed$)).subscribe(value => this.showErrorMessage = value);\n        this.showSuccess$.pipe(takeUntil(this.componentDestroyed$)).subscribe(value => this.showSuccessMessage = value);\n    }\n    getTextLang(text) {\n        if (text) {\n            switch (this.currentLang) {\n                case 'en':\n                    return text.en ? text.en : text.et;\n                    break;\n                case 'ru':\n                    return text.ru ? text.ru : text.et;\n                    break;\n                default:\n                    return text.et ? text.et : '';\n                    break;\n            }\n        }\n        return '';\n    }\n    createFormRecursive(questions) {\n        for (const question of questions) {\n            if (question.type == QuestionType.FIELDSET) {\n                this.createForFieldSet(question === null || question === void 0 ? void 0 : question.fields, question === null || question === void 0 ? void 0 : question.required, question === null || question === void 0 ? void 0 : question.id);\n            }\n            else {\n                const validatorsToAdd = [];\n                if (question.required) {\n                    validatorsToAdd.push(Validators.required);\n                }\n                question.enteredValue = this.findFromAnswers(question.id);\n                this.formGroup.addControl(question.id, this.fb.control(question.enteredValue, validatorsToAdd));\n                for (const field of question.fields) {\n                    if (field === null || field === void 0 ? void 0 : field.fields) {\n                        this.createForFieldSet(field.fields, false);\n                    }\n                }\n            }\n            if (question === null || question === void 0 ? void 0 : question.questions) {\n                this.createFormRecursive(question.questions);\n            }\n        }\n    }\n    createForFieldSet(fields, parentRequired, parentId) {\n        const checkBoxFields = fields.filter(field => field.type == FieldType.CHECKBOX);\n        const nonCheckBoxFields = fields.filter(field => field.type != FieldType.CHECKBOX);\n        if (checkBoxFields.length > 0) {\n            this.formGroup.addControl(parentId, this.buildCategoryFormGroup(parentRequired, checkBoxFields));\n        }\n        this.createNonCheckBoxFields(nonCheckBoxFields);\n        for (const field of fields) {\n            if (field === null || field === void 0 ? void 0 : field.fields) {\n                this.createForFieldSet(field.fields, false);\n            }\n        }\n    }\n    createNonCheckBoxFields(nonCheckBoxFields) {\n        for (const field of nonCheckBoxFields) {\n            const validatorsToAdd = [];\n            if (field.type != FieldType.CHECKBOX && field.required) {\n                validatorsToAdd.push(Validators.required);\n            }\n            if (field.type == FieldType.NUMBER) {\n                validatorsToAdd.push(Validators.pattern('^[0-9]*$'));\n            }\n            if (field.maxLength) {\n                validatorsToAdd.push(Validators.maxLength(field.maxLength));\n            }\n            if (field.type == FieldType.EMAIL) {\n                validatorsToAdd.push(CustomValidation.email());\n            }\n            field.enteredValue = this.findFromAnswers(field.id);\n            if (field.enteredValue == null)\n                field.enteredValue = undefined;\n            this.formGroup.addControl(field.id, this.fb.control(field.enteredValue, validatorsToAdd));\n        }\n    }\n    findFromAnswers(id) {\n        var _a;\n        const found = (_a = this.formAnswers) === null || _a === void 0 ? void 0 : _a.answer_data.find((obj) => {\n            return obj.id === id;\n        });\n        if (found === null || found === void 0 ? void 0 : found.value) {\n            return found.value;\n        }\n    }\n    buildCategoryFormGroup(parentRequired, fields) {\n        let group = this.fb.group({}, {\n            validators: atLeastOneCheckboxCheckedValidator()\n        });\n        fields.forEach(field => {\n            field.enteredValue = this.setCheckBoxField(field);\n            group.addControl(field.id, this.fb.control(field.enteredValue));\n        });\n        return group;\n    }\n    setCheckBoxField(field) {\n        let value;\n        field.enteredValue = this.findFromAnswers(field.id);\n        if (field.enteredValue === null || field.enteredValue == 'false') {\n            value = false;\n        }\n        else if (field.enteredValue == 'true') {\n            value = true;\n        }\n        return value;\n    }\n    findInvalidControls() {\n        this.invalid = [];\n        const controls = this.formGroup.controls;\n        for (const name in controls) {\n            if (controls[name].invalid) {\n                this.invalid.push(name);\n            }\n        }\n        return this.invalid;\n    }\n    onFormSubmit() {\n        this.isSubmitted = true;\n        this.findInvalidControls();\n        let shownAndInvalid = this.createShownAndInvalidList();\n        if (shownAndInvalid.length > 0) {\n            this.scrollToFirstElementWithErr(shownAndInvalid[0]);\n        }\n        else {\n            this.answersForm.emit(this.formGroup.getRawValue());\n        }\n    }\n    createShownAndInvalidList() {\n        let arr = [];\n        this.invalid.forEach(value => {\n            if (document.getElementById(value)) {\n                arr.push(value);\n            }\n            ;\n        });\n        return arr;\n    }\n    scrollToFirstElementWithErr(id) {\n        const el = document.getElementById(id);\n        if (el) {\n            const parentElement = el.parentElement;\n            if (parentElement) {\n                const scrollTop = parentElement.offsetTop - 50;\n                window.scroll({\n                    top: scrollTop,\n                    behavior: 'smooth'\n                });\n            }\n        }\n    }\n    gotoTop() {\n        window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n        });\n    }\n    getIfError(id, fields, checkbox) {\n        var _a;\n        const controls = this.formGroup.controls;\n        let invalidContains = false;\n        if ((fields === null || fields === void 0 ? void 0 : fields.length) > 0) {\n            let counter = 0;\n            for (const f of fields) {\n                if ((_a = controls[f === null || f === void 0 ? void 0 : f.id]) === null || _a === void 0 ? void 0 : _a.invalid) {\n                    counter++;\n                }\n            }\n            if (counter < (fields === null || fields === void 0 ? void 0 : fields.length)) {\n                invalidContains = false;\n            }\n            else {\n                invalidContains = true;\n            }\n        }\n        else {\n            if (!checkbox) {\n                invalidContains = this.getIfErrorRequiredField(id);\n            }\n            else {\n                invalidContains = this.getIfCheckboxRequiredInvalid(id);\n            }\n        }\n        return invalidContains;\n    }\n    makeQuestionVisible(question, innerQuestion) {\n        let makeVisible = false;\n        question.fields.filter(field => (field.value == this.formGroup.get(question.id).value)).forEach(foundField => {\n            if ((foundField === null || foundField === void 0 ? void 0 : foundField.makeVisible) && (foundField === null || foundField === void 0 ? void 0 : foundField.makeVisible.indexOf(innerQuestion === null || innerQuestion === void 0 ? void 0 : innerQuestion.id)) > -1) {\n                makeVisible = true;\n            }\n        });\n        if (!makeVisible) {\n            this.resetValues(innerQuestion);\n        }\n        return makeVisible;\n    }\n    resetValues(innerQuestion) {\n        const controls = this.formGroup.controls;\n        if ((innerQuestion === null || innerQuestion === void 0 ? void 0 : innerQuestion.type) == QuestionType.FIELDSET) {\n            for (const f of innerQuestion === null || innerQuestion === void 0 ? void 0 : innerQuestion.fields) {\n                if (f.type == FieldType.STRING || f.type == FieldType.NUMBER || (f === null || f === void 0 ? void 0 : f.type) == FieldType.EMAIL) {\n                    controls[f === null || f === void 0 ? void 0 : f.id].reset();\n                }\n                else if (f.type == FieldType.CHECKBOX) {\n                    controls[innerQuestion === null || innerQuestion === void 0 ? void 0 : innerQuestion.id].get(f === null || f === void 0 ? void 0 : f.id).reset();\n                }\n            }\n        }\n        else if ((innerQuestion === null || innerQuestion === void 0 ? void 0 : innerQuestion.type) == QuestionType.TEXTINPUT || (innerQuestion === null || innerQuestion === void 0 ? void 0 : innerQuestion.type) == QuestionType.RADIO) {\n            controls[innerQuestion === null || innerQuestion === void 0 ? void 0 : innerQuestion.id].reset();\n        }\n    }\n    showCommentField(parentId, id, fieldId) {\n        let showComment = false;\n        const controls = this.formGroup.controls;\n        if (controls[parentId].value[id] == true) {\n            showComment = true;\n        }\n        else {\n            controls[fieldId].reset();\n        }\n        return showComment;\n    }\n    showCommentFieldRadio(id, value, fieldId) {\n        var _a, _b, _c;\n        let showComment = false;\n        if (((_b = (_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.get(id)) === null || _b === void 0 ? void 0 : _b.value) === value) {\n            showComment = true;\n        }\n        else {\n            (_c = this.formGroup) === null || _c === void 0 ? void 0 : _c.get(fieldId).reset();\n        }\n        return showComment;\n    }\n    openModal() {\n        this.toggleCancel.emit(true);\n    }\n    getIfErrorRequiredField(id) {\n        var _a, _b, _c, _d;\n        return ((_b = (_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.controls[id]) === null || _b === void 0 ? void 0 : _b.invalid) && ((_d = (_c = this.formGroup) === null || _c === void 0 ? void 0 : _c.controls[id]) === null || _d === void 0 ? void 0 : _d.getError('required')) == true;\n    }\n    getIfInvalidEmail(id) {\n        var _a, _b, _c, _d;\n        return ((_b = (_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.controls[id]) === null || _b === void 0 ? void 0 : _b.invalid) && ((_d = (_c = this.formGroup) === null || _c === void 0 ? void 0 : _c.controls[id]) === null || _d === void 0 ? void 0 : _d.getError('email')) == true;\n    }\n    getIfFieldInvalid(id) {\n        var _a, _b;\n        return (_b = (_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.controls[id]) === null || _b === void 0 ? void 0 : _b.invalid;\n    }\n    getIfCheckboxRequiredInvalid(id) {\n        var _a, _b, _c, _d;\n        return ((_b = (_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.controls[id]) === null || _b === void 0 ? void 0 : _b.invalid) && ((_d = (_c = this.formGroup) === null || _c === void 0 ? void 0 : _c.controls[id]) === null || _d === void 0 ? void 0 : _d.getError('requireCheckboxToBeChecked')) == true;\n    }\n    getIfInvalidNumber(id) {\n        var _a, _b, _c, _d;\n        let pattern = {\n            requiredPattern: ''\n        };\n        pattern = (_b = (_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.controls[id]) === null || _b === void 0 ? void 0 : _b.getError('pattern');\n        return ((_d = (_c = this.formGroup) === null || _c === void 0 ? void 0 : _c.controls[id]) === null || _d === void 0 ? void 0 : _d.invalid) && (pattern === null || pattern === void 0 ? void 0 : pattern.requiredPattern) == '^[0-9]*$' == true;\n    }\n    closeSuccessMessage() {\n        this.showSuccessMessage = false;\n    }\n    closeErrorMessage() {\n        this.showErrorMessage = false;\n    }\n}\nFormGeneratorComponent.ɵfac = function FormGeneratorComponent_Factory(t) { return new (t || FormGeneratorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder)); };\nFormGeneratorComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: FormGeneratorComponent, selectors: [[\"lib-form-generator\"]], inputs: { form: \"form\", answers: \"answers\", language: \"language\", error: \"error\", success: \"success\" }, outputs: { toggleCancel: \"toggleCancel\", answersForm: \"answersForm\" }, decls: 4, vars: 4, consts: [[\"class\", \"alert alert-success py-3\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"py-3\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"d-flex\", \"pb-1\"], [1, \"material-icons-outlined\"], [\"type\", \"button\", \"data-bs-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"btn\", \"btn-close\", \"d-flex\", 3, \"click\"], [1, \"my-0\"], [1, \"\"], [3, \"innerHTML\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"form-sections\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-separator\"], [\"class\", \"alert alert-danger py-3\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-md-row\", \"flex-column-reverse\", \"justify-content-between\"], [1, \"py-1\"], [\"type\", \"button\", 1, \"form-cancel-button\", \"w-100\", 3, \"click\"], [\"type\", \"submit\", 1, \"form-submit-button\", \"w-100\"], [1, \"form-sections\"], [1, \"my-4\"], [\"class\", \"px-lg-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"px-lg-4\"], [1, \"my-3\"], [1, \"my-0\", \"question-text\", 3, \"id\"], [\"class\", \"question-required\", 4, \"ngIf\"], [\"class\", \"my-0 px-lg-4 question-description\", 4, \"ngIf\"], [1, \"question-required\"], [1, \"my-0\", \"px-lg-4\", \"question-description\"], [\"class\", \"form-check\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"px-lg-4\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"form-check\"], [1, \"my-2\", \"px-lg-4\"], [\"type\", \"radio\", 1, \"form-check-input\", 3, \"ngClass\", \"value\", \"id\", \"formControlName\", \"maxlength\"], [1, \"form-check-label\", 3, \"for\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"form-group\"], [3, \"for\"], [1, \"form-control\", 3, \"placeholder\", \"maxlength\", \"ngClass\", \"id\", \"formControlName\", \"rows\"], [\"type\", \"email\", \"placeholder\", \"email@email.com\", 1, \"form-control\", 3, \"ngClass\", \"id\", \"formControlName\", \"maxlength\"], [1, \"valid-polygon\"], [1, \"p-3\", \"form-validation-msg\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [\"type\", \"radio\", 1, \"form-check-input\", 3, \"ngClass\", \"id\", \"value\", \"formControlName\", \"maxlength\"], [1, \"form-control\", 3, \"ngClass\", \"id\", \"formControlName\", \"maxlength\", \"rows\", \"placeholder\"], [1, \"px-lg-4\", \"my-2\"], [\"class\", \"form-check\", 3, \"formGroupName\", 4, \"ngIf\"], [1, \"form-check\", 3, \"formGroupName\"], [\"type\", \"checkbox\", \"value\", \"checked\", 1, \"form-check-input\", 3, \"ngClass\", \"id\", \"formControlName\", \"maxlength\"], [1, \"input-group\"], [\"class\", \"input-group-text\", 4, \"ngIf\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"id\", \"formControlName\", \"maxlength\"], [1, \"input-group-text\"], [\"type\", \"checkbox\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"ngClass\", \"id\", \"formControlName\", \"maxlength\"], [1, \"form-control\", 3, \"placeholder\", \"ngClass\", \"id\", \"formControlName\", \"rows\", \"maxlength\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"py-3\"]], template: function FormGeneratorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n            i0.ɵɵtemplate(0, FormGeneratorComponent_div_0_Template, 9, 3, \"div\", 0);\n            i0.ɵɵtemplate(1, FormGeneratorComponent_div_1_Template, 3, 3, \"div\", 1);\n            i0.ɵɵtemplate(2, FormGeneratorComponent_div_2_Template, 16, 15, \"div\", 2);\n            i0.ɵɵtemplate(3, FormGeneratorComponent_form_3_Template, 13, 9, \"form\", 3);\n        }\n        if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.showSuccessMessage);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", (ctx.jsonForm == null ? null : ctx.jsonForm.generalInfo) && !ctx.showSuccessMessage);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.showSuccessMessage && (ctx.formAnswers == null ? null : ctx.formAnswers.name) && (ctx.formAnswers == null ? null : ctx.formAnswers.created) && (ctx.formAnswers == null ? null : ctx.formAnswers.personal_code));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.showSuccessMessage);\n        }\n    }, dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i2.DatePipe, TranslatePipe, SanitizePipe], styles: [\".question-text[_ngcontent-%COMP%]{font-weight:600;font-size:16px;line-height:24px;color:#09090b}.question-description[_ngcontent-%COMP%]{color:#9799a4;font-size:14px}.question-required[_ngcontent-%COMP%]{color:#d73e3e}.form-sections[_ngcontent-%COMP%]{font-family:Roboto}.form-separator[_ngcontent-%COMP%]{border:1px solid #8bb4d5}.form-cancel-button[_ngcontent-%COMP%]{border-radius:22px;background:#ffffff;padding:0 32px;gap:8px;width:113px;height:40px}.form-submit-button[_ngcontent-%COMP%]{background:#005aa3;border-radius:22px;border:none;padding:0 32px;gap:8px;color:#fff;width:113px;height:40px}.form-validation-msg[_ngcontent-%COMP%]{background:#d73e3e;border-radius:4px;min-width:183px;max-width:-moz-fit-content;max-width:fit-content;height:40px;color:#fff}.valid-polygon[_ngcontent-%COMP%]{width:0;height:0;border:5px solid transparent;border-top:0;border-bottom:6px solid #d73e3e;margin-left:10px}.validation-err[_ngcontent-%COMP%]{border-color:#d73e3e}\"] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGeneratorComponent, [{\n            type: Component,\n            args: [{ selector: 'lib-form-generator', template: \"<div class=\\\"alert alert-success py-3\\\" role=\\\"alert\\\"\\n     *ngIf=\\\"showSuccessMessage\\\">\\n  <div class=\\\"d-flex justify-content-between\\\">\\n    <div class=\\\"d-flex pb-1\\\">\\n      <span class=\\\"material-icons-outlined\\\">\\n        info\\n      </span>\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-close d-flex\\\" data-bs-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"\\n            (click)=\\\"closeSuccessMessage()\\\"></button>\\n  </div>\\n  <p class=\\\"my-0\\\"> {{'successMsg' | translate}}</p>\\n</div>\\n\\n\\n<div class=\\\"\\\" *ngIf=\\\"jsonForm?.generalInfo && !showSuccessMessage\\\">\\n  <p [innerHTML]=\\\"getTextLang(jsonForm?.generalInfo?.description) | sanitize\\\"></p>\\n</div>\\n\\n<div *ngIf=\\\"!showSuccessMessage && formAnswers?.name && formAnswers?.created && formAnswers?.personal_code\\\">\\n  <h2>{{'lastSubmitted' | translate}}</h2>\\n  <div>\\n    <p class=\\\"my-0\\\">\\n      {{'person' | translate}}\\n    </p>\\n    <p>{{formAnswers?.name}} ({{formAnswers?.personal_code}})</p>\\n\\n    <p class=\\\"my-0\\\">\\n      {{'submitTime' | translate}}\\n    </p>\\n    <p>{{formAnswers?.created | date:'dd.MM.yyyy HH:mm'}}</p>\\n  </div>\\n</div>\\n\\n\\n<form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onFormSubmit()\\\" *ngIf=\\\"!showSuccessMessage\\\">\\n  <div *ngFor=\\\"let section of jsonForm?.sections; let indexOfSection=index\\\" class=\\\"form-sections\\\">\\n    <h2 class=\\\"my-4\\\">{{getTextLang(section?.title)}}</h2>\\n    <div class=\\\"px-lg-4\\\" *ngFor=\\\"let question of section?.questions; let indexOfQuestion=index\\\">\\n\\n      <div class=\\\"my-3\\\">\\n        <p class=\\\"my-0 question-text\\\" id=\\\"{{question?.id}}\\\">{{getTextLang(question?.title)}} <span *ngIf=\\\"question?.required\\\"\\n                                                                                                   class=\\\"question-required\\\">*</span></p>\\n        <p *ngIf=\\\"question?.description\\\"\\n           class=\\\"my-0 px-lg-4 question-description\\\">{{getTextLang(question?.description)}}</p>\\n      </div>\\n\\n      <div *ngIf=\\\"question?.type == QuestionType.RADIO\\\">\\n        <div class=\\\"form-check\\\" *ngFor=\\\"let field of question?.fields;let indexOfField=index\\\">\\n          <div class=\\\"my-2 px-lg-4\\\">\\n            <input [ngClass]='{\\\"validation-err\\\": isSubmitted && getIfError(question?.id)}' class=\\\"form-check-input\\\"\\n                   type=\\\"radio\\\" value=\\\"{{field?.value}}\\\" id=\\\"{{question?.id+indexOfField}}\\\"\\n                   formControlName=\\\"{{question?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"{{question?.id+indexOfField}}\\\">\\n              {{getTextLang(field?.title)}}\\n            </label>\\n          </div>\\n          <div *ngFor=\\\"let extraField of field?.fields\\\">\\n            <div class=\\\"form-group\\\" *ngIf=\\\"showCommentFieldRadio(question?.id, field?.value, extraField?.id)\\\">\\n              <div *ngIf=\\\"extraField?.type == FieldType.TEXTAREA\\\">\\n                <label for=\\\"{{extraField?.id}}\\\">{{getTextLang(extraField?.title)}}</label>\\n                <textarea class=\\\"form-control\\\"\\n                          placeholder=\\\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"\\n                          maxlength=\\\"{{extraField?.maxLength}}\\\"\\n                          [ngClass]='{\\\"validation-err\\\": isSubmitted && getIfErrorRequiredField(extraField?.id)}'\\n                          id=\\\"{{extraField?.id}}\\\" formControlName=\\\"{{extraField?.id}}\\\"\\n                          rows=\\\"{{extraField?.rows}}\\\"></textarea>\\n              </div>\\n\\n              <div *ngIf=\\\"extraField?.type == FieldType.EMAIL\\\">\\n                <label for=\\\"{{extraField?.id}}\\\"> {{getTextLang(extraField?.title)}}</label>\\n                <input\\n                  [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(extraField?.id) || getIfInvalidEmail(extraField?.id))}'\\n                  type=\\\"email\\\" placeholder=\\\"email@email.com\\\" class=\\\"form-control\\\" id=\\\"{{extraField?.id}}\\\"\\n                  formControlName=\\\"{{extraField?.id}}\\\"\\n                  maxlength=\\\"{{extraField?.maxLength}}\\\">\\n\\n                <div *ngIf=\\\"isSubmitted && getIfInvalidEmail(extraField?.id)\\\">\\n                  <div class=\\\"valid-polygon\\\"></div>\\n                  <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                    {{'correctEmail' | translate}}\\n                  </div>\\n\\n                </div>\\n                <div *ngIf=\\\"isSubmitted && getIfErrorRequiredField(extraField?.id)\\\">\\n                  <div class=\\\"valid-polygon\\\"></div>\\n                  <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                    {{'mandatoryField' | translate}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(question?.id)\\\">\\n          <div class=\\\"valid-polygon\\\"></div>\\n          <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n            {{'mandatoryField' | translate}}\\n          </div>\\n\\n        </div>\\n\\n        <div *ngFor=\\\"let secondQuestion of question?.questions; let indexOfInnerQuestion=index\\\">\\n          <div *ngIf=\\\"makeQuestionVisible(question, secondQuestion)\\\">\\n            <div class=\\\"my-3\\\">\\n              <p class=\\\"my-0 question-text\\\" id=\\\"{{secondQuestion?.id}}\\\">{{getTextLang(secondQuestion?.title)}} <span\\n                *ngIf=\\\"secondQuestion?.required\\\" class=\\\"question-required\\\">*</span></p>\\n              <p *ngIf=\\\"secondQuestion?.description\\\"\\n                 class=\\\"my-0 px-lg-4 question-description\\\">{{getTextLang(secondQuestion?.description)}}</p>\\n            </div>\\n\\n            <div *ngIf=\\\"secondQuestion?.type == QuestionType.RADIO\\\">\\n              <div class=\\\"form-check\\\" *ngFor=\\\"let field of secondQuestion?.fields;let indexOfField=index\\\">\\n                <div class=\\\"my-2 px-lg-4\\\">\\n                  <input [ngClass]='{\\\"validation-err\\\": isSubmitted && getIfError(secondQuestion?.id)}'\\n                         class=\\\"form-check-input\\\" type=\\\"radio\\\" id=\\\"{{secondQuestion?.id+indexOfField}}\\\"\\n                         value=\\\"{{field?.value}}\\\" formControlName=\\\"{{secondQuestion?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"{{secondQuestion?.id+indexOfField}}\\\">\\n                    {{getTextLang(field?.title)}}\\n                  </label>\\n                </div>\\n                <div *ngFor=\\\"let extraField of field?.fields\\\">\\n                  <div class=\\\"form-group\\\"\\n                       *ngIf=\\\"showCommentFieldRadio(secondQuestion?.id, field?.value, extraField?.id)\\\">\\n                    <div *ngIf=\\\"extraField?.type == FieldType.TEXTAREA\\\">\\n                      <label for=\\\"{{extraField?.id}}\\\">{{getTextLang(extraField?.title)}}</label>\\n                      <textarea [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\\n                                class=\\\"form-control\\\" id=\\\"{{extraField?.id}}\\\" formControlName=\\\"{{extraField?.id}}\\\"\\n                                maxlength=\\\"{{extraField?.maxLength}}\\\"\\n                                rows=\\\"{{extraField?.rows}}\\\"\\n                                placeholder=\\\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n                    </div>\\n\\n                    <div *ngIf=\\\"extraField?.type == FieldType.EMAIL\\\">\\n                      <label for=\\\"{{extraField?.id}}\\\"> {{getTextLang(extraField?.title)}}</label>\\n                      <input\\n                        [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(extraField?.id) || getIfInvalidEmail(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\\n                        type=\\\"email\\\"\\n                        class=\\\"form-control\\\" placeholder=\\\"email@email.com\\\" id=\\\"{{extraField?.id}}\\\"\\n                        formControlName=\\\"{{extraField?.id}}\\\" maxlength=\\\"{{extraField?.maxLength}}\\\">\\n\\n                      <div *ngIf=\\\"isSubmitted && getIfInvalidEmail(extraField?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'correctEmail' | translate}}\\n                        </div>\\n                      </div>\\n                      <div *ngIf=\\\"isSubmitted && getIfErrorRequiredField(extraField?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'mandatoryField' | translate}}\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n              </div>\\n              <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(secondQuestion?.id)\\\">\\n                <div class=\\\"valid-polygon\\\"></div>\\n                <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                  {{'mandatoryField' | translate}}\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"secondQuestion.type == QuestionType.TEXTINPUT\\\">\\n              <div class=\\\"form-check\\\" *ngFor=\\\"let field of secondQuestion?.fields\\\">\\n                <textarea [ngClass]='{\\\"validation-err\\\": isSubmitted &&  (getIfError(secondQuestion?.id) || getIfFieldInvalid(secondQuestion?.id))}'\\n                          class=\\\"form-control\\\" id=\\\"{{secondQuestion?.id}}\\\" formControlName=\\\"{{secondQuestion?.id}}\\\"\\n                          maxlength=\\\"{{field?.maxLength}}\\\"\\n                          rows=\\\"{{field?.rows}}\\\"\\n                          placeholder=\\\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n              </div>\\n              <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted &&  getIfError(secondQuestion?.id)\\\">\\n                <div class=\\\"valid-polygon\\\"></div>\\n                <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                  {{'mandatoryField' | translate}}\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"secondQuestion?.type == QuestionType.FIELDSET\\\">\\n              <div *ngFor=\\\"let field of secondQuestion?.fields\\\">\\n                <div class=\\\"px-lg-4 my-2\\\">\\n                  <div class=\\\"form-check\\\" *ngIf=\\\"field?.type == FieldType.CHECKBOX\\\"\\n                       formGroupName=\\\"{{secondQuestion?.id}}\\\">\\n                    <input [ngClass]='{\\\"validation-err\\\": isSubmitted &&  getIfError(secondQuestion?.id, null, true)}'\\n                           class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"{{field?.id}}\\\" value=\\\"checked\\\"\\n                           formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                    <label class=\\\"form-check-label\\\" for=\\\"{{field?.id}}\\\">\\n                      {{getTextLang(field?.title)}}\\n                    </label>\\n                  </div>\\n                  <div *ngFor=\\\"let extraField of field?.fields\\\">\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"showCommentField(secondQuestion?.id, field?.id, extraField?.id)\\\">\\n                      <div *ngIf=\\\"extraField?.type == FieldType.TEXTAREA\\\">\\n                        <label for=\\\"{{extraField?.id}}\\\">{{getTextLang(extraField?.title)}}</label>\\n                        <textarea [ngClass]='{\\\"validation-err\\\": isSubmitted &&  (getIfErrorRequiredField(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\\n                                  class=\\\"form-control\\\" id=\\\"{{extraField?.id}}\\\" formControlName=\\\"{{extraField?.id}}\\\"\\n                                  maxlength=\\\"{{extraField?.maxLength}}\\\"\\n                                  rows=\\\"{{extraField?.rows}}\\\"\\n                                  placeholder=\\\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.STRING\\\">\\n                    <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n                    <div class=\\\"input-group\\\">\\n                      <span *ngIf=\\\"field?.prefix\\\" class=\\\"input-group-text\\\">{{field?.prefix}}</span>\\n                      <input [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfFieldInvalid(field?.id))}' type=\\\"text\\\"\\n                             class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                    </div>\\n                    <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfErrorRequiredField(field?.id)\\\">\\n                      <div class=\\\"valid-polygon\\\"></div>\\n                      <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                        {{'mandatoryField' | translate}}\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.NUMBER\\\">\\n                    <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n                    <div class=\\\"input-group\\\">\\n                      <span *ngIf=\\\"field?.prefix\\\" class=\\\"input-group-text\\\">{{field?.prefix}}</span>\\n                      <input\\n                        [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidNumber(field?.id) || getIfFieldInvalid(field?.id))}'\\n                        type=\\\"text\\\"\\n                        class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                    </div>\\n                    <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfInvalidNumber(field?.id)\\\">\\n                      <div class=\\\"valid-polygon\\\"></div>\\n                      <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                        {{'correctNumber' | translate}}\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfErrorRequiredField(field?.id)\\\">\\n                      <div class=\\\"valid-polygon\\\"></div>\\n                      <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                        {{'mandatoryField' | translate}}\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.EMAIL\\\">\\n                    <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n                    <input\\n                      [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidEmail(field?.id) || getIfFieldInvalid(field?.id))}'\\n                      type=\\\"email\\\"\\n                      class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\"\\n                      placeholder=\\\"email@email.com\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n\\n                    <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfInvalidEmail(field?.id)\\\">\\n                      <div class=\\\"valid-polygon\\\"></div>\\n                      <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                        {{'correctEmail' | translate}}\\n                      </div>\\n\\n                    </div>\\n                    <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfErrorRequiredField(field?.id)\\\">\\n                      <div class=\\\"valid-polygon\\\"></div>\\n                      <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                        {{'mandatoryField' | translate}}\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(secondQuestion?.id, null, true)\\\">\\n                <div class=\\\"valid-polygon\\\"></div>\\n                <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                  {{'mandatoryField' | translate}}\\n                </div>\\n              </div>\\n            </div>\\n\\n\\n            <div *ngFor=\\\"let thirdQuestion of secondQuestion?.questions; let indexOfThirdInnerQuestion=index\\\">\\n              <div *ngIf=\\\"makeQuestionVisible(secondQuestion, thirdQuestion)\\\">\\n\\n                <div class=\\\"my-3\\\">\\n                  <p class=\\\"my-0 question-text\\\" id=\\\"{{thirdQuestion?.id}}\\\">{{getTextLang(thirdQuestion?.title)}} <span\\n                    *ngIf=\\\"thirdQuestion?.required\\\" class=\\\"question-required\\\">*</span></p>\\n                  <p *ngIf=\\\"thirdQuestion?.description\\\"\\n                     class=\\\"my-0 px-lg-4 question-description\\\">{{getTextLang(thirdQuestion?.description)}}</p>\\n                </div>\\n\\n\\n                <div *ngIf=\\\"thirdQuestion?.type == QuestionType.RADIO\\\">\\n                  <div class=\\\"form-check\\\" *ngFor=\\\"let field of thirdQuestion?.fields;let indexOfField=index\\\">\\n                    <div class=\\\"px-lg-4 my-2\\\">\\n                      <input [ngClass]='{\\\"validation-err\\\": isSubmitted && getIfError(thirdQuestion?.id)}'\\n                             class=\\\"form-check-input\\\" type=\\\"radio\\\" id=\\\"{{thirdQuestion?.id+indexOfField}}\\\"\\n                             value=\\\"{{field?.value}}\\\" formControlName=\\\"{{thirdQuestion?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"{{thirdQuestion?.id+indexOfField}}\\\">\\n                        {{getTextLang(field?.title)}}\\n                      </label>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(thirdQuestion?.id)\\\">\\n                    <div class=\\\"valid-polygon\\\"></div>\\n                    <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                      {{'mandatoryField' | translate}}\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"thirdQuestion?.type == QuestionType.TEXTINPUT\\\">\\n                  <div class=\\\"form-check\\\" *ngFor=\\\"let field of thirdQuestion?.fields\\\">\\n                    <textarea [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(thirdQuestion?.id) || getIfFieldInvalid(thirdQuestion?.id))}'\\n                              class=\\\"form-control\\\" id=\\\"{{thirdQuestion?.id}}\\\" formControlName=\\\"{{thirdQuestion?.id}}\\\"\\n                              maxlength=\\\"{{field?.maxLength}}\\\"\\n                              rows=\\\"{{field?.rows}}\\\"\\n                              placeholder=\\\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n                  </div>\\n                  <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(thirdQuestion?.id)\\\">\\n                    <div class=\\\"valid-polygon\\\"></div>\\n                    <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                      {{'mandatoryField' | translate}}\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n                <div *ngIf=\\\"thirdQuestion?.type == QuestionType.FIELDSET\\\">\\n                  <div *ngFor=\\\"let field of thirdQuestion?.fields\\\">\\n                    <div class=\\\"form-check\\\" *ngIf=\\\"field?.type == FieldType.CHECKBOX\\\"\\n                         formGroupName=\\\"{{thirdQuestion?.id}}\\\">\\n                      <input [ngClass]='{\\\"validation-err\\\": isSubmitted && getIfError(thirdQuestion?.id, null, true)}'\\n                             class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"{{field?.id}}\\\" value=\\\"checked\\\"\\n                             formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                      <label class=\\\"form-check-label\\\" for=\\\"{{field?.id}}\\\">\\n                        {{getTextLang(field?.title)}}\\n                      </label>\\n                    </div>\\n                    <div *ngFor=\\\"let extraField of field?.fields\\\">\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"showCommentField(thirdQuestion?.id, field?.id, extraField?.id)\\\">\\n                        <div *ngIf=\\\"extraField?.type == FieldType.TEXTAREA\\\">\\n                          <label for=\\\"{{extraField?.id}}\\\">{{getTextLang(extraField?.title)}}</label>\\n                          <textarea\\n                            [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(thirdQuestion?.id, thirdQuestion?.fields) || getIfFieldInvalid(thirdQuestion?.id))}'\\n                            class=\\\"form-control\\\" id=\\\"{{extraField?.id}}\\\" formControlName=\\\"{{extraField?.id}}\\\" maxlength=\\\"{{extraField?.maxLength}}\\\"\\n                            rows=\\\"{{extraField?.rows}}\\\"\\n                            placeholder=\\\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.STRING\\\">\\n                      <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n\\n                      <div class=\\\"input-group\\\">\\n                        <span *ngIf=\\\"field?.prefix\\\" class=\\\"input-group-text\\\">{{field?.prefix}}</span>\\n                        <input\\n                          [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(thirdQuestion?.id, thirdQuestion?.fields) || getIfFieldInvalid(thirdQuestion?.id))}'\\n                          type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.NUMBER\\\">\\n                      <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n                      <div class=\\\"input-group\\\">\\n                        <span *ngIf=\\\"field?.prefix\\\" class=\\\"input-group-text\\\">{{field?.prefix}}</span>\\n                        <input\\n                          [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidNumber(field?.id) || getIfFieldInvalid(field?.id))}'\\n                          type=\\\"text\\\"\\n                          class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n                      </div>\\n                      <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfInvalidNumber(field?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'correctNumber' | translate}}\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"\\\" *ngIf=\\\"isSubmitted && getIfErrorRequiredField(field?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'mandatoryField' | translate}}\\n                        </div>\\n\\n                      </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"field?.type == FieldType.EMAIL\\\">\\n                      <label for=\\\"{{field?.id}}\\\"> {{getTextLang(field?.title)}}</label>\\n                      <input\\n                        [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidEmail(field?.id) || getIfFieldInvalid(field?.id))}'\\n                        type=\\\"email\\\" placeholder=\\\"email@email.com\\\" class=\\\"form-control\\\" id=\\\"{{field?.id}}\\\"\\n                        formControlName=\\\"{{field?.id}}\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n\\n\\n                      <div *ngIf=\\\"isSubmitted && getIfInvalidEmail(field?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'correctEmail' | translate}}\\n                        </div>\\n\\n                      </div>\\n                      <div *ngIf=\\\"isSubmitted && getIfErrorRequiredField(field?.id)\\\">\\n                        <div class=\\\"valid-polygon\\\"></div>\\n                        <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                          {{'mandatoryField' | translate}}\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                  <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(thirdQuestion?.id, thirdQuestion?.fields)\\\">\\n                    <div class=\\\"valid-polygon\\\"></div>\\n                    <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n                      {{'mandatoryField' | translate}}\\n                    </div>\\n\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n\\n\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"question?.type == QuestionType.FIELDSET\\\">\\n        <div *ngFor=\\\"let field of question?.fields\\\">\\n          <div class=\\\"px-lg-4\\\" *ngIf=\\\"field?.type == FieldType.CHECKBOX\\\">\\n            <div class=\\\"form-check\\\" formGroupName=\\\"{{question?.id}}\\\">\\n              <input class=\\\"form-check-input\\\" [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(question?.id, null, true) || getIfFieldInvalid(question?.id))}'\\n                     type=\\\"checkbox\\\" id=\\\"{{field?.id}}\\\" formControlName=\\\"{{field?.id}}\\\" id=\\\"flexCheckDefault\\\" maxlength=\\\"{{field?.maxLength}}\\\">\\n              <label class=\\\"form-check-label\\\" for=\\\"{{field?.id}}\\\">\\n                {{getTextLang(field?.title)}}\\n              </label>\\n            </div>\\n            <div *ngFor=\\\"let extraField of field?.fields\\\">\\n              <div class=\\\"form-group\\\" *ngIf=\\\"showCommentField(question?.id, field?.id, extraField?.id)\\\">\\n                <div *ngIf=\\\"extraField?.type == FieldType.TEXTAREA\\\">\\n                  <label for=\\\"{{extraField?.id}}\\\">{{getTextLang(extraField?.title)}}</label>\\n                  <textarea [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfFieldInvalid(field?.id) || getIfFieldInvalid(field?.id))}'\\n                            class=\\\"form-control\\\" id=\\\"{{extraField?.id}}\\\" formControlName=\\\"{{extraField?.id}}\\\"\\n                            maxlength=\\\"{{extraField?.maxLength}}\\\"\\n                            rows=\\\"{{extraField?.rows}}\\\"\\n                            placeholder=\\\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\"></textarea>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(question?.id, null, true)\\\">\\n          <div class=\\\"valid-polygon\\\"></div>\\n          <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n            {{'mandatoryField' | translate}}\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n\\n      <div *ngIf=\\\"question?.type == QuestionType.TEXTINPUT\\\">\\n        <div class=\\\"form-check\\\" *ngFor=\\\"let field of question?.fields\\\">\\n          <textarea placeholder=\\\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\\\" [ngClass]='{\\\"validation-err\\\": isSubmitted && (getIfError(question?.id) || getIfFieldInvalid(question?.id))}' class=\\\"form-control\\\"\\n                    id=\\\"{{question?.id}}\\\" formControlName=\\\"{{question?.id}}\\\" rows=\\\"{{field?.rows}}\\\" maxlength=\\\"{{field?.maxLength}}\\\"></textarea>\\n        </div>\\n        <div class=\\\"px-lg-4\\\" *ngIf=\\\"isSubmitted && getIfError(question?.id)\\\">\\n          <div class=\\\"valid-polygon\\\"></div>\\n          <div class=\\\"p-3 form-validation-msg d-flex align-items-center justify-content-center\\\">\\n            {{'mandatoryField' | translate}}\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <hr class=\\\"form-separator\\\">\\n\\n  <div class=\\\"alert alert-danger py-3\\\" role=\\\"alert\\\"\\n       *ngIf=\\\"showErrorMessage\\\">\\n    <div class=\\\"d-flex justify-content-between\\\">\\n      <div class=\\\"d-flex pb-1\\\">\\n      <span class=\\\"material-icons-outlined\\\">\\n        info\\n      </span>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-close d-flex\\\" data-bs-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"\\n              (click)=\\\"closeErrorMessage()\\\"></button>\\n    </div>\\n    <p class=\\\"my-0\\\">{{'errorMsg' | translate}}</p>\\n  </div>\\n\\n  <div class=\\\"d-flex flex-md-row flex-column-reverse justify-content-between\\\">\\n    <div class=\\\"py-1\\\">\\n      <button class=\\\"form-cancel-button w-100\\\" type=\\\"button\\\" (click)=\\\"openModal()\\\">{{'close' | translate}}</button>\\n    </div>\\n    <div class=\\\"py-1\\\">\\n      <button class=\\\"form-submit-button w-100\\\" type=\\\"submit\\\">{{'sendForm' | translate}}</button>\\n    </div>\\n  </div>\\n</form>\\n\\n\\n\\n\", styles: [\".question-text{font-weight:600;font-size:16px;line-height:24px;color:#09090b}.question-description{color:#9799a4;font-size:14px}.question-required{color:#d73e3e}.form-sections{font-family:Roboto}.form-separator{border:1px solid #8bb4d5}.form-cancel-button{border-radius:22px;background:#ffffff;padding:0 32px;gap:8px;width:113px;height:40px}.form-submit-button{background:#005aa3;border-radius:22px;border:none;padding:0 32px;gap:8px;color:#fff;width:113px;height:40px}.form-validation-msg{background:#d73e3e;border-radius:4px;min-width:183px;max-width:-moz-fit-content;max-width:fit-content;height:40px;color:#fff}.valid-polygon{width:0;height:0;border:5px solid transparent;border-top:0;border-bottom:6px solid #d73e3e;margin-left:10px}.validation-err{border-color:#d73e3e}\\n\"] }]\n        }], function () { return [{ type: i1.FormBuilder }]; }, { form: [{\n                type: Input\n            }], answers: [{\n                type: Input\n            }], language: [{\n                type: Input\n            }], error: [{\n                type: Input\n            }], success: [{\n                type: Input\n            }], toggleCancel: [{\n                type: Output\n            }], answersForm: [{\n                type: Output\n            }] });\n})();\n\nclass FormGeneratorModule {\n}\nFormGeneratorModule.ɵfac = function FormGeneratorModule_Factory(t) { return new (t || FormGeneratorModule)(); };\nFormGeneratorModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FormGeneratorModule });\nFormGeneratorModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [TranslatePipe], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule] });\n(function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormGeneratorModule, [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        FormGeneratorComponent,\n                        TranslatePipe,\n                        SanitizePipe\n                    ],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule\n                    ],\n                    providers: [TranslatePipe],\n                    exports: [\n                        FormGeneratorComponent\n                    ]\n                }]\n        }], null, null);\n})();\n(function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(FormGeneratorModule, { declarations: [FormGeneratorComponent,\n            TranslatePipe,\n            SanitizePipe], imports: [CommonModule,\n            FormsModule,\n            ReactiveFormsModule], exports: [FormGeneratorComponent] });\n})();\n\n/*\n * Public API Surface of form-generator\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormGeneratorComponent, FormGeneratorModule, FormGeneratorService };\n//# sourceMappingURL=ria-stateportal-form-generator.mjs.map\n","map":{"version":3,"file":"ria-stateportal-form-generator.mjs","sources":["../../../../projects/ria/form-generator/src/lib/form-generator.service.ts","../../../../projects/ria/form-generator/src/lib/jsonform.model.ts","../../../../projects/ria/form-generator/src/lib/atLeastOneCheckboxCheckedValidator.ts","../../../../projects/ria/form-generator/src/lib/common/validation.util.ts","../../../../projects/ria/form-generator/src/lib/common/translate.pipe.ts","../../../../projects/ria/form-generator/src/lib/common/sanitize.pipe.ts","../../../../projects/ria/form-generator/src/lib/form-generator.component.html","../../../../projects/ria/form-generator/src/lib/form-generator.component.ts","../../../../projects/ria/form-generator/src/lib/form-generator.module.ts","../../../../projects/ria/form-generator/src/public-api.ts","../../../../projects/ria/form-generator/src/ria-stateportal-form-generator.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormGeneratorService {\n\n  constructor() {\n  }\n}\n","export interface JsonForm {\n  id: string;\n  title: Text;\n  generalInfo: GeneralInfo;\n\n  version?: number;\n\n  sections: Section[];\n  createdBy: string;\n  createdAt: string;\n  updatedBy: string;\n  updatedAt: string;\n  deletedBy: string;\n  deletedAt: string;\n\n}\n\nexport interface GeneralInfo {\n  title: Text;\n  description: Text;\n}\n\n\nexport interface Section {\n  id: string;\n  title: Text;\n  description?: Text;\n  questions: Question[];\n}\n\nexport interface Question {\n  id: string;\n  title: Text;\n  description?: Text;\n  type?: string;\n  required?: boolean;\n  enteredValue?: any;\n  fields?: Field[];\n  questions?: Question [];\n}\n\nexport interface Field {\n  id?: string;\n  title?: Text;\n  description?: Text;\n  prefix?: string;\n  suffix?: string;\n  type?: string;\n  required?: boolean;\n  enteredValue?: any;\n  value?: string;\n  fields?: Field[];\n  rows?: number;\n  maxLength?: number;\n  makeVisible?: string [];\n}\n\nexport interface Text {\n  et?: string;\n  en?: string;\n  ru?: string;\n}\n\nexport enum QuestionType {\n  RADIO = 'radio',\n  FIELDSET = 'fieldset',\n  CHECKBOX = 'checkbox',\n  TEXTAREA = 'textarea',\n  TEXTINPUT = 'textinput'\n}\n\nexport enum FieldType {\n  NUMBER = 'number',\n  STRING = 'string',\n  EMAIL = 'email',\n  DATE = 'date',\n  CHECKBOX = 'checkbox',\n  TEXTAREA = 'textarea'\n}\n","import { FormGroup, ValidatorFn } from \"@angular/forms\";\n\nexport function atLeastOneCheckboxCheckedValidator(minRequired = 1): ValidatorFn {\n  return function validate(formGroup: FormGroup) {\n    let checked = 0;\n\n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.controls[key];\n\n      if (control.value === true) {\n        checked++;\n      }\n    });\n\n    if (checked < minRequired) {\n      return {\n        requireCheckboxToBeChecked: true,\n      };\n    }\n\n    return null;\n  };\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class CustomValidation {\n\n  static email(): ValidatorFn {\n    return (control: AbstractControl): { [p: string]: any } | null => {\n      const value = control.value?.trim();\n      const regex = new RegExp(/^(?!\\.)((?!.*\\.{2})[a-zA-Z0-9\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF\\.!#$%&'*+-/=?^_`{|}~\\-\\d]+)@(?!\\.)([a-zA-Z0-9\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF\\-\\.\\d]+)((\\.([a-zA-Z\\u0080-\\u00FF\\u0100-\\u017F\\u0180-\\u024F\\u0250-\\u02AF\\u0300-\\u036F\\u0370-\\u03FF\\u0400-\\u04FF\\u0500-\\u052F\\u0530-\\u058F\\u0590-\\u05FF\\u0600-\\u06FF\\u0700-\\u074F\\u0750-\\u077F\\u0780-\\u07BF\\u07C0-\\u07FF\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0D80-\\u0DFF\\u0E00-\\u0E7F\\u0E80-\\u0EFF\\u0F00-\\u0FFF\\u1000-\\u109F\\u10A0-\\u10FF\\u1100-\\u11FF\\u1200-\\u137F\\u1380-\\u139F\\u13A0-\\u13FF\\u1400-\\u167F\\u1680-\\u169F\\u16A0-\\u16FF\\u1700-\\u171F\\u1720-\\u173F\\u1740-\\u175F\\u1760-\\u177F\\u1780-\\u17FF\\u1800-\\u18AF\\u1900-\\u194F\\u1950-\\u197F\\u1980-\\u19DF\\u19E0-\\u19FF\\u1A00-\\u1A1F\\u1B00-\\u1B7F\\u1D00-\\u1D7F\\u1D80-\\u1DBF\\u1DC0-\\u1DFF\\u1E00-\\u1EFF\\u1F00-\\u1FFF\\u20D0-\\u20FF\\u2100-\\u214F\\u2C00-\\u2C5F\\u2C60-\\u2C7F\\u2C80-\\u2CFF\\u2D00-\\u2D2F\\u2D30-\\u2D7F\\u2D80-\\u2DDF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3040-\\u309F\\u30A0-\\u30FF\\u3100-\\u312F\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3200-\\u32FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4DC0-\\u4DFF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uA700-\\uA71F\\uA800-\\uA82F\\uA840-\\uA87F\\uAC00-\\uD7AF\\uF900-\\uFAFF]){2,63})+)$/i);\n      const valid = regex.test(value);\n      return valid ? null : { email: true };\n    };\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport et from '../assets/et.json'\n\n@Pipe({\n  name: 'translate',\n  pure: false // required to update the value when the promise is resolved\n})\nexport class TranslatePipe implements PipeTransform {\n\n  constructor() {}\n\n  transform(code: string, params?: { [key: string]: string | number | undefined }): string {\n    let messages: { [key: string]: string } = {};\n    messages = et as { [key: string]: string };\n    return this.replaceParams(messages[code], params) ?? code;\n  }\n\n  replaceParams(text: string, params?: { [key: string]: string | number | undefined }): string | undefined {\n    if (!text || !params || !Object.keys(params)?.length) {\n      return text;\n    }\n\n    const keys = Object.keys(params);\n    keys.forEach(key => {\n      text = text.replace(`{{${key}}}`, (params[key] || '').toString());\n    });\n\n    return text;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport DOMPurify from 'dompurify';\n@Pipe({\n  name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n\n  constructor() {\n  }\n\n  transform(value: string): string {\n    return DOMPurify.sanitize(value, {USE_PROFILES: {html: true}, FORBID_ATTR: ['class']})\n  }\n}\n","<div class=\"alert alert-success py-3\" role=\"alert\"\n     *ngIf=\"showSuccessMessage\">\n  <div class=\"d-flex justify-content-between\">\n    <div class=\"d-flex pb-1\">\n      <span class=\"material-icons-outlined\">\n        info\n      </span>\n    </div>\n    <button type=\"button\" class=\"btn btn-close d-flex\" data-bs-dismiss=\"alert\" aria-label=\"Close\"\n            (click)=\"closeSuccessMessage()\"></button>\n  </div>\n  <p class=\"my-0\"> {{'successMsg' | translate}}</p>\n</div>\n\n\n<div class=\"\" *ngIf=\"jsonForm?.generalInfo && !showSuccessMessage\">\n  <p [innerHTML]=\"getTextLang(jsonForm?.generalInfo?.description) | sanitize\"></p>\n</div>\n\n<div *ngIf=\"!showSuccessMessage && formAnswers?.name && formAnswers?.created && formAnswers?.personal_code\">\n  <h2>{{'lastSubmitted' | translate}}</h2>\n  <div>\n    <p class=\"my-0\">\n      {{'person' | translate}}\n    </p>\n    <p>{{formAnswers?.name}} ({{formAnswers?.personal_code}})</p>\n\n    <p class=\"my-0\">\n      {{'submitTime' | translate}}\n    </p>\n    <p>{{formAnswers?.created | date:'dd.MM.yyyy HH:mm'}}</p>\n  </div>\n</div>\n\n\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"onFormSubmit()\" *ngIf=\"!showSuccessMessage\">\n  <div *ngFor=\"let section of jsonForm?.sections; let indexOfSection=index\" class=\"form-sections\">\n    <h2 class=\"my-4\">{{getTextLang(section?.title)}}</h2>\n    <div class=\"px-lg-4\" *ngFor=\"let question of section?.questions; let indexOfQuestion=index\">\n\n      <div class=\"my-3\">\n        <p class=\"my-0 question-text\" id=\"{{question?.id}}\">{{getTextLang(question?.title)}} <span *ngIf=\"question?.required\"\n                                                                                                   class=\"question-required\">*</span></p>\n        <p *ngIf=\"question?.description\"\n           class=\"my-0 px-lg-4 question-description\">{{getTextLang(question?.description)}}</p>\n      </div>\n\n      <div *ngIf=\"question?.type == QuestionType.RADIO\">\n        <div class=\"form-check\" *ngFor=\"let field of question?.fields;let indexOfField=index\">\n          <div class=\"my-2 px-lg-4\">\n            <input [ngClass]='{\"validation-err\": isSubmitted && getIfError(question?.id)}' class=\"form-check-input\"\n                   type=\"radio\" value=\"{{field?.value}}\" id=\"{{question?.id+indexOfField}}\"\n                   formControlName=\"{{question?.id}}\" maxlength=\"{{field?.maxLength}}\">\n            <label class=\"form-check-label\" for=\"{{question?.id+indexOfField}}\">\n              {{getTextLang(field?.title)}}\n            </label>\n          </div>\n          <div *ngFor=\"let extraField of field?.fields\">\n            <div class=\"form-group\" *ngIf=\"showCommentFieldRadio(question?.id, field?.value, extraField?.id)\">\n              <div *ngIf=\"extraField?.type == FieldType.TEXTAREA\">\n                <label for=\"{{extraField?.id}}\">{{getTextLang(extraField?.title)}}</label>\n                <textarea class=\"form-control\"\n                          placeholder=\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\"\n                          maxlength=\"{{extraField?.maxLength}}\"\n                          [ngClass]='{\"validation-err\": isSubmitted && getIfErrorRequiredField(extraField?.id)}'\n                          id=\"{{extraField?.id}}\" formControlName=\"{{extraField?.id}}\"\n                          rows=\"{{extraField?.rows}}\"></textarea>\n              </div>\n\n              <div *ngIf=\"extraField?.type == FieldType.EMAIL\">\n                <label for=\"{{extraField?.id}}\"> {{getTextLang(extraField?.title)}}</label>\n                <input\n                  [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(extraField?.id) || getIfInvalidEmail(extraField?.id))}'\n                  type=\"email\" placeholder=\"email@email.com\" class=\"form-control\" id=\"{{extraField?.id}}\"\n                  formControlName=\"{{extraField?.id}}\"\n                  maxlength=\"{{extraField?.maxLength}}\">\n\n                <div *ngIf=\"isSubmitted && getIfInvalidEmail(extraField?.id)\">\n                  <div class=\"valid-polygon\"></div>\n                  <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                    {{'correctEmail' | translate}}\n                  </div>\n\n                </div>\n                <div *ngIf=\"isSubmitted && getIfErrorRequiredField(extraField?.id)\">\n                  <div class=\"valid-polygon\"></div>\n                  <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                    {{'mandatoryField' | translate}}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(question?.id)\">\n          <div class=\"valid-polygon\"></div>\n          <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n            {{'mandatoryField' | translate}}\n          </div>\n\n        </div>\n\n        <div *ngFor=\"let secondQuestion of question?.questions; let indexOfInnerQuestion=index\">\n          <div *ngIf=\"makeQuestionVisible(question, secondQuestion)\">\n            <div class=\"my-3\">\n              <p class=\"my-0 question-text\" id=\"{{secondQuestion?.id}}\">{{getTextLang(secondQuestion?.title)}} <span\n                *ngIf=\"secondQuestion?.required\" class=\"question-required\">*</span></p>\n              <p *ngIf=\"secondQuestion?.description\"\n                 class=\"my-0 px-lg-4 question-description\">{{getTextLang(secondQuestion?.description)}}</p>\n            </div>\n\n            <div *ngIf=\"secondQuestion?.type == QuestionType.RADIO\">\n              <div class=\"form-check\" *ngFor=\"let field of secondQuestion?.fields;let indexOfField=index\">\n                <div class=\"my-2 px-lg-4\">\n                  <input [ngClass]='{\"validation-err\": isSubmitted && getIfError(secondQuestion?.id)}'\n                         class=\"form-check-input\" type=\"radio\" id=\"{{secondQuestion?.id+indexOfField}}\"\n                         value=\"{{field?.value}}\" formControlName=\"{{secondQuestion?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                  <label class=\"form-check-label\" for=\"{{secondQuestion?.id+indexOfField}}\">\n                    {{getTextLang(field?.title)}}\n                  </label>\n                </div>\n                <div *ngFor=\"let extraField of field?.fields\">\n                  <div class=\"form-group\"\n                       *ngIf=\"showCommentFieldRadio(secondQuestion?.id, field?.value, extraField?.id)\">\n                    <div *ngIf=\"extraField?.type == FieldType.TEXTAREA\">\n                      <label for=\"{{extraField?.id}}\">{{getTextLang(extraField?.title)}}</label>\n                      <textarea [ngClass]='{\"validation-err\": isSubmitted && (getIfError(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\n                                class=\"form-control\" id=\"{{extraField?.id}}\" formControlName=\"{{extraField?.id}}\"\n                                maxlength=\"{{extraField?.maxLength}}\"\n                                rows=\"{{extraField?.rows}}\"\n                                placeholder=\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n                    </div>\n\n                    <div *ngIf=\"extraField?.type == FieldType.EMAIL\">\n                      <label for=\"{{extraField?.id}}\"> {{getTextLang(extraField?.title)}}</label>\n                      <input\n                        [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(extraField?.id) || getIfInvalidEmail(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\n                        type=\"email\"\n                        class=\"form-control\" placeholder=\"email@email.com\" id=\"{{extraField?.id}}\"\n                        formControlName=\"{{extraField?.id}}\" maxlength=\"{{extraField?.maxLength}}\">\n\n                      <div *ngIf=\"isSubmitted && getIfInvalidEmail(extraField?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'correctEmail' | translate}}\n                        </div>\n                      </div>\n                      <div *ngIf=\"isSubmitted && getIfErrorRequiredField(extraField?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'mandatoryField' | translate}}\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n              <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(secondQuestion?.id)\">\n                <div class=\"valid-polygon\"></div>\n                <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                  {{'mandatoryField' | translate}}\n                </div>\n\n              </div>\n            </div>\n\n            <div *ngIf=\"secondQuestion.type == QuestionType.TEXTINPUT\">\n              <div class=\"form-check\" *ngFor=\"let field of secondQuestion?.fields\">\n                <textarea [ngClass]='{\"validation-err\": isSubmitted &&  (getIfError(secondQuestion?.id) || getIfFieldInvalid(secondQuestion?.id))}'\n                          class=\"form-control\" id=\"{{secondQuestion?.id}}\" formControlName=\"{{secondQuestion?.id}}\"\n                          maxlength=\"{{field?.maxLength}}\"\n                          rows=\"{{field?.rows}}\"\n                          placeholder=\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n              </div>\n              <div class=\"px-lg-4\" *ngIf=\"isSubmitted &&  getIfError(secondQuestion?.id)\">\n                <div class=\"valid-polygon\"></div>\n                <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                  {{'mandatoryField' | translate}}\n                </div>\n\n              </div>\n            </div>\n\n            <div *ngIf=\"secondQuestion?.type == QuestionType.FIELDSET\">\n              <div *ngFor=\"let field of secondQuestion?.fields\">\n                <div class=\"px-lg-4 my-2\">\n                  <div class=\"form-check\" *ngIf=\"field?.type == FieldType.CHECKBOX\"\n                       formGroupName=\"{{secondQuestion?.id}}\">\n                    <input [ngClass]='{\"validation-err\": isSubmitted &&  getIfError(secondQuestion?.id, null, true)}'\n                           class=\"form-check-input\" type=\"checkbox\" id=\"{{field?.id}}\" value=\"checked\"\n                           formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                    <label class=\"form-check-label\" for=\"{{field?.id}}\">\n                      {{getTextLang(field?.title)}}\n                    </label>\n                  </div>\n                  <div *ngFor=\"let extraField of field?.fields\">\n                    <div class=\"form-group\" *ngIf=\"showCommentField(secondQuestion?.id, field?.id, extraField?.id)\">\n                      <div *ngIf=\"extraField?.type == FieldType.TEXTAREA\">\n                        <label for=\"{{extraField?.id}}\">{{getTextLang(extraField?.title)}}</label>\n                        <textarea [ngClass]='{\"validation-err\": isSubmitted &&  (getIfErrorRequiredField(extraField?.id) || getIfFieldInvalid(extraField?.id))}'\n                                  class=\"form-control\" id=\"{{extraField?.id}}\" formControlName=\"{{extraField?.id}}\"\n                                  maxlength=\"{{extraField?.maxLength}}\"\n                                  rows=\"{{extraField?.rows}}\"\n                                  placeholder=\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n                      </div>\n\n                    </div>\n                  </div>\n\n                  <div class=\"form-group\" *ngIf=\"field?.type == FieldType.STRING\">\n                    <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n                    <div class=\"input-group\">\n                      <span *ngIf=\"field?.prefix\" class=\"input-group-text\">{{field?.prefix}}</span>\n                      <input [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfFieldInvalid(field?.id))}' type=\"text\"\n                             class=\"form-control\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                    </div>\n                    <div class=\"\" *ngIf=\"isSubmitted && getIfErrorRequiredField(field?.id)\">\n                      <div class=\"valid-polygon\"></div>\n                      <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                        {{'mandatoryField' | translate}}\n                      </div>\n\n                    </div>\n                  </div>\n\n                  <div class=\"form-group\" *ngIf=\"field?.type == FieldType.NUMBER\">\n                    <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n                    <div class=\"input-group\">\n                      <span *ngIf=\"field?.prefix\" class=\"input-group-text\">{{field?.prefix}}</span>\n                      <input\n                        [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidNumber(field?.id) || getIfFieldInvalid(field?.id))}'\n                        type=\"text\"\n                        class=\"form-control\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                    </div>\n                    <div class=\"\" *ngIf=\"isSubmitted && getIfInvalidNumber(field?.id)\">\n                      <div class=\"valid-polygon\"></div>\n                      <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                        {{'correctNumber' | translate}}\n                      </div>\n                    </div>\n\n                    <div class=\"\" *ngIf=\"isSubmitted && getIfErrorRequiredField(field?.id)\">\n                      <div class=\"valid-polygon\"></div>\n                      <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                        {{'mandatoryField' | translate}}\n                      </div>\n\n                    </div>\n                  </div>\n\n                  <div class=\"form-group\" *ngIf=\"field?.type == FieldType.EMAIL\">\n                    <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n                    <input\n                      [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidEmail(field?.id) || getIfFieldInvalid(field?.id))}'\n                      type=\"email\"\n                      class=\"form-control\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\"\n                      placeholder=\"email@email.com\" maxlength=\"{{field?.maxLength}}\">\n\n                    <div class=\"\" *ngIf=\"isSubmitted && getIfInvalidEmail(field?.id)\">\n                      <div class=\"valid-polygon\"></div>\n                      <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                        {{'correctEmail' | translate}}\n                      </div>\n\n                    </div>\n                    <div class=\"\" *ngIf=\"isSubmitted && getIfErrorRequiredField(field?.id)\">\n                      <div class=\"valid-polygon\"></div>\n                      <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                        {{'mandatoryField' | translate}}\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(secondQuestion?.id, null, true)\">\n                <div class=\"valid-polygon\"></div>\n                <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                  {{'mandatoryField' | translate}}\n                </div>\n              </div>\n            </div>\n\n\n            <div *ngFor=\"let thirdQuestion of secondQuestion?.questions; let indexOfThirdInnerQuestion=index\">\n              <div *ngIf=\"makeQuestionVisible(secondQuestion, thirdQuestion)\">\n\n                <div class=\"my-3\">\n                  <p class=\"my-0 question-text\" id=\"{{thirdQuestion?.id}}\">{{getTextLang(thirdQuestion?.title)}} <span\n                    *ngIf=\"thirdQuestion?.required\" class=\"question-required\">*</span></p>\n                  <p *ngIf=\"thirdQuestion?.description\"\n                     class=\"my-0 px-lg-4 question-description\">{{getTextLang(thirdQuestion?.description)}}</p>\n                </div>\n\n\n                <div *ngIf=\"thirdQuestion?.type == QuestionType.RADIO\">\n                  <div class=\"form-check\" *ngFor=\"let field of thirdQuestion?.fields;let indexOfField=index\">\n                    <div class=\"px-lg-4 my-2\">\n                      <input [ngClass]='{\"validation-err\": isSubmitted && getIfError(thirdQuestion?.id)}'\n                             class=\"form-check-input\" type=\"radio\" id=\"{{thirdQuestion?.id+indexOfField}}\"\n                             value=\"{{field?.value}}\" formControlName=\"{{thirdQuestion?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                      <label class=\"form-check-label\" for=\"{{thirdQuestion?.id+indexOfField}}\">\n                        {{getTextLang(field?.title)}}\n                      </label>\n                    </div>\n                  </div>\n                  <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(thirdQuestion?.id)\">\n                    <div class=\"valid-polygon\"></div>\n                    <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                      {{'mandatoryField' | translate}}\n                    </div>\n\n                  </div>\n                </div>\n\n                <div *ngIf=\"thirdQuestion?.type == QuestionType.TEXTINPUT\">\n                  <div class=\"form-check\" *ngFor=\"let field of thirdQuestion?.fields\">\n                    <textarea [ngClass]='{\"validation-err\": isSubmitted && (getIfError(thirdQuestion?.id) || getIfFieldInvalid(thirdQuestion?.id))}'\n                              class=\"form-control\" id=\"{{thirdQuestion?.id}}\" formControlName=\"{{thirdQuestion?.id}}\"\n                              maxlength=\"{{field?.maxLength}}\"\n                              rows=\"{{field?.rows}}\"\n                              placeholder=\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n                  </div>\n                  <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(thirdQuestion?.id)\">\n                    <div class=\"valid-polygon\"></div>\n                    <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                      {{'mandatoryField' | translate}}\n                    </div>\n\n                  </div>\n                </div>\n\n                <div *ngIf=\"thirdQuestion?.type == QuestionType.FIELDSET\">\n                  <div *ngFor=\"let field of thirdQuestion?.fields\">\n                    <div class=\"form-check\" *ngIf=\"field?.type == FieldType.CHECKBOX\"\n                         formGroupName=\"{{thirdQuestion?.id}}\">\n                      <input [ngClass]='{\"validation-err\": isSubmitted && getIfError(thirdQuestion?.id, null, true)}'\n                             class=\"form-check-input\" type=\"checkbox\" id=\"{{field?.id}}\" value=\"checked\"\n                             formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                      <label class=\"form-check-label\" for=\"{{field?.id}}\">\n                        {{getTextLang(field?.title)}}\n                      </label>\n                    </div>\n                    <div *ngFor=\"let extraField of field?.fields\">\n                      <div class=\"form-group\" *ngIf=\"showCommentField(thirdQuestion?.id, field?.id, extraField?.id)\">\n                        <div *ngIf=\"extraField?.type == FieldType.TEXTAREA\">\n                          <label for=\"{{extraField?.id}}\">{{getTextLang(extraField?.title)}}</label>\n                          <textarea\n                            [ngClass]='{\"validation-err\": isSubmitted && (getIfError(thirdQuestion?.id, thirdQuestion?.fields) || getIfFieldInvalid(thirdQuestion?.id))}'\n                            class=\"form-control\" id=\"{{extraField?.id}}\" formControlName=\"{{extraField?.id}}\" maxlength=\"{{extraField?.maxLength}}\"\n                            rows=\"{{extraField?.rows}}\"\n                            placeholder=\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n                        </div>\n\n                      </div>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"field?.type == FieldType.STRING\">\n                      <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n\n                      <div class=\"input-group\">\n                        <span *ngIf=\"field?.prefix\" class=\"input-group-text\">{{field?.prefix}}</span>\n                        <input\n                          [ngClass]='{\"validation-err\": isSubmitted && (getIfError(thirdQuestion?.id, thirdQuestion?.fields) || getIfFieldInvalid(thirdQuestion?.id))}'\n                          type=\"text\" class=\"form-control\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                      </div>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"field?.type == FieldType.NUMBER\">\n                      <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n                      <div class=\"input-group\">\n                        <span *ngIf=\"field?.prefix\" class=\"input-group-text\">{{field?.prefix}}</span>\n                        <input\n                          [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidNumber(field?.id) || getIfFieldInvalid(field?.id))}'\n                          type=\"text\"\n                          class=\"form-control\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n                      </div>\n                      <div class=\"\" *ngIf=\"isSubmitted && getIfInvalidNumber(field?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'correctNumber' | translate}}\n                        </div>\n                      </div>\n\n                      <div class=\"\" *ngIf=\"isSubmitted && getIfErrorRequiredField(field?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'mandatoryField' | translate}}\n                        </div>\n\n                      </div>\n                    </div>\n\n\n                    <div class=\"form-group\" *ngIf=\"field?.type == FieldType.EMAIL\">\n                      <label for=\"{{field?.id}}\"> {{getTextLang(field?.title)}}</label>\n                      <input\n                        [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfInvalidEmail(field?.id) || getIfFieldInvalid(field?.id))}'\n                        type=\"email\" placeholder=\"email@email.com\" class=\"form-control\" id=\"{{field?.id}}\"\n                        formControlName=\"{{field?.id}}\" maxlength=\"{{field?.maxLength}}\">\n\n\n                      <div *ngIf=\"isSubmitted && getIfInvalidEmail(field?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'correctEmail' | translate}}\n                        </div>\n\n                      </div>\n                      <div *ngIf=\"isSubmitted && getIfErrorRequiredField(field?.id)\">\n                        <div class=\"valid-polygon\"></div>\n                        <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                          {{'mandatoryField' | translate}}\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n                  <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(thirdQuestion?.id, thirdQuestion?.fields)\">\n                    <div class=\"valid-polygon\"></div>\n                    <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n                      {{'mandatoryField' | translate}}\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n\n          </div>\n        </div>\n\n      </div>\n\n      <div *ngIf=\"question?.type == QuestionType.FIELDSET\">\n        <div *ngFor=\"let field of question?.fields\">\n          <div class=\"px-lg-4\" *ngIf=\"field?.type == FieldType.CHECKBOX\">\n            <div class=\"form-check\" formGroupName=\"{{question?.id}}\">\n              <input class=\"form-check-input\" [ngClass]='{\"validation-err\": isSubmitted && (getIfError(question?.id, null, true) || getIfFieldInvalid(question?.id))}'\n                     type=\"checkbox\" id=\"{{field?.id}}\" formControlName=\"{{field?.id}}\" id=\"flexCheckDefault\" maxlength=\"{{field?.maxLength}}\">\n              <label class=\"form-check-label\" for=\"{{field?.id}}\">\n                {{getTextLang(field?.title)}}\n              </label>\n            </div>\n            <div *ngFor=\"let extraField of field?.fields\">\n              <div class=\"form-group\" *ngIf=\"showCommentField(question?.id, field?.id, extraField?.id)\">\n                <div *ngIf=\"extraField?.type == FieldType.TEXTAREA\">\n                  <label for=\"{{extraField?.id}}\">{{getTextLang(extraField?.title)}}</label>\n                  <textarea [ngClass]='{\"validation-err\": isSubmitted && (getIfErrorRequiredField(field?.id) || getIfFieldInvalid(field?.id) || getIfFieldInvalid(field?.id))}'\n                            class=\"form-control\" id=\"{{extraField?.id}}\" formControlName=\"{{extraField?.id}}\"\n                            maxlength=\"{{extraField?.maxLength}}\"\n                            rows=\"{{extraField?.rows}}\"\n                            placeholder=\"{{extraField?.maxLength ? (('upto' | translate) + ' ' +  extraField?.maxLength + ' ' + ('characters' | translate)) : ''}}\"></textarea>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(question?.id, null, true)\">\n          <div class=\"valid-polygon\"></div>\n          <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n            {{'mandatoryField' | translate}}\n          </div>\n\n        </div>\n      </div>\n\n\n      <div *ngIf=\"question?.type == QuestionType.TEXTINPUT\">\n        <div class=\"form-check\" *ngFor=\"let field of question?.fields\">\n          <textarea placeholder=\"{{field?.maxLength ? (('upto' | translate) + ' ' +  field?.maxLength + ' ' + ('characters' | translate)) : ''}}\" [ngClass]='{\"validation-err\": isSubmitted && (getIfError(question?.id) || getIfFieldInvalid(question?.id))}' class=\"form-control\"\n                    id=\"{{question?.id}}\" formControlName=\"{{question?.id}}\" rows=\"{{field?.rows}}\" maxlength=\"{{field?.maxLength}}\"></textarea>\n        </div>\n        <div class=\"px-lg-4\" *ngIf=\"isSubmitted && getIfError(question?.id)\">\n          <div class=\"valid-polygon\"></div>\n          <div class=\"p-3 form-validation-msg d-flex align-items-center justify-content-center\">\n            {{'mandatoryField' | translate}}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"form-separator\">\n\n  <div class=\"alert alert-danger py-3\" role=\"alert\"\n       *ngIf=\"showErrorMessage\">\n    <div class=\"d-flex justify-content-between\">\n      <div class=\"d-flex pb-1\">\n      <span class=\"material-icons-outlined\">\n        info\n      </span>\n      </div>\n      <button type=\"button\" class=\"btn btn-close d-flex\" data-bs-dismiss=\"alert\" aria-label=\"Close\"\n              (click)=\"closeErrorMessage()\"></button>\n    </div>\n    <p class=\"my-0\">{{'errorMsg' | translate}}</p>\n  </div>\n\n  <div class=\"d-flex flex-md-row flex-column-reverse justify-content-between\">\n    <div class=\"py-1\">\n      <button class=\"form-cancel-button w-100\" type=\"button\" (click)=\"openModal()\">{{'close' | translate}}</button>\n    </div>\n    <div class=\"py-1\">\n      <button class=\"form-submit-button w-100\" type=\"submit\">{{'sendForm' | translate}}</button>\n    </div>\n  </div>\n</form>\n\n\n\n","import { Field, FieldType, JsonForm, Question, QuestionType, Text } from './jsonform.model';\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Subject, takeUntil } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { atLeastOneCheckboxCheckedValidator } from './atLeastOneCheckboxCheckedValidator';\nimport { JsonAnswer } from './jsonanswers.model';\nimport { CustomValidation } from './common/validation.util';\n\n@Component({\n  selector: 'lib-form-generator',\n  styleUrls: ['./form-generator.component.scss'],\n  templateUrl: './form-generator.component.html'\n})\nexport class FormGeneratorComponent implements OnInit, OnDestroy {\n  public formGroup: FormGroup = this.fb.group({});\n\n  @Input()\n  set form(jsonForm: JsonForm) {\n    this.jsonForm$.next(jsonForm);\n  }\n\n  @Input()\n  set answers(answer: JsonAnswer) {\n    this.formAnswers$.next(answer);\n  }\n\n  @Input()\n  set language(lang: string) {\n    this.lang$.next(lang);\n  }\n\n  @Input() set error(error: boolean) {\n    this.showError$.next(error);\n  }\n\n  @Input() set success(success: boolean) {\n    this.showSuccess$.next(success);\n  }\n\n  @Output() toggleCancel = new EventEmitter<boolean>();\n  @Output() answersForm = new EventEmitter<any>();\n\n\n  private currentLang: string = 'et';\n  private componentDestroyed$ = new Subject();\n  private showError$ = new BehaviorSubject<boolean>(false);\n  private showSuccess$ = new BehaviorSubject<boolean>(false);\n  private lang$ = new BehaviorSubject<string>('et');\n  private jsonForm$ = new BehaviorSubject<any>({});\n  private formAnswers$ = new BehaviorSubject<any>({});\n  private invalid = [];\n  jsonForm: JsonForm;\n  formAnswers: JsonAnswer;\n  QuestionType = QuestionType;\n  FieldType = FieldType;\n  isSubmitted: boolean = false;\n  showSuccessMessage: boolean = false;\n  showErrorMessage: boolean = false;\n\n  constructor(private fb: FormBuilder) {\n  }\n\n  ngOnDestroy(): void {\n    this.componentDestroyed$.next(null);\n    this.componentDestroyed$.complete();\n  }\n\n  ngOnInit(): void {\n    this.setFeedbackAlerts();\n\n    combineLatest([\n      this.jsonForm$,\n      this.formAnswers$,\n      this.lang$\n    ]).pipe(\n      takeUntil(this.componentDestroyed$)\n    ).subscribe(([jsonForm, formAnswers, lang]) => {\n      this.currentLang = lang;\n      this.formAnswers = formAnswers\n      if (this.jsonForm != jsonForm) {\n        this.jsonForm = jsonForm;\n        this.jsonForm?.sections.forEach(section => this.createFormRecursive(section?.questions))\n      }\n    });\n  }\n\n  private setFeedbackAlerts() {\n    this.showError$.pipe(\n      takeUntil(this.componentDestroyed$)\n    ).subscribe(value => this.showErrorMessage = value);\n\n    this.showSuccess$.pipe(\n      takeUntil(this.componentDestroyed$)\n    ).subscribe(value => this.showSuccessMessage = value);\n  }\n\n  getTextLang(text: Text): string {\n    if (text) {\n      switch (this.currentLang) {\n        case 'en':\n          return text.en ? text.en : text.et;\n          break;\n        case 'ru':\n          return text.ru ? text.ru : text.et;\n          break;\n        default:\n          return text.et ? text.et : '';\n          break;\n      }\n    }\n    return '';\n  }\n\n  createFormRecursive(questions: Question[]) {\n    for (const question of questions) {\n      if (question.type == QuestionType.FIELDSET) {\n        this.createForFieldSet(question?.fields, question?.required, question?.id)\n      } else {\n        const validatorsToAdd = [];\n        if (question.required) {\n          validatorsToAdd.push(Validators.required);\n        }\n\n        question.enteredValue = this.findFromAnswers(question.id);\n\n        this.formGroup.addControl(\n          question.id,\n          this.fb.control(question.enteredValue, validatorsToAdd)\n        );\n        for (const field of question.fields) {\n          if (field?.fields) {\n            this.createForFieldSet(field.fields, false);\n          }\n        }\n      }\n      if (question?.questions) {\n        this.createFormRecursive(question.questions)\n      }\n    }\n  }\n\n  createForFieldSet(fields: Field[], parentRequired: boolean, parentId?: string) {\n    const checkBoxFields = fields.filter(field => field.type == FieldType.CHECKBOX);\n    const nonCheckBoxFields = fields.filter(field => field.type != FieldType.CHECKBOX);\n\n    if (checkBoxFields.length > 0) {\n      this.formGroup.addControl(\n        parentId,\n        this.buildCategoryFormGroup(parentRequired, checkBoxFields)\n      )\n    }\n    this.createNonCheckBoxFields(nonCheckBoxFields);\n\n    for (const field of fields) {\n      if (field?.fields) {\n        this.createForFieldSet(field.fields, false);\n      }\n    }\n  }\n\n\n  private createNonCheckBoxFields(nonCheckBoxFields: Field[]) {\n    for (const field of nonCheckBoxFields) {\n      const validatorsToAdd = [];\n\n      if (field.type != FieldType.CHECKBOX && field.required) {\n        validatorsToAdd.push(Validators.required);\n      }\n      if (field.type == FieldType.NUMBER) {\n        validatorsToAdd.push(Validators.pattern('^[0-9]*$'))\n      }\n\n      if (field.maxLength) {\n        validatorsToAdd.push(Validators.maxLength(field.maxLength))\n      }\n      if (field.type == FieldType.EMAIL) {\n        validatorsToAdd.push(CustomValidation.email());\n      }\n\n      field.enteredValue = this.findFromAnswers(field.id);\n\n      if (field.enteredValue == null) field.enteredValue = undefined;\n      this.formGroup.addControl(\n        field.id,\n        this.fb.control(field.enteredValue, validatorsToAdd)\n      );\n    }\n  }\n\n  private findFromAnswers(id: string): any {\n    const found = this.formAnswers?.answer_data.find((obj) => {\n      return obj.id === id;\n    });\n    if (found?.value) {\n      return found.value;\n    }\n  }\n\n  private buildCategoryFormGroup(parentRequired: boolean, fields: Field[]): FormGroup {\n    let group = this.fb.group({}, {\n      validators: atLeastOneCheckboxCheckedValidator()\n    });\n    fields.forEach(field => {\n      field.enteredValue = this.setCheckBoxField(field);\n\n      group.addControl(field.id, this.fb.control(field.enteredValue));\n    })\n    return group;\n  }\n\n\n  private setCheckBoxField(field: Field): boolean {\n    let value;\n    field.enteredValue = this.findFromAnswers(field.id);\n    if (field.enteredValue === null || field.enteredValue == 'false') {\n      value = false\n    } else if (field.enteredValue == 'true') {\n      value = true;\n    }\n    return value;\n  }\n\n  private findInvalidControls() {\n    this.invalid = [];\n    const controls = this.formGroup.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        this.invalid.push(name);\n      }\n    }\n    return this.invalid;\n  }\n\n  onFormSubmit() {\n    this.isSubmitted = true;\n    this.findInvalidControls();\n    let shownAndInvalid = this.createShownAndInvalidList();\n    if (shownAndInvalid.length > 0) {\n      this.scrollToFirstElementWithErr(shownAndInvalid[0]);\n    } else {\n      this.answersForm.emit(this.formGroup.getRawValue())\n    }\n  }\n\n  private createShownAndInvalidList(): any[] {\n    let arr = [];\n    this.invalid.forEach(value => {\n      if (document.getElementById(value)) {\n        arr.push(value);\n      };\n    })\n    return arr;\n  }\n\n  private scrollToFirstElementWithErr(id: string) {\n    const el = document.getElementById(id) as HTMLElement;\n    if (el) {\n      const parentElement = el.parentElement;\n      if (parentElement) {\n        const scrollTop = parentElement.offsetTop - 50;\n        window.scroll({\n          top: scrollTop,\n          behavior: 'smooth'\n        });\n      }\n    }\n\n  }\n\n  private gotoTop() {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    });\n  }\n\n  getIfError(id: string, fields?: Field[], checkbox?: boolean): boolean {\n    const controls = this.formGroup.controls;\n\n    let invalidContains = false;\n    if (fields?.length > 0) {\n      let counter = 0;\n      for (const f of fields) {\n        if (controls[f?.id]?.invalid) {\n          counter++;\n        }\n      }\n\n      if (counter < fields?.length) {\n        invalidContains = false;\n      } else {\n        invalidContains = true;\n      }\n\n    } else {\n      if(!checkbox){\n        invalidContains = this.getIfErrorRequiredField(id)\n      } else {\n        invalidContains = this.getIfCheckboxRequiredInvalid(id);\n      }\n    }\n    return invalidContains;\n  }\n\n\n  makeQuestionVisible(question: Question, innerQuestion: Question): boolean {\n    let makeVisible: boolean = false;\n    question.fields.filter(field => (field.value == this.formGroup.get(question.id).value)).forEach(\n      foundField => {\n        if (foundField?.makeVisible && foundField?.makeVisible.indexOf(innerQuestion?.id) > -1) {\n          makeVisible = true;\n        }\n      }\n    )\n    if(!makeVisible){\n      this.resetValues(innerQuestion);\n    }\n    return makeVisible;\n  }\n\n  private resetValues(innerQuestion: Question) {\n    const controls = this.formGroup.controls;\n\n    if (innerQuestion?.type == QuestionType.FIELDSET) {\n      for (const f of innerQuestion?.fields) {\n        if (f.type == FieldType.STRING || f.type == FieldType.NUMBER || f?.type == FieldType.EMAIL) {\n          controls[f?.id].reset();\n        } else if (f.type == FieldType.CHECKBOX) {\n          controls[innerQuestion?.id].get(f?.id).reset();\n        }\n\n      }\n    } else if (innerQuestion?.type == QuestionType.TEXTINPUT || innerQuestion?.type == QuestionType.RADIO) {\n      controls[innerQuestion?.id].reset();\n    }\n  }\n\n  showCommentField(parentId: string, id: string, fieldId: string): boolean {\n    let showComment = false;\n    const controls = this.formGroup.controls;\n    if (controls[parentId].value[id] == true) {\n      showComment = true;\n    } else {\n      controls[fieldId].reset();\n    }\n    return showComment;\n\n  }\n\n  showCommentFieldRadio(id: string, value: string | undefined, fieldId: string): boolean {\n    let showComment = false;\n    if (this.formGroup?.get(id)?.value === value) {\n      showComment = true;\n    }  else {\n      this.formGroup?.get(fieldId).reset();\n    }\n    return showComment;\n  }\n\n  openModal() {\n    this.toggleCancel.emit(true);\n  }\n\n  getIfErrorRequiredField(id: string) {\n    return this.formGroup?.controls[id]?.invalid && this.formGroup?.controls[id]?.getError('required') == true;\n  }\n\n  getIfInvalidEmail(id: string) {\n    return this.formGroup?.controls[id]?.invalid && this.formGroup?.controls[id]?.getError('email') == true;\n  }\n\n  getIfFieldInvalid(id: string) {\n    return this.formGroup?.controls[id]?.invalid;\n  }\n\n  getIfCheckboxRequiredInvalid(id: string) {\n    return this.formGroup?.controls[id]?.invalid  && this.formGroup?.controls[id]?.getError('requireCheckboxToBeChecked') == true;\n  }\n\n  getIfInvalidNumber(id: string) {\n    let pattern = {\n      requiredPattern: ''\n    }\n    pattern = this.formGroup?.controls[id]?.getError('pattern');\n    return this.formGroup?.controls[id]?.invalid && pattern?.requiredPattern == '^[0-9]*$' == true;\n  }\n\n  closeSuccessMessage() {\n    this.showSuccessMessage = false;\n  }\n\n  closeErrorMessage() {\n    this.showErrorMessage = false;\n  }\n}\n\n\n","import { FormGeneratorComponent } from './form-generator.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslatePipe } from './common/translate.pipe';\nimport { SanitizePipe } from './common/sanitize.pipe';\n\n\n@NgModule({\n  declarations: [\n    FormGeneratorComponent,\n    TranslatePipe,\n    SanitizePipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [TranslatePipe],\n  exports: [\n    FormGeneratorComponent\n  ]\n})\nexport class FormGeneratorModule {\n}\n","/*\n * Public API Surface of form-generator\n */\n\nexport * from './lib/form-generator.service';\nexport * from './lib/form-generator.component';\nexport * from './lib/form-generator.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}